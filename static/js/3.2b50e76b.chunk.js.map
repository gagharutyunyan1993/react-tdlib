{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Popup/AlertDialog.js","Components/Popup/BlockSenderDialog.js","Components/Popup/ClearHistoryDialog.js","Utils/Language.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/InputPasswordDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/LeaveVoiceChatDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/OpenGameDialog.js","Components/Popup/OpenUrlDialog.js","Components/Popup/PinMessageDialog.js","Components/Popup/ReportChatDialog.js","Components/Popup/RequestUrlDialog.js","Components/Popup/UnpinMessageDialog.js","Utils/Game.js","Components/Actions.js","Assets/Icons/CallEnd.js","Components/Calls/CallSettingsVideoPreview.js","Components/Calls/GroupCallMicAmplitude.js","Utils/Text.js","Components/Calls/GroupCallSettings.js","Assets/Icons/More.js","Assets/Icons/Mic.js","Assets/Icons/MicOff.js","Components/Calls/CallPanel.js","Components/Calls/Call.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacyCalls.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Calls/BlobDrawable.js","Components/Calls/LineBlobDrawable.js","Components/Calls/TopBar.js","Components/Calls/GroupCallTopPanel.js","Assets/Icons/PlaylistEdit.js","Assets/Icons/Block.js","Assets/Icons/Broom.js","Assets/Icons/Phone.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Calls/GroupCallJoinPanelSubtitle.js","Components/Calls/GroupCallRecentParticipants.js","Components/Calls/GroupCallJoinPanel.js","Components/Message/MessageContext.js","Components/ColumnMiddle/InputBoxHints.js","Assets/Icons/ArrowTopRight.js","Assets/Icons/ShareFilled.js","Components/Message/Markup/KeyboardButton.js","Components/Message/Markup/KeyboardRow.js","Components/Message/Markup/ReplyMarkup.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/SelectChatPlaceholder.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/ForwardTargetChat.js","Components/Popup/ForwardDialog.js","Components/Calls/Button.js","Components/Calls/GroupCallMicButtonHint.js","Components/Calls/GroupCallMicButton.js","Components/Calls/GroupCallPanelButtons.js","Assets/Icons/AddMember.js","Assets/Icons/MicOutlined.js","Assets/Icons/MicOffOutlined.js","Components/Calls/GroupCallParticipant.js","Components/Calls/GroupCallParticipants.js","Assets/Icons/Tune.js","Components/Calls/GroupCallSettingsButton.js","Components/Calls/GroupCallPanel.js","Components/Calls/GroupCall.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Player/PipPlayer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","AlertDialog","handleClose","onClose","params","t","title","message","ok","cancel","getFormattedText","open","manager","modalManager","transitionDuration","classes","paper","DialogContentText","DialogActions","onClick","color","withTranslation","BlockSenderDialog","reportSpam","deleteChat","handleReportSpamChange","handleDeleteChatChange","sender","text","entities","reportText","user_id","LStore","formatString","getUserShortName","getSimpleMarkupEntities","getString","chat_id","location","getChatLocation","address","isChannelChat","aria-labelledby","FormControlLabel","control","Checkbox","checked","onChange","label","ClearHistoryDialog","handleRevokeChange","revoke","chatId","canBeDeletedForAllUsers","getChatShortTitle","ChatTile","isPrivateChat","style","marginLeft","prevChatId","ChatStore","get","can_be_deleted_for_all_users","sprintf","key","args","postProcess","cyrillicInput","isCyrillicPackId","packId","value","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","DeleteMessagesDialog","messageIds","count","confirm","isSupergroup","formatPluralString","prevMessageIds","messageId","MessageStore","InputPasswordDialog","handleChange","e","password","target","handleClickShowPassword","showPassword","getErrorMessage","error","startsWith","str","replace","parseInt","timeString","floor","loading","passwordHint","password_hint","errorMessage","FormControl","fullWidth","InputLabel","htmlFor","Boolean","Input","autoFocus","autoComplete","type","disabled","endAdornment","InputAdornment","position","IconButton","aria-label","edge","FormHelperText","LeaveChatDialog","getDeleteDialogText","chat","supergroup","SupergroupStore","supergroup_id","is_channel","LeaveVoiceChatDialog","discard","handleDiscardChange","NotificationTimer","handleTimer","Date","seconds","expire","timeout","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","setInterval","Typography","toFixed","CircularProgress","size","variant","OpenGameDialog","game","userId","getUserFullName","OpenUrlDialog","url","overflowWrap","PinMessageDialog","prevMessageId","ReportChatDialog","handleReport","ListItem","button","ListItemText","primary","RequestUrlDialog","value1","value2","handleValue1Change","handleValue2Change","domain","bot_user_id","request_write_access","text1","UserStore","getMyId","entities1","option1","option2","text2","entities2","display","flexDirection","UnpinMessageDialog","openGameInBrowser","sharedPreferences","JSON","parse","localStorage","getItem","existing","hash","addHash","encodeURIComponent","chars","array","Uint8Array","window","crypto","getRandomValues","setItem","stringify","index","indexOf","curHash","substring","newWindow","opener","Actions","leaveChat","clearHistory","deleteMessages","pinMessage","unpinMessage","alert","openUrlAlert","openGameAlert","requestUrlAlert","inputPasswordAlert","requestBlockSenderAlert","leaveVoiceChatAlert","reportChatAlert","onClientUpdateReportChat","update","onClientUpdateBlockSender","onClientUpdateInputPasswordAlert","onPassword","onClientUpdateLeaveVoiceChatAlert","onClientUpdateOpenGameAlert","isVerified","handleOpenGameContinue","onClientUpdateOpenUrlAlert","ask","handleOpenUrlContinue","onClientUpdateRequestUrlAlert","onClientUpdateSnackbar","enqueueSnackbar","closeSnackbar","action","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","onClientUpdateAlert","onClientUpdateUnpinMessage","isMeChat","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","onClientUpdateLeaveChat","onClientUpdateClearHistory","handleClearHistoryContinue","AppStore","getChatId","request","remove_from_chat_list","handleScheduledAction","handleLeaveContinue","a","undo","getLeaveChatNotification","requests","isChatMember","push","isCreator","status","is_member","handleDeleteMessagesContinue","clearSelection","message_ids","clientUpdateType","snackKey","clientUpdate","inProgress","addScheduledAction","Number","MAX_VALUE","persist","removeScheduledAction","pinMessageAction","canPinMessages","unpinMessageAction","closePinned","unpinAllMessages","data","getClientData","clientData","unpinned","handleAlertContinue","onResult","event","preventDefault","handleRequestUrlContinue","values","buttonId","message_id","button_id","allow_write_access","httpUrl","handleInputPasswordContinue","onCloseDialog","handleBlockSenderContinue","blockSender","reason","reportChat","canDeleteChat","handleLeaveVoiceChatContinue","resultParams","handleReportChatContinue","showSnackbar","Close","on","off","PureComponent","enhance","compose","withSnackbar","CallSettingsVideoPreview","stream","video","document","getElementById","srcObject","autoPlay","muted","GroupCallMicAmplitude","audioContext","AudioContext","webkitAudioContext","timer","addAnalyser","removeAnalyser","streamSource","createMediaStreamSource","analyser","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","connect","analyse","disconnect","frequencyBinCount","getByteFrequencyData","getAmplitude","bars","viewBox","fill","strokeWidth","width","copy","navigator","clipboard","writeText","console","copyOld","element","successful","createElement","contentEditable","readOnly","all","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","focus","select","execCommand","Error","removeChild","GroupCallSettings","onKeyDown","modals","isComposing","openDeviceSelect","handleCloseDeviceSelect","stopPropagation","handleCancel","onUpdateGroupCall","groupCallId","group_call","muteNewParticipants","mute_new_participants","allowedChangeMuteNewParticipants","allowed_change_mute_new_participants","onDeviceChange","mediaDevices","enumerateDevices","devices","CallStore","outputDeviceId","getOutputDeviceId","filter","kind","deviceId","inputAudioDeviceId","getInputAudioDeviceId","inputAudio","inputVideoDeviceId","getInputVideoDeviceId","inputVideo","handleOutputChange","handleCopyLink","currentGroupCall","username","getChatUsername","telegramUrlOption","handleOpenDeviceSelect","handleSelectDevice","setOutputDeviceId","currentCall","streamManager","inputAudioStream","getAudioTracks","getStream","audio","exact","inputVideoStream","getVideoTracks","handleEnd","call","leaveGroupCall","handleMuteNewParticipants","toggleMuteNewParticipants","handleDone","setInputAudioDeviceId","setInputVideoDeviceId","keyboardHandler","KeyboardHandler","addEventListener","KeyboardManager","add","removeEventListener","remove","closeStreams","callId","outputDeviceInfo","find","outputString","inputAudioDeviceInfo","inputAudioString","inputVideoDeviceInfo","inputVideoString","items","map","canManage","canManageVoiceChats","onMouseDown","Switch","disableRipple","root","switchBase","colorSecondary","track","prevGroupCallId","prevCallId","muteSettings","groupCall","CallPanel","onClientUpdateCallMediaState","currentCallId","mediaState","inputMediaState","outputMediaState","handleUpdateCall","forceUpdate","handleFullScreenChange","fullScreen","isFullScreen","handleClick","handleAccept","p2pAcceptCall","handleDiscard","closeCallPanel","setTimeout","p2pHangUp","handleOpenSettings","handleCloseContextMenu","openSettings","handleCloseSettings","exitFullscreen","handleShareScreen","screenStream","p2pStopScreenSharing","p2pStartScreenSharing","handleFullScreen","requestFullscreen","handleOpenContextMenu","currentTarget","anchorEl","handleAudio","p2pAudioEnabled","handleVideo","videoState","p2pVideoEnabled","callPanelRef","createRef","contextMenu","left","p2pGetMediaState","callPanel","current","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","method","mozRequestFullScreen","webkitRequestFullscreen","mozCancelFullScreen","webkitExitFullscreen","p2pGet","is_outgoing","screenSharing","outputVideoStyle","isFirefox","transform","videoRotation","classNames","ref","p2pGetCallStatus","Popover","container","getContentAnchorEl","disableRestoreFocus","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","ListItemClasses","focusVisible","TouchRippleProps","child","rippleVisible","onDoubleClick","MicOff","CallEnd","p2pIsCallReady","Mic","Call","onClientUpdateGroupCallFullScreen","fullscreen","closeGroupCallPanel","handleMouseDown","nativeEvent","which","mouseDownRoot","pageX","pageY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","onWindowResize","player","oldLeft","oldTop","normalizePosition","startLeft","startTop","setPosition","pipParams","documentElement","clientWidth","clientHeight","prevLeft","prevTop","checkGlue","playerWidth","playerHeight","documentWidth","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","clamp","glueTop","glueBottom","DialogTitle","onFastUpdatingComplete","onUpdateChatTitle","nextProps","nextState","showSavedMessages","isChatVerified","getChatTitle","defaultProps","DialogStatus","onUpdateUserStatus","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","basic_group","onUpdateSupergroup","externalSubtitle","Chat","onSelect","onTileSelect","showStatus","big","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","alignItems","ListItemIcon","tabIndex","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","padding","scroll","filtersRef","item","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","set","ContextMenu","handleOpenMessage","openChat","handleForward","forwardMessages","handleDelete","anchorPosition","showOpenMessage","can_be_forwarded","can_be_deleted_only_for_self","anchorReference","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","photo","clientX","clientY","nextContext","FileStore","openMedia","minithumbnail","miniSrc","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","sizes","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","thumbnail","file","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","tileColor","abs","charCodeAt","draggable","alt","SharedLink","webPage","caption","decodedUrl","decodeURI","hostname","URL","split","punycode","ToUnicode","content","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","trim","links","mail","typeUrl","getTitleFromUrl","SafeLink","getFirstLetter","entity","SharedVoiceNote","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","getDurationString","SharedMediaContent","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","query","sender_user_id","from_message_id","limit","finally","currentParams","total_count","concat","isValidMessage","incompleteResults","setItems","store","getStore","loadMessageContents","onLoadMigratedNext","handleOpen","popup","openUser","loadUsersContent","loadChatsContent","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","height","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","voice_note","ChatDetails","loadContent","loadChatContents","getGroupChatMembers","getChatFullInfo","handleUsernameHint","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","users","member","user","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","toLowerCase","onScroll","List","wordWrap","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","chatIds","getChatUserId","offset_chat_id","chat_ids","minHeight","chats","SharedMediaHeader","handleSearch","searchInputRef","innerText","onSearch","onCloseSearch","openSearch","handleKeyDown","keyCode","handleKeyUp","innerHTML","handlePaste","plainText","clipboardData","getData","ANIMATION_DURATION_200MS","placeholder","suppressContentEditableWarning","onKeyUp","onPaste","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","force","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","cx","cy","Status","onUpdateMessageSendAcknowledged","sendingState","old_message_id","sending_state","newMessageId","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","Pending","Sent","Succeeded","isMessageUnread","DialogMeta","getLastMessageDate","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","handleMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","offset_order","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","dialog","hidden","isLastPinned","ApplicationStore","deleteChatTitle","getDeleteChatTitle","isSelected","isUnread","isArchived","showOnline","showGroupCall","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","overScanCount","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollBottom","max","removeItem","clear","reset","archiveChatIds","meChat","cacheContacts","contacts","cache","authorization_state","CacheManager","cacheKey","filesKey","contactsKey","onClientUpdate","clearDataUrls","addTdLibListener","removeTdLibListener","useTestDC","parameters","STORAGE_CACHE_TEST_KEY","STORAGE_CACHE_KEY","STORAGE_CONTACTS_TEST_KEY","STORAGE_CONTACTS_KEY","STORAGE_FILES_TEST_KEY","STORAGE_FILES_KEY","filtersKey","STORAGE_FILTERS_TEST_KEY","STORAGE_FILTERS_KEY","registerKey","STORAGE_REGISTER_TEST_KEY","STORAGE_REGISTER_KEY","saveInternal","leading","trailing","promises","load","catch","Promise","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","EventEmitter","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","openSupportChat","searchChat","getAuthorizationState","showClose","mainMenuControl","Menu","disableAutoFocusItem","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","openChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","chatListEquals","scrollToTop","loadFirstSlice","hiddenChats","delete","initDB","saveCache","onSaveCache","onUpdateChatPosition","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","stub","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offsetChat","log","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","shortTitle","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","selected","tile","UserTile","SectionHeader","command","multiline","children","Search","blur","concatSearchResults","arr","j","searchText","sessionId","savedMessages","localPromise","latinText","latinLocalPromise","cyrillicText","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","SEARCH_GLOBAL_TEXT_MIN","globalPromises","globalPromise","latinTrimmedText","USERNAME_LENGTH_MIN","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","savedMessagesPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","logOut","More","LogOut","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","wrapperRef","searchRef","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","play","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","chat_filters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","themeOptions","palette","disableEnforceFocus","aria-describedby","component","FormLabel","focused","RadioGroup","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","sendByCtrlEnterOption","SEND_BY_CTRL_ENTER_KEY","sendByCtrlEnter","Colorize","handleSetOption","inputProps","isMacOS","Language","languages","language_packs","native_name","handleMuteFor","property","settings","mute_for","newSettings","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","unblockSender","senders","PrivacyCalls","prevAllowCalls","prevAllowP2PCalls","handleChangeAllowCalls","allowCallsValue","handleChangeAllowP2PCalls","allowP2PCallsValue","setSettings","allowCalls","allowP2PCalls","prevAllowCallsValue","rules","added","setting","prevAllowP2PCallsValue","PrivacySecurity","openActiveSessions","openBlockedUsers","openCalls","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","closeCalls","sessionsCount","usersCount","RemoveMember","Device","Settings","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","AddParticipants","newArray","selectedItems","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","showArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","archiveTitle","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","diff","onClientUpdateRecordStop","clearTimeout","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","altKey","ctrlKey","metaKey","code","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","link","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendText","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","chatSelectOptions","switchInline","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","reply_to_message_id","input_message_text","disable_web_page_preview","clear_draft","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","input_message_content","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","getTextAndCaretPosition","_range","cloneRange","selectNodeContents","endOffset","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","oncanplay","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","usernameOnly","searchResultUsernames","cancelDelayRunnable","searchPosition","lastText","lastUsernameOnly","resultStartPosition","resultLength","foundType","ch","lastPosition","closeHints","usersMap","usernameString","hasSpace","newResult","newResultsMap","object","isMeUser","isDeletedUser","showUsersResult","message_thread_id","notifyDataSetChanged","notify","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","onUpdateChatLastMessage","hasLastMessage","onUpdateChatIsBlocked","isBlocked","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","handleUnblock","handleStartBot","botStartMessage","botUserId","parameter","sendBotStartMessage","isBotChat","permissions","can_send_messages","rotateZ","angle","originX","originY","X","Y","BlobDrawable","maxRadius","minRadius","cubicBezierK","N","L","tan","radius","radiusNext","angleNext","progress","speed","pointStart","pointEnd","generateBlob","angleDif","radDif","random","amplitude","speedScale","cX","cY","canvas","paint","getContext","ctx","beginPath","progressNext","r1","r2","angle1","angle2","l","mapPoints","moveTo","bezierCurveTo","closePath","points","result1","result2","LineBlobDrawable","bottom","pinnedTop","progressToPinned","lineTo","WeavingState","stateId","shader","createGradient","fillStyle","getGradientFromType","dt","x0","y0","gradient","createLinearGradient","addColorStop","TopBar","handleDevicePixelRatioChanged","scale","devicePixelRatio","topBar","handleResize","resizeHandler","resizing","resizeCanvas","invokeDraw","handleBlur","raf","mounted","lbd","lbd1","lbd2","currentState","previousState","progressToState","newTime","lastUpdateTime","animateToAmplitude","animateAmplitudeDiff","amplitude2","animateAmplitudeDiff2","top1","top2","clearRect","alpha","paint1","globalAlpha","setCurrentState","animated","states","matchMedia","setAmplitude","GroupCallTopPanel","onClientUpdateGroupCallAmplitudeChange","amplitudes","topBarRef","onUpdateGroupCallParticipant","group_call_id","participant","getCallStatus","connected","switchButtonState","onClientUpdateGroupCall","onClientUpdateGroupCallConnectionState","saveMessagesScrollPosition","restoreMessagesScrollPosition","handleMicrophone","can_unmute_self","changeUserMuted","handleLeave","handleOpenGroupCall","openGroupCallPanel","elements","getElementsByClassName","openPanel","offsetHeightDiff","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","handleSwitchBlocked","getChatSender","requestBlockSender","handleStartGroupCall","showAlert","startGroupCall","handleStartP2PCall","p2pStartCall","openReportChat","voice_chat_group_call_id","canClearHistory","hasOnePinnedMessage","switchBlocked","canSwitchBlocked","manageVoiceChats","reported","canBeReported","called","canBeCalled","p2pCallsEnabled","Broom","Block","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","timingFunction","animateOnMount","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","canReport","PinnedMessageBorder","drawRect","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","currentMessageId","currentPrevMessageId","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","prevMessage","prevContent","prevPropsChatId","Header","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","handlePinClick","getConnectionState","showProgressAnimation","HeaderProgress","PlaylistEdit","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","Slider","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","handlePlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","rate","Time","onClientUpdateMediaTime","currentTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","HeaderPlayer","handleSeekForward","videoRef","handleSeek","PLAYER_SEEK_STEP_BIG","handleSeekBackward","handleSeekTo","seekTime","paused","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","getCurrentTime","playing","srcSource","pause","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","setCurrentTime","handleLoadedMetadata","hasVoice","buffered","videoWidth","videoHeight","captureStream","mozCaptureStream","handleProgress","handleTimeUpdate","handleCanPlay","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","remote","unique_id","clearCurrentTime","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","disablePictureInPicture","onLoadedMetadata","onCanPlay","onPlay","onPause","onEnded","onTimeUpdate","onProgress","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","for_album","for_comment","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canSendMessages","canBePinned","isServiceMessage","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","ids","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","isCall","isCallMessage","albumHistoryEquals","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","round","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","GroupCallJoinPanelSubtitle","participantCount","participant_count","participantsOnly","GroupCallRecentParticipants","speakers","recent_speakers","updateSpeakers","PROFILE_PHOTO_PRELOAD_TIME_MS","lhs","rhs","is_speaking","speakersEquals","speaking","prevId","GroupCallJoinPanel","handleUpdateChatVoiceChat","handleUpdateGroupCall","handleClientUpdateGroupCall","isCurrent","is_joined","joinGroupCall","MessageContext","createContext","withMessage","MessageComponent","Consumer","handleCallbackQueryAnswer","via_bot_user_id","show_alert","showOpenGameAlert","is_verified","showOpenUrlAlert","tryTelegraph","payload","game_short_name","short_name","passwordState","has_password","showInputPasswordAlert","onError","forward_text","skip_confirm","showRequestUrlAlert","in_current_chat","inline","setText","openChatSelect","ArrowTopRight","ShareFilled","KeyboardRow","row","ReplyMarkup","markup","rows","Provider","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","totalLength","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","updateMessageContent","handleUpdateMessageContentAndEditedOnce","updateMessageEdited","newEmojiMatches","getEmojiMatches","startMessageEditing","stopMessageEditing","mouseDown","mouseOut","openReply","reply_markup","isMetaBubble","getMessageStyle","showMeta","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateStartMessageEditing","history","scrollBottomAfterEditing","onClientUpdateStopMessageEditing","scrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","ignoreUnread","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","ttl","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","inputMessageContent","forward","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","handleInViewport","elementRect","contentRect","getBoundingClientRect","STICKER_SET","inViewportFunc","SelectChatPlaceholder","closeChatSelect","DialogDetails","onClientUpdateClearOpenChatOptions","chatOpenOptions","onClientUpdateChatSelect","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","ForwardTargetChat","ForwardDialog","getPublicMessageLink","getChatsPromise","publicMessageLink","getForwardPhotoSize","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","handleSearchKeyDown","handleSearchKeyUp","searchResults","globalSearchResults","chatsSource","hasSearchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","OvershootInterpolator","tension","mTension","DecelerateInterpolator","factor","mFactor","pow","AccelerateInterpolator","mDoubleFactor","createRadialGradient","RadialProgressView","setUseSelfAlpha","useSelfAlpha","setAlpha","setNoProgress","noProgress","setProgress","currentProgress","animatedProgress","progressAnimationStart","progressTime","updateAnimation","radOffset","rotationTime","circle","circleProgress","currentProgressTime","risingTime","risingCircleLength","currentCircleLength","accelerateInterpolator","getInterpolation","decelerateInterpolator","old","progressDiff","setSize","setStrokeWidth","lineWidth","updateProgressPaint","setProgressColor","progressColor","toCircle","circleRect","translate","radStart","drawingCircleLength","radLength","arc","progressPaint","restore","isCircle","lineCap","strokeStyle","Button","switchProgress","tinyWaveDrawable","buttonDefaultRadius","buttonRadius","bigWaveDrawable","canSwitchProgress","radialProgressView","invalidateColors","lightingColor","fillColors","colorsTmp","oldLight","newLight","blendARGB","currentLightColor","radialGradient","showWaves","showLighting","showWavesProgress","showLightingProgress","showWavesProgressInterpolated","overshootInterpolator","resetTransform","paintTmp","scaleLight","drawCircle","updateMuteButton","muteButtonState","updateMuteButtonState","radialPaint","generateInitBlob","colorsToSet","color1","color2","c1","c2","inverseRatio","g","strToHex","justifyContent","cursor","GroupCallMicButtonHint","GroupCallMicButton","buttonRef","is_muted","GroupCallPanelButtons","GroupCallParticipant","handleOpenProfile","handleSendMessage","handleUnmute","is_muted_for_all_users","is_muted_for_current_user","can_be_muted_for_all_users","can_be_unmuted_for_all_users","prevUserId","participants","GroupCallParticipants","participantsMap","updateParticipants","preloadContent","manageGroupCalls","AddMember","GroupCallSettingsButton","Tune","GroupCallPanel","GroupCall","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","videoInfo","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","thumb","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","getCurrent","oldUrl","scrollToHash","handleBack","instantViewerRef","articleRef","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","scrollIntoView","getInnerBlocks","IVContext","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","PipPlayer","onClientUpdateMediaShortcut","PLAYER_SEEK_STEP_SMALL","handleVolume","PLAYER_VOLUME_STEP","handleSeekProgress","PLAYER_PLAYBACKRATE_STEP","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","handleLoadedData","waiting","handlePause","handleVolumeChange","onVolumeChange","handleWaiting","startStopPlayer","handlePlayerMouseDown","pip","offsetX","offsetY","draggingTime","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","mouseOverTimeout","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","connectPlayer","disconnectPlayer","pipPlayer","onloadedmetadata","onloadeddata","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","bufferedTime","Player","getBufferedTime","bufferedValue","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","onMouseMove","onBlur","Hint","rail","onChangeCommitted","FullScreen","Progress","prevVideo","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateCallPanel","onClientUpdateGroupCallPanel","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/3.2b50e76b.chunk.js","sourcesContent":["/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nclass Animator {\r\n    constructor(duration, options = []) {\r\n        this.options = options;\r\n        this.duration = duration;\r\n    }\r\n\r\n    static outSine(n) {\r\n        return Math.sin((n * Math.PI) / 2);\r\n    }\r\n\r\n    start = () => {\r\n        this.stopped = false;\r\n        this.id = requestAnimationFrame(this.startInternal);\r\n    };\r\n\r\n    startInternal = timeStamp => {\r\n        const { startTime, duration } = this;\r\n\r\n        this.startTime = timeStamp;\r\n        this.endTime = startTime + duration;\r\n        this.draw(timeStamp);\r\n    };\r\n\r\n    draw = now => {\r\n        const { stopped, duration, startTime, options } = this;\r\n\r\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\r\n            this.stopped = true;\r\n        }\r\n\r\n        if (stopped) return;\r\n\r\n        const time = Math.min(now - startTime, duration);\r\n        const p = duration === 0 ? 1.0 : time / duration;\r\n        const val = Animator.outSine(p);\r\n\r\n        options.forEach(x => {\r\n            const { from, to, func } = x;\r\n            x.last = from + (to - from) * val;\r\n            func(x.last);\r\n        });\r\n\r\n        this.id = requestAnimationFrame(this.draw);\r\n    };\r\n\r\n    stop = () => {\r\n        this.stopped = true;\r\n        cancelAnimationFrame(this.id);\r\n    };\r\n}\r\n\r\nexport default Animator;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickerPreview.css';\r\n\r\nclass StickerPreview extends React.Component {\r\n    state = {\r\n        emoji: null,\r\n        prevPropsSticker: null\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { sticker } = props;\r\n        const { prevPropsSticker } = state;\r\n\r\n        if (sticker && prevPropsSticker) {\r\n            return {\r\n                prevPropsSticker: sticker,\r\n                emoji: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { sticker } = this.props;\r\n\r\n        if (sticker && sticker !== prevProps.sticker) {\r\n            this.loadStickerEmojis(sticker);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { sticker } = this.props;\r\n\r\n        if (sticker) {\r\n            this.loadStickerEmojis(sticker);\r\n        }\r\n    }\r\n\r\n    loadStickerEmojis = sticker => {\r\n        const { sticker: file } = sticker;\r\n        const { id } = file;\r\n\r\n        TdLibController.send({\r\n            '@type': 'getStickerEmojis',\r\n            sticker: { '@type': 'inputFileId', id }\r\n        }).then(result => {\r\n            if (this.props.sticker === sticker) {\r\n                this.setState({\r\n                    emoji: result.emojis.join(' ')\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { sticker } = this.props;\r\n        const { emoji } = this.state;\r\n\r\n        if (!sticker) return null;\r\n\r\n        return (\r\n            <div className='sticker-preview'>\r\n                <div className='sticker-preview-emoji'>{emoji}</div>\r\n                <Sticker\r\n                    sticker={sticker}\r\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\r\n                    source={StickerSourceEnum.PREVIEW}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStickerPreview.propTypes = {\r\n    sticker: PropTypes.object\r\n};\r\n\r\nexport default StickerPreview;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\r\n    'Smile'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { getDisplayName } from './Utils/HOC';\r\nimport { MAX_SNACK } from './Constants';\r\n\r\nfunction withSnackbarNotifications(WrappedComponent) {\r\n    class NotificationsWrapper extends React.Component {\r\n        render() {\r\n            return (\r\n                <SnackbarProvider maxSnack={MAX_SNACK}>\r\n                    <WrappedComponent {...this.props} />\r\n                </SnackbarProvider>\r\n            );\r\n        }\r\n    }\r\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\r\n\r\n    return NotificationsWrapper;\r\n}\r\n\r\nexport default withSnackbarNotifications;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { getFormattedText } from '../../Utils/Message';\r\nimport './AlertDialog.css';\r\n\r\nclass AlertDialog extends React.Component {\r\n\r\n    handleClose = result => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose && onClose(result);\r\n    };\r\n\r\n    render() {\r\n        const { params, t } = this.props;\r\n        if (!params) return null;\r\n\r\n        let { title, message, ok, cancel } = params;\r\n\r\n        if (message['@type'] === 'formattedText') {\r\n            message = getFormattedText(message, t, {});\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {message}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    { cancel && (\r\n                        <Button onClick={() => this.handleClose(false)} color='primary'>\r\n                            {cancel}\r\n                        </Button>\r\n                    )}\r\n                    { ok && (\r\n                        <Button onClick={() => this.handleClose(true)} color='primary'>\r\n                            {ok}\r\n                        </Button>\r\n                    )}\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nAlertDialog.propTypes = {\r\n    params: PropTypes.object\r\n};\r\n\r\nexport default withTranslation()(AlertDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { getUserShortName } from '../../Utils/User';\r\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\r\nimport { getChatLocation, isChannelChat } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './BlockSenderDialog.css';\r\n\r\nclass BlockSenderDialog extends React.Component {\r\n    state = {\r\n        reportSpam: true,\r\n        deleteChat: true\r\n    };\r\n\r\n    handleReportSpamChange = () => {\r\n        const { reportSpam } = this.state;\r\n\r\n        this.setState({\r\n            reportSpam: !reportSpam\r\n        });\r\n    };\r\n\r\n    handleDeleteChatChange = () => {\r\n        const { deleteChat } = this.state;\r\n\r\n        this.setState({\r\n            deleteChat: !deleteChat\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { sender, onClose, t } = this.props;\r\n        if (!sender) return null;\r\n\r\n        const { reportSpam, deleteChat } = this.state;\r\n\r\n        let title = null;\r\n        let text = null;\r\n        const entities = [];\r\n        let reportText = null;\r\n        switch (sender['@type']) {\r\n            case 'messageSenderUser': {\r\n                const { user_id } = sender;\r\n\r\n                title = LStore.formatString('BlockUserTitle', getUserShortName(user_id, t));\r\n                text = LStore.formatString('BlockUserAlert', getUserShortName(user_id, t));\r\n                text = getSimpleMarkupEntities(text, entities);\r\n                reportText = LStore.getString('BlockContact');\r\n                break;\r\n            }\r\n            case 'messageSenderChat': {\r\n                const { chat_id } = sender;\r\n\r\n                const location = getChatLocation(chat_id);\r\n                if (location) {\r\n                    title = LStore.getString('ReportUnrelatedGroup');\r\n                    if (location.address) {\r\n                        text = LStore.formatString('ReportUnrelatedGroupText', location.address);\r\n                        text = getSimpleMarkupEntities(text, entities);\r\n                    } else {\r\n                        text = LStore.getString('ReportUnrelatedGroupTextNoAddress');\r\n                    }\r\n                } else {\r\n                    title = LStore.getString('ReportSpamTitle');\r\n                    if (isChannelChat(chat_id)) {\r\n                        text = LStore.getString('ReportSpamAlertChannel');\r\n                    } else {\r\n                        text = LStore.getString('ReportSpamAlertGroup');\r\n                    }\r\n                }\r\n                reportText = LStore.getString('ReportChat');\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false, null)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>\r\n                    {title}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {getFormattedText({ '@type': 'formattedText', text, entities })}\r\n                    </DialogContentText>\r\n                    { sender['@type'] === 'messageSenderUser' && (\r\n                        <div className='block-sender-params'>\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={reportSpam} onChange={this.handleReportSpamChange} color='primary' />}\r\n                                label={t('DeleteReportSpam')}\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={deleteChat} onChange={this.handleDeleteChatChange} color='primary' />}\r\n                                label={t('DeleteThisChat')}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, null)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, sender && sender['@type'] === 'messageSenderUser' ? { reportSpam, deleteChat } : null)} color='secondary'>\r\n                        {reportText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nBlockSenderDialog.propTypes = {\r\n    sender: PropTypes.object\r\n};\r\n\r\nexport default withTranslation()(BlockSenderDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport ChatTile from '../Tile/ChatTile';\r\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ChatStore from '../../Stores/ChatStore';\r\n\r\nclass ClearHistoryDialog extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n        const { prevChatId } = state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\r\n\r\n        if (prevChatId !== chatId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                canBeDeletedForAllUsers,\r\n                revoke: canBeDeletedForAllUsers\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleRevokeChange = () => {\r\n        const { revoke } = this.state;\r\n\r\n        this.setState({ revoke: !revoke });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClose, t } = this.props;\r\n        const { canBeDeletedForAllUsers, revoke } = this.state;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                open={true}\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false, revoke)}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className='delete-dialog-content'>\r\n                        <ChatTile chatId={chatId} />\r\n                        <div>\r\n                            <DialogContentText id='delete-dialog-description'>\r\n                                Are you sure you want clear history?\r\n                            </DialogContentText>\r\n                            {\r\n                                canBeDeletedForAllUsers && (\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\r\n                                        }\r\n                                        label={\r\n                                            isPrivateChat(chatId)\r\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\r\n                                                : 'Delete for all members'\r\n                                        }\r\n                                        style={{ marginLeft: 0 }}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nClearHistoryDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(ClearHistoryDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport OptionStore from '../Stores/OptionStore';\r\n\r\nexport function sprintf(t, key, ...args) {\r\n    return t(key, { postProcess: 'sprintf', sprintf: args });\r\n}\r\n\r\nlet cyrillicInput = null;\r\n\r\nfunction getCyrillicInputMap() {\r\n    return new Map([\r\n        ['q', 'й'],\r\n        ['w', 'ц'],\r\n        ['e', 'у'],\r\n        ['r', 'к'],\r\n        ['t', 'е'],\r\n        ['y', 'н'],\r\n        ['u', 'г'],\r\n        ['i', 'ш'],\r\n        ['o', 'щ'],\r\n        ['p', 'з'],\r\n        ['[', 'х'],\r\n        [']', 'ъ'],\r\n        ['a', 'ф'],\r\n        ['s', 'ы'],\r\n        ['d', 'в'],\r\n        ['f', 'а'],\r\n        ['g', 'п'],\r\n        ['h', 'р'],\r\n        ['j', 'о'],\r\n        ['k', 'л'],\r\n        ['l', 'д'],\r\n        [';', 'ж'],\r\n        [\"'\", 'э'],\r\n        ['\\\\', 'ё'],\r\n        ['z', 'я'],\r\n        ['x', 'ч'],\r\n        ['c', 'с'],\r\n        ['v', 'м'],\r\n        ['b', 'и'],\r\n        ['n', 'т'],\r\n        ['m', 'ь'],\r\n        [',', 'б'],\r\n        ['.', 'ю']\r\n    ]);\r\n}\r\n\r\nfunction isCyrillicPackId(packId) {\r\n    if (!packId) return false;\r\n\r\n    const { value } = packId;\r\n    if (!value) return false;\r\n\r\n    return value.value === 'ru';\r\n}\r\n\r\nfunction getCyrillicInput(input) {\r\n    if (!input) return null;\r\n    if (!input.length) return null;\r\n\r\n    const currentPackId = OptionStore.get('language_pack_id');\r\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\r\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\r\n    if (!hasCyrillicPackId) return null;\r\n\r\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\r\n\r\n    let output = '';\r\n    for (let i = 0; i < input.length; i++) {\r\n        if (cyrillicInput.has(input[i])) {\r\n            output += cyrillicInput.get(input[i]);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return output === '' ? null : output;\r\n}\r\n\r\nlet latinInput = null;\r\n\r\nfunction getLatinInputMap() {\r\n    return new Map([\r\n        ['й', 'q'],\r\n        ['ц', 'w'],\r\n        ['у', 'e'],\r\n        ['к', 'r'],\r\n        ['е', 't'],\r\n        ['н', 'y'],\r\n        ['г', 'u'],\r\n        ['ш', 'i'],\r\n        ['щ', 'o'],\r\n        ['з', 'p'],\r\n        ['х', '['],\r\n        ['ъ', ']'],\r\n        ['ф', 'a'],\r\n        ['ы', 's'],\r\n        ['в', 'd'],\r\n        ['а', 'f'],\r\n        ['п', 'g'],\r\n        ['р', 'h'],\r\n        ['о', 'j'],\r\n        ['л', 'k'],\r\n        ['д', 'l'],\r\n        ['ж', ';'],\r\n        ['э', \"'\"],\r\n        ['ё', '\\\\'],\r\n        ['я', 'z'],\r\n        ['ч', 'x'],\r\n        ['с', 'c'],\r\n        ['м', 'v'],\r\n        ['и', 'b'],\r\n        ['т', 'n'],\r\n        ['ь', 'm'],\r\n        ['б', ','],\r\n        ['ю', '.']\r\n    ]);\r\n}\r\n\r\nfunction getLatinInput(input) {\r\n    if (!input) return null;\r\n    if (!input.length) return null;\r\n\r\n    latinInput = latinInput || getLatinInputMap();\r\n\r\n    let output = '';\r\n    for (let i = 0; i < input.length; i++) {\r\n        if (latinInput.has(input[i])) {\r\n            output += latinInput.get(input[i]);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return output === '' ? null : output;\r\n}\r\n\r\nexport { getCyrillicInput, getLatinInput };\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\r\nimport { sprintf } from '../../Utils/Language';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\n\r\nclass DeleteMessagesDialog extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageIds } = props;\r\n        const { prevChatId, prevMessageIds } = state;\r\n\r\n        let canBeDeletedForAllUsers = true;\r\n        for (let messageId of messageIds) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeDeletedForAllUsers = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_deleted_for_all_users) {\r\n                canBeDeletedForAllUsers = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageIds: messageIds,\r\n                canBeDeletedForAllUsers,\r\n                revoke: canBeDeletedForAllUsers\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleRevokeChange = () => {\r\n        const { revoke } = this.state;\r\n\r\n        this.setState({ revoke: !revoke });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageIds, onClose, t } = this.props;\r\n        const { canBeDeletedForAllUsers, revoke } = this.state;\r\n\r\n        const count = messageIds ? messageIds.length : 0;\r\n\r\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\r\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\r\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false, revoke)}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {confirm}\r\n                    </DialogContentText>\r\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\r\n                        <FormControlLabel\r\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\r\n                            label={\r\n                                isPrivateChat(chatId)\r\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\r\n                                    : t('DeleteForAll')\r\n                            }\r\n                        />\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nDeleteMessagesDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageIds: PropTypes.array,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(DeleteMessagesDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './InputPasswordDialog.css';\r\n\r\nclass InputPasswordDialog extends React.Component {\r\n\r\n    state = { };\r\n\r\n    handleChange = e => {\r\n        this.password = e.target.value;\r\n    };\r\n\r\n    handleClickShowPassword = () => {\r\n        const { showPassword } = this.state;\r\n\r\n        this.setState({ showPassword: !showPassword });\r\n    };\r\n\r\n    getErrorMessage = error => {\r\n        const { t } = this.props;\r\n\r\n        if (!error) return null;\r\n\r\n        if (error.message === 'PASSWORD_HASH_INVALID') {\r\n            return t('InvalidPassword');\r\n        } else if (error.message.startsWith('Too Many Requests: retry after ')) {\r\n            const str = error.message.replace('Too Many Requests: retry after ', '');\r\n            try {\r\n                const time = parseInt(str);\r\n                const timeString = time < 60\r\n                    ? LStore.formatPluralString('Seconds', time)\r\n                    : LStore.formatPluralString('Minutes', Math.floor(time / 60));\r\n\r\n                return LStore.formatString('FloodWaitTime', timeString);\r\n            } catch (e) {\r\n                return error.message;\r\n            }\r\n        }\r\n\r\n        return error.message;\r\n    }\r\n\r\n    render() {\r\n        const { state, error, onClose, t } = this.props;\r\n        if (!state) return null;\r\n\r\n        const { showPassword, loading } = this.state;\r\n        const { password_hint: passwordHint } = state;\r\n\r\n        const errorMessage = this.getErrorMessage(error);\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('TwoStepVerificationTitle')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {t('PleaseEnterCurrentPasswordTransfer')}\r\n                    </DialogContentText>\r\n                    <FormControl className='auth-input' fullWidth>\r\n                        <InputLabel htmlFor='adornment-password' error={Boolean(error)}>{t('LoginPassword')}</InputLabel>\r\n                        <Input\r\n                            fullWidth\r\n                            autoFocus\r\n                            autoComplete='off'\r\n                            id='adornment-password'\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            disabled={loading}\r\n                            error={Boolean(error)}\r\n                            onChange={this.handleChange}\r\n                            endAdornment={\r\n                                <InputAdornment position='end'>\r\n                                    <IconButton\r\n                                        aria-label='Toggle password visibility'\r\n                                        onClick={this.handleClickShowPassword}\r\n                                        edge='end'>\r\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                        {passwordHint && <FormHelperText id='password-hint-text'>{passwordHint}</FormHelperText>}\r\n                        <FormHelperText id='password-error-text' error>{errorMessage || ' '}</FormHelperText>\r\n                    </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, this.password)} color='primary'>\r\n                        {t('OK')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nInputPasswordDialog.propTypes = {\r\n    state: PropTypes.object,\r\n    error: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(InputPasswordDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport ChatTile from '../Tile/ChatTile';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\n\r\nclass LeaveChatDialog extends React.Component {\r\n    getDeleteDialogText = (chatId, t) => {\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n        if (!chat.type) return null;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return `Are you sure you want to leave group ${chat.title}?`;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                if (supergroup) {\r\n                    return supergroup.is_channel\r\n                        ? `Are you sure you want to leave channel ${chat.title}?`\r\n                        : `Are you sure you want to leave group ${chat.title}?`;\r\n                }\r\n\r\n                return null;\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClose, t } = this.props;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                open={true}\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false)}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className='delete-dialog-content'>\r\n                        <ChatTile chatId={chatId} />\r\n                        <DialogContentText id='delete-dialog-description'>\r\n                            {this.getDeleteDialogText(chatId, t)}\r\n                        </DialogContentText>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nLeaveChatDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(LeaveChatDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './LeaveVoiceChatDialog.css';\r\n\r\nclass LeaveVoiceChatDialog extends React.Component {\r\n    state = {\r\n        discard: false\r\n    };\r\n\r\n    handleDiscardChange = () => {\r\n        const { discard } = this.state;\r\n\r\n        this.setState({\r\n            discard: !discard\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, t } = this.props;\r\n        const { discard } = this.state;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false, null)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>\r\n                    {LStore.getString('VoipGroupLeaveAlertTitle')}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {LStore.getString('VoipGroupLeaveAlertText')}\r\n                    </DialogContentText>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={discard} onChange={this.handleDiscardChange} color='primary' />}\r\n                        label={t('VoipGroupEndChat')}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, null)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, { discard })} color='secondary'>\r\n                        {t('VoipGroupLeave')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nLeaveVoiceChatDialog.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(LeaveVoiceChatDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport './NotificationTimer.css';\r\n\r\nclass NotificationTimer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            seconds: this.props.timeout / 1000,\r\n            value: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startTime = new Date();\r\n        this.expire = this.startTime;\r\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\r\n        this.timerId = setInterval(this.handleTimer, 100);\r\n    }\r\n\r\n    handleTimer = () => {\r\n        const now = new Date();\r\n        const seconds = this.expire - now;\r\n        const value = 100 - (seconds / this.props.timeout) * 100;\r\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\r\n        this.setState({\r\n            seconds: seconds > 0 ? seconds : 0,\r\n            value: value > 100 ? 100 : value\r\n        });\r\n\r\n        if (now >= this.expire) {\r\n            if (this.timerId) {\r\n                clearInterval(this.timerId);\r\n                this.timerId = null;\r\n\r\n                const { onTimeout } = this.props;\r\n                if (onTimeout) {\r\n                    onTimeout();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        if (this.timerId) {\r\n            clearInterval(this.timerId);\r\n            this.timerId = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { value, seconds } = this.state;\r\n\r\n        return (\r\n            <div className='notification-timer'>\r\n                <div className='notification-timer-text'>\r\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\r\n                </div>\r\n                <div className='notification-timer-progress'>\r\n                    <CircularProgress size={32} value={100 - value} variant='static' />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNotificationTimer.propTypes = {\r\n    timeout: PropTypes.number.isRequired,\r\n    onTimeout: PropTypes.func\r\n};\r\n\r\nexport default NotificationTimer;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './OpenGameDialog.css';\r\n\r\nclass OpenGameDialog extends React.Component {\r\n    render() {\r\n        const { game, params, onClose, t } = this.props;\r\n        if (!game) return null;\r\n\r\n        const { userId } = params;\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={e => onClose(e, false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('AppName')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {LStore.formatString('BotPermissionGameAlert', getUserFullName(userId))}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={e => onClose(e, false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={e => onClose(e, true)} color='primary'>\r\n                        {t('OK')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nOpenGameDialog.propTypes = {\r\n    game: PropTypes.object,\r\n    params: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(OpenGameDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './OpenUrlDialog.css';\r\n\r\nclass OpenUrlDialog extends React.Component {\r\n    render() {\r\n        const { url, onClose, t } = this.props;\r\n        if (!url) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={e => onClose(e, false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\r\n                <DialogContent style={{ overflowWrap: 'break-word' }}>\r\n                    <DialogContentText>\r\n                        {LStore.formatString('OpenUrlAlert2', url)}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={e => onClose(e, false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={e => onClose(e, true)} color='primary'>\r\n                        {t('Open')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nOpenUrlDialog.propTypes = {\r\n    url: PropTypes.string,\r\n    params: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(OpenUrlDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './PinMessageDialog.css';\r\n\r\nclass PinMessageDialog extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId } = props;\r\n        const { prevChatId, prevMessageId } = state;\r\n\r\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageIds: messageId,\r\n                revoke: !isPrivateChat(chatId)\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleRevokeChange = () => {\r\n        const { revoke } = this.state;\r\n\r\n        this.setState({ revoke: !revoke });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClose, t } = this.props;\r\n        const { revoke } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        let text = '';\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                text = t('PinMessageAlertChat');\r\n                break;\r\n            }\r\n            case 'chatTypeBasicGroup': {\r\n                text = t('PinMessageAlert');\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                if (isChannelChat(chatId)) {\r\n                    text = t('PinMessageAlertChannel');\r\n                } else {\r\n                    text = t('PinMessageAlert');\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false, revoke)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {text}\r\n                    </DialogContentText>\r\n                    <>\r\n                        {\r\n                            isPrivateChat(chatId) && (\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\r\n                                    }\r\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\r\n                                />\r\n                            )\r\n                        }\r\n                    </>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nPinMessageDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(PinMessageDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './ReportChatDialog.css';\r\n\r\nclass ReportChatDialog extends React.Component {\r\n\r\n    handleReport = type => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose && onClose(true, { '@type': type });\r\n    }\r\n\r\n    render() {\r\n        const { onClose, t } = this.props;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>{t('ReportChat')}</DialogTitle>\r\n                <div className='report-chat-dialog-content'>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonSpam')}>\r\n                        <ListItemText primary={t('ReportChatSpam')}/>\r\n                    </ListItem>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonFake')}>\r\n                        <ListItemText primary={t('ReportChatFakeAccount')}/>\r\n                    </ListItem>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonViolence')}>\r\n                        <ListItemText primary={t('ReportChatViolence')}/>\r\n                    </ListItem>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonPornography')}>\r\n                        <ListItemText primary={t('ReportChatPornography')}/>\r\n                    </ListItem>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonChildAbuse')}>\r\n                        <ListItemText primary={t('ReportChatChild')}/>\r\n                    </ListItem>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonCustom')}>\r\n                        <ListItemText primary={t('ReportChatOther')}/>\r\n                    </ListItem>\r\n                </div>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('ReportChat')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nReportChatDialog.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(ReportChatDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { getUserFullName, getUserShortName } from '../../Utils/User';\r\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './RequestUrlDialog.css';\r\n\r\nclass RequestUrlDialog extends React.Component {\r\n    state = {\r\n        value1: true,\r\n        value2: true\r\n    };\r\n\r\n    handleValue1Change = () => {\r\n        const { value1 } = this.state;\r\n\r\n        this.setState({ value1: !value1 });\r\n    };\r\n\r\n    handleValue2Change = () => {\r\n        const { value2 } = this.state;\r\n\r\n        this.setState({ value2: !value2 });\r\n    };\r\n\r\n    render() {\r\n        const { url, params, onClose, t } = this.props;\r\n        if (!url) return null;\r\n\r\n        const { value1, value2 } = this.state;\r\n\r\n        const { result } = params;\r\n        if (!result) return null;\r\n\r\n        const { domain, bot_user_id, request_write_access } = result;\r\n\r\n        let text1 = LStore.formatString('OpenUrlOption1', domain, getUserFullName(UserStore.getMyId()));\r\n        const entities1 = [];\r\n        text1 = getSimpleMarkupEntities(text1, entities1);\r\n        const option1 = (\r\n            <FormControlLabel\r\n                control={<Checkbox color='primary' checked={value1} onChange={this.handleValue1Change}/>}\r\n                label={getFormattedText({ '@type': 'formattedText', text: text1, entities: entities1 }, t)}\r\n            />\r\n        );\r\n\r\n        let option2 = null;\r\n        if (request_write_access) {\r\n            let text2 = LStore.formatString('OpenUrlOption2', getUserShortName(bot_user_id, t));\r\n            const entities2 = [];\r\n            text2 = getSimpleMarkupEntities(text2, entities2);\r\n            option2 = (\r\n                <FormControlLabel\r\n                    control={<Checkbox color='primary' checked={value2} onChange={this.handleValue2Change}/>}\r\n                    label={getFormattedText({ '@type': 'formattedText', text: text2, entities: entities2 }, t)}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={e => onClose(e, false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\r\n                <DialogContent style={{ display: 'flex', flexDirection: 'column', overflowWrap: 'break-word' }}>\r\n                    <DialogContentText>\r\n                        {LStore.formatString('OpenUrlAlert2', url)}\r\n                    </DialogContentText>\r\n                    {option1}\r\n                    {option2}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={e => onClose(e, false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={e => onClose(e, true, { value1, value2 })} color='primary'>\r\n                        {t('Open')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nRequestUrlDialog.propTypes = {\r\n    url: PropTypes.string,\r\n    params: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(RequestUrlDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './UnpinMessageDialog.css';\r\n\r\nclass UnpinMessageDialog extends React.Component {\r\n\r\n    render() {\r\n        const { messageId, onClose, t } = this.props;\r\n\r\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {text}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nUnpinMessageDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(UnpinMessageDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport function openGameInBrowser(url, message) {\r\n    let sharedPreferences = {};\r\n    try {\r\n        sharedPreferences = JSON.parse(localStorage.getItem('botshare')) || { };\r\n    } catch (e) { }\r\n\r\n    const existing = sharedPreferences['' + message.id];\r\n    let hash = existing ? existing : ''\r\n    let addHash = 'tgShareScoreUrl=' + encodeURIComponent('tg://share_game_score?hash=');\r\n    if (!existing) {\r\n        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        const array = new Uint8Array(1);\r\n        for (let i = 0; i < 20; i++) {\r\n            window.crypto.getRandomValues(array)\r\n            hash += chars[array[0] % chars.length];\r\n        }\r\n\r\n        sharedPreferences['' + message.id] = hash;\r\n        localStorage.setItem('botshare', JSON.stringify(sharedPreferences));\r\n    }\r\n    addHash += hash;\r\n    const index = url.indexOf('#');\r\n    if (index < 0) {\r\n        url += '#' + addHash;\r\n    } else {\r\n        const curHash = url.substring(0, index + 1);\r\n        if (curHash.indexOf('=') >= 0 || curHash.indexOf('?') >= 0) {\r\n            url += '&' + addHash;\r\n        } else {\r\n            if (curHash.length > 0) {\r\n                url += '?' + addHash;\r\n            } else {\r\n                url += addHash;\r\n            }\r\n        }\r\n    }\r\n\r\n    const newWindow = window.open();\r\n    newWindow.opener = null;\r\n    newWindow.location = url;\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { compose } from '../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AlertDialog from './Popup/AlertDialog';\r\nimport BlockSenderDialog from './Popup/BlockSenderDialog';\r\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\r\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\r\nimport InputPasswordDialog from './Popup/InputPasswordDialog';\r\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\r\nimport LeaveVoiceChatDialog from './Popup/LeaveVoiceChatDialog';\r\nimport NotificationTimer from './Additional/NotificationTimer';\r\nimport OpenGameDialog from './Popup/OpenGameDialog';\r\nimport OpenUrlDialog from './Popup/OpenUrlDialog';\r\nimport PinMessageDialog from './Popup/PinMessageDialog';\r\nimport ReportChatDialog from './Popup/ReportChatDialog';\r\nimport RequestUrlDialog from './Popup/RequestUrlDialog';\r\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\r\nimport { blockSender, pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\r\nimport { canDeleteChat, canPinMessages, getChatLocation, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\r\nimport { clearSelection, closePinned, showSnackbar } from '../Actions/Client';\r\nimport { openGameInBrowser } from '../Utils/Game';\r\nimport { reportChat } from '../Actions/Chat';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\r\nimport AppStore from '../Stores/ApplicationStore';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport SupergroupStore from '../Stores/SupergroupStore';\r\nimport UserStore from '../Stores/UserStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\nimport CloseIcon from '../Assets/Icons/Close';\r\n\r\nclass Actions extends React.PureComponent {\r\n    state = {\r\n        leaveChat: null,\r\n        clearHistory: null,\r\n        deleteMessages: null,\r\n        pinMessage: null,\r\n        unpinMessage: null,\r\n        alert: null,\r\n        openUrlAlert: null,\r\n        openGameAlert: null,\r\n        requestUrlAlert: null,\r\n        inputPasswordAlert: null,\r\n        requestBlockSenderAlert: null,\r\n        leaveVoiceChatAlert: null,\r\n        reportChatAlert: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\r\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\r\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\r\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\r\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\r\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\r\n        AppStore.on('clientUpdateAlert', this.onClientUpdateAlert);\r\n        AppStore.on('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\r\n        AppStore.on('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\r\n        AppStore.on('clientUpdateSnackbar', this.onClientUpdateSnackbar);\r\n        AppStore.on('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\r\n        AppStore.on('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\r\n        AppStore.on('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\r\n        AppStore.on('clientUpdateReportChat', this.onClientUpdateReportChat);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\r\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\r\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\r\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\r\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\r\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\r\n        AppStore.off('clientUpdateAlert', this.onClientUpdateAlert);\r\n        AppStore.off('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\r\n        AppStore.off('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\r\n        AppStore.off('clientUpdateSnackbar', this.onClientUpdateSnackbar);\r\n        AppStore.off('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\r\n        AppStore.off('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\r\n        AppStore.off('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\r\n        AppStore.off('clientUpdateReportChat', this.onClientUpdateReportChat);\r\n    }\r\n\r\n    onClientUpdateReportChat = update => {\r\n        const { chatId, messageIds } = update;\r\n\r\n        this.setState({ reportChatAlert: { chatId, messageIds }});\r\n    };\r\n\r\n    onClientUpdateBlockSender = update => {\r\n        const { sender } = update;\r\n\r\n        this.setState({ requestBlockSenderAlert: { sender }});\r\n    }\r\n\r\n    onClientUpdateInputPasswordAlert = update => {\r\n        const { state, onPassword } = update;\r\n\r\n        this.setState({ inputPasswordAlert: { state, onPassword } });\r\n    }\r\n\r\n    onClientUpdateLeaveVoiceChatAlert = update => {\r\n        const { params } = update;\r\n\r\n        this.setState({ leaveVoiceChatAlert: { params }});\r\n    }\r\n\r\n    onClientUpdateOpenGameAlert = update => {\r\n        const { game, params } = update;\r\n\r\n        if (params && params.isVerified) {\r\n            this.openGameAlert = { game, params };\r\n            this.handleOpenGameContinue(null, true);\r\n        } else {\r\n            this.setState({ openGameAlert: { game, params } });\r\n        }\r\n    }\r\n\r\n    onClientUpdateOpenUrlAlert = update => {\r\n        const { url, params } = update;\r\n\r\n        if (params && !params.ask) {\r\n            this.openUrlAlert = { url, params };\r\n            this.handleOpenUrlContinue(null, true);\r\n        } else {\r\n            this.setState({ openUrlAlert: { url, params } });\r\n        }\r\n    };\r\n\r\n    onClientUpdateRequestUrlAlert = update => {\r\n        const { url, params } = update;\r\n\r\n        this.setState({ requestUrlAlert: { url, params } });\r\n    }\r\n\r\n    onClientUpdateSnackbar = update => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n        const { message, action } = update;\r\n\r\n        enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: action(closeSnackbar)\r\n        });\r\n    };\r\n\r\n    onClientUpdateAlert = update => {\r\n        const { params } = update;\r\n\r\n        this.setState({ alert: { params } });\r\n    };\r\n\r\n    onClientUpdateUnpinMessage = update => {\r\n        const { chatId, messageId } = update;\r\n\r\n        if (isMeChat(chatId)) {\r\n            this.unpinMessage = {\r\n                chatId,\r\n                messageId\r\n            };\r\n            this.handleUnpinMessageContinue(true, false);\r\n        } else {\r\n            this.setState({\r\n                unpinMessage: {\r\n                    chatId,\r\n                    messageId\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdatePinMessage = update => {\r\n        const { chatId, messageId } = update;\r\n\r\n        if (isMeChat(chatId)) {\r\n            this.pinMessage = {\r\n                chatId,\r\n                messageId\r\n            };\r\n            this.handlePinMessageContinue(true, false);\r\n        } else {\r\n            this.setState({\r\n                pinMessage: {\r\n                    chatId,\r\n                    messageId\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateDeleteMessages = update => {\r\n        const { chatId, messageIds } = update;\r\n\r\n        this.setState({\r\n            deleteMessages: {\r\n                chatId,\r\n                messageIds\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateLeaveChat = update => {\r\n        const { chatId } = update;\r\n\r\n        this.setState({ leaveChat : { chatId } });\r\n    };\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = update;\r\n\r\n        this.setState({ clearHistory : { chatId } });\r\n    };\r\n\r\n    handleClearHistoryContinue = (result, revoke) => {\r\n        const { t } = this.props;\r\n\r\n        const { clearHistory } = this.state;\r\n        if (!clearHistory) return;\r\n\r\n        this.setState({ clearHistory: null });\r\n\r\n        if (!result) return;\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const message = t('HistoryClearedUndo');\r\n        const request = {\r\n            '@type': 'deleteChatHistory',\r\n            chat_id: chatId,\r\n            remove_from_chat_list: false,\r\n            revoke\r\n        };\r\n\r\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\r\n    };\r\n\r\n    handleLeaveContinue = async (result, undo = true) => {\r\n        const { leaveChat } = this.state || this;\r\n        if (!leaveChat) return;\r\n\r\n        const { chatId } = leaveChat;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        this.leaveChat = null;\r\n        this.setState({ leaveChat: null });\r\n\r\n        if (!result) return;\r\n\r\n        const message = this.getLeaveChatNotification(chatId);\r\n        const requests = [];\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                if (isChatMember(chatId)) {\r\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\r\n                }\r\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                if (isCreator(chatId)) {\r\n                    requests.push({\r\n                        '@type': 'setChatMemberStatus',\r\n                        chat_id: chatId,\r\n                        user_id: UserStore.getMyId(),\r\n                        status: {\r\n                            '@type': 'chatMemberStatusCreator',\r\n                            is_member: false\r\n                        }\r\n                    });\r\n                } else if (isChatMember(chatId)) {\r\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\r\n                }\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\r\n            }\r\n        }\r\n\r\n        if (undo) {\r\n            this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\r\n        } else {\r\n            try {\r\n                for (let i = 0; i < requests.length; i++) {\r\n                    await TdLibController.send(requests[i]);\r\n                }\r\n            } finally {\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    handleDeleteMessagesContinue = (result, revoke) => {\r\n        const { deleteMessages } = this.state;\r\n        if (!deleteMessages) return;\r\n\r\n        const { chatId, messageIds } = deleteMessages;\r\n\r\n        clearSelection();\r\n        this.setState({ deleteMessages: null });\r\n\r\n        if (!result) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteMessages',\r\n            chat_id: chatId,\r\n            message_ids: messageIds,\r\n            revoke\r\n        });\r\n    };\r\n\r\n    getLeaveChatNotification = chatId => {\r\n        const { t } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return t('ChatDeletedUndo');\r\n        if (!chat.type) return t('ChatDeletedUndo');\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return t('ChatDeletedUndo');\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                if (supergroup) {\r\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\r\n                }\r\n\r\n                return t('ChatDeletedUndo');\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                return t('ChatDeletedUndo');\r\n            }\r\n        }\r\n\r\n        return t('ChatDeletedUndo');\r\n    };\r\n\r\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\r\n        const { t, enqueueSnackbar, closeSnackbar } = this.props;\r\n        if (!clientUpdateType) return;\r\n\r\n        const key = `${clientUpdateType} chatId=${chatId}`;\r\n        const action = async () => {\r\n            try {\r\n                for (let i = 0; i < requests.length; i++) {\r\n                    await TdLibController.send(requests[i]);\r\n                }\r\n            } finally {\r\n                closeSnackbar(snackKey);\r\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\r\n            }\r\n        };\r\n        const cancel = () => {\r\n            closeSnackbar(snackKey);\r\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\r\n        };\r\n\r\n        AppStore.addScheduledAction(key, Number.MAX_VALUE, action, cancel);\r\n\r\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\r\n        const snackKey = enqueueSnackbar(message, {\r\n            persist: true,\r\n            key,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='progress'\r\n                    color='inherit'\r\n                    className='progress-button'>\r\n                    <NotificationTimer\r\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\r\n                        onTimeout={() => {\r\n                            action();\r\n                            AppStore.removeScheduledAction(key);\r\n                        }}/>\r\n                </IconButton>,\r\n                <Button\r\n                    key='undo'\r\n                    color='primary'\r\n                    size='small'\r\n                    onClick={() => {\r\n                        cancel();\r\n                        AppStore.removeScheduledAction(key);\r\n                    }}>\r\n                    {t('Undo')}\r\n                </Button>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handlePinMessageContinue = (result, revoke) => {\r\n        let { pinMessage } = this.state;\r\n        pinMessage = pinMessage || this.pinMessage;\r\n        if (!pinMessage) return;\r\n\r\n        const { chatId, messageId } = pinMessage;\r\n\r\n        clearSelection();\r\n        this.setState({ pinMessage: null });\r\n        this.pinMessage = null;\r\n\r\n        if (!result) return;\r\n\r\n        pinMessageAction(chatId, messageId, false, !revoke);\r\n    };\r\n\r\n    handleUnpinMessageContinue = async result => {\r\n        let { unpinMessage } = this.state;\r\n        unpinMessage = unpinMessage || this.unpinMessage;\r\n        if (!unpinMessage) return;\r\n\r\n        const { chatId, messageId } = unpinMessage;\r\n\r\n        clearSelection();\r\n        this.setState({ unpinMessage: null });\r\n        this.unpinMessage = null;\r\n\r\n        if (!result) return;\r\n\r\n        if (canPinMessages(chatId)) {\r\n            if (messageId) {\r\n                await unpinMessageAction(chatId, messageId);\r\n            } else {\r\n                closePinned();\r\n\r\n                await unpinAllMessages(chatId);\r\n            }\r\n        } else {\r\n            closePinned();\r\n\r\n            const data = ChatStore.getClientData(chatId);\r\n            await TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateSetChatClientData',\r\n                chatId,\r\n                clientData: { ...data, ...{ unpinned: true } }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleAlertContinue = result => {\r\n        const { alert } = this.state;\r\n        if (!alert) return;\r\n\r\n        const { params } = alert;\r\n        this.setState({ alert: null });\r\n\r\n        const { onResult } = params;\r\n        onResult && onResult(result);\r\n    };\r\n\r\n    handleOpenUrlContinue = (event, result) => {\r\n        const openUrlAlert = this.state.openUrlAlert || this.openUrlAlert;\r\n\r\n        this.setState({ openUrlAlert: null });\r\n        this.openUrlAlert = null;\r\n\r\n        if (!result) return;\r\n\r\n        const { url, onClick } = openUrlAlert;\r\n        if (!url) return;\r\n\r\n        if (onClick) {\r\n            onClick(event);\r\n        } else {\r\n            event && event.preventDefault();\r\n\r\n            const newWindow = window.open();\r\n            newWindow.opener = null;\r\n            newWindow.location = url;\r\n        }\r\n    };\r\n\r\n    handleOpenGameContinue = (event, result) => {\r\n        const openGameAlert = this.state.openGameAlert || this.openGameAlert;\r\n\r\n        this.setState({ openGameAlert: null });\r\n        this.openGameAlert = null;\r\n\r\n        if (!result) return;\r\n\r\n        const { game, params } = openGameAlert;\r\n        if (!game) return;\r\n        if (!params) return;\r\n\r\n        const { url, message } = params;\r\n        if (!url) return;\r\n        if (!message) return;\r\n\r\n        openGameInBrowser(url, message);\r\n    };\r\n\r\n    handleRequestUrlContinue = async (event, open, values) => {\r\n        const { requestUrlAlert } = this.state;\r\n        this.setState({ requestUrlAlert: null });\r\n\r\n        if (!open) return;\r\n\r\n        const { params } = requestUrlAlert;\r\n        if (!params) return;\r\n\r\n        const { result, chatId, messageId, buttonId } = params;\r\n        if (!result) return;\r\n\r\n        if (!values.value1) {\r\n            this.openUrlAlert = { url: result.url };\r\n            this.handleOpenUrlContinue(event, open);\r\n        } else {\r\n            const httpUrl = await TdLibController.send({\r\n                '@type': 'getLoginUrl',\r\n                chat_id: chatId,\r\n                message_id: messageId,\r\n                button_id: buttonId,\r\n                allow_write_access: result.request_write_access && values.value2\r\n            });\r\n\r\n            this.openUrlAlert = { url: httpUrl.url };\r\n            this.handleOpenUrlContinue(event, open);\r\n        }\r\n    };\r\n\r\n    handleInputPasswordContinue = (result, password) => {\r\n        const { inputPasswordAlert } = this.state;\r\n        const onCloseDialog = () => this.setState({ inputPasswordAlert: null });\r\n        const onError = error => this.setState({ inputPasswordAlert: { ...inputPasswordAlert, error } })\r\n\r\n        if (!result) {\r\n            onCloseDialog();\r\n            return;\r\n        }\r\n\r\n        const { onPassword } = inputPasswordAlert;\r\n        onPassword && onPassword(password, onCloseDialog, onError);\r\n    };\r\n\r\n    handleBlockSenderContinue = async (result, params) => {\r\n        const { requestBlockSenderAlert } = this.state;\r\n\r\n        this.setState({ requestBlockSenderAlert: null });\r\n\r\n        if (!result) {\r\n            return;\r\n        }\r\n\r\n        const { sender } = requestBlockSenderAlert;\r\n        if (!sender) return;\r\n\r\n        let chatId = null;\r\n        switch (sender['@type']) {\r\n            case 'messageSenderUser': {\r\n                blockSender(sender);\r\n                chatId = await TdLibController.send({ '@type': 'createPrivateChat', user_id: sender.user_id });\r\n                break;\r\n            }\r\n            case 'messageSenderChat': {\r\n                chatId = sender.chat_id;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!params || params.reportSpam) {\r\n            const reason = getChatLocation(chatId)\r\n                ? { '@type': 'chatReportReasonUnrelatedLocation' }\r\n                : { '@type': 'chatReportReasonSpam' };\r\n\r\n            reportChat(chatId, reason);\r\n        }\r\n\r\n        if (!params || params.deleteChat) {\r\n            const deleteChat = canDeleteChat(chatId);\r\n            if (!deleteChat) return;\r\n\r\n            this.leaveChat = { chatId };\r\n            this.handleLeaveContinue(true, false);\r\n        }\r\n    };\r\n\r\n    handleLeaveVoiceChatContinue = (result, resultParams) => {\r\n        const { leaveVoiceChatAlert } = this.state;\r\n\r\n        this.setState({ leaveVoiceChatAlert: null });\r\n\r\n        const { params } = leaveVoiceChatAlert;\r\n        if (!params) return;\r\n\r\n        const { onResult } = params;\r\n\r\n        onResult && onResult(resultParams);\r\n    };\r\n\r\n    handleReportChatContinue = (result, params) => {\r\n        const { t } = this.props;\r\n        const { reportChatAlert } = this.state;\r\n\r\n        this.setState({ reportChatAlert: null });\r\n        if (!result) return;\r\n\r\n        const { chatId, messageIds } = reportChatAlert;\r\n\r\n        showSnackbar(t('ReportChatSent'), closeSnackbar => snackKey => {\r\n            return (\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => { closeSnackbar(snackKey); }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            )\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            leaveChat,\r\n            clearHistory,\r\n            deleteMessages,\r\n            pinMessage,\r\n            unpinMessage,\r\n            alert,\r\n            openUrlAlert,\r\n            openGameAlert,\r\n            requestUrlAlert,\r\n            inputPasswordAlert,\r\n            requestBlockSenderAlert,\r\n            leaveVoiceChatAlert,\r\n            reportChatAlert\r\n        } = this.state;\r\n        if (leaveChat) {\r\n            const { chatId } = leaveChat;\r\n\r\n            return (\r\n                <LeaveChatDialog\r\n                    chatId={chatId}\r\n                    onClose={this.handleLeaveContinue} />\r\n                );\r\n        } else if (clearHistory) {\r\n            const { chatId } = clearHistory;\r\n\r\n            return (\r\n                <ClearHistoryDialog\r\n                    chatId={chatId}\r\n                    onClose={this.handleClearHistoryContinue} />\r\n                );\r\n        } else if (deleteMessages) {\r\n            const { chatId, messageIds } = deleteMessages;\r\n\r\n            return (\r\n                <DeleteMessagesDialog\r\n                    chatId={chatId}\r\n                    messageIds={messageIds}\r\n                    onClose={this.handleDeleteMessagesContinue} />\r\n                );\r\n        } else if (pinMessage) {\r\n            const { chatId, messageId } = pinMessage;\r\n\r\n            return (\r\n                <PinMessageDialog\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    onClose={this.handlePinMessageContinue} />\r\n            );\r\n        } else if (unpinMessage) {\r\n            const { chatId, messageId } = unpinMessage;\r\n\r\n            return (\r\n                <UnpinMessageDialog\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    onClose={this.handleUnpinMessageContinue} />\r\n            );\r\n        } else if (alert) {\r\n            const { params } = alert;\r\n\r\n            return (\r\n                <AlertDialog\r\n                    params={params}\r\n                    onClose={this.handleAlertContinue} />\r\n            );\r\n        } else if (openUrlAlert) {\r\n            const { url, params } = openUrlAlert;\r\n\r\n            return (\r\n                <OpenUrlDialog\r\n                    url={url}\r\n                    params={params}\r\n                    onClose={this.handleOpenUrlContinue}/>\r\n            );\r\n        } else if (openGameAlert) {\r\n            const { game, params } = openGameAlert;\r\n\r\n            return (\r\n                <OpenGameDialog\r\n                    game={game}\r\n                    params={params}\r\n                    onClose={this.handleOpenGameContinue}/>\r\n            );\r\n        } else if (requestUrlAlert) {\r\n            const { url, params } = requestUrlAlert;\r\n\r\n            return (\r\n                <RequestUrlDialog\r\n                    url={url}\r\n                    params={params}\r\n                    onClose={this.handleRequestUrlContinue}/>\r\n            );\r\n        } else if (inputPasswordAlert) {\r\n            const { state, error } = inputPasswordAlert;\r\n\r\n            return (\r\n                <InputPasswordDialog\r\n                    state={state}\r\n                    error={error}\r\n                    onClose={this.handleInputPasswordContinue}/>\r\n            );\r\n        } else if (requestBlockSenderAlert) {\r\n            const { sender } = requestBlockSenderAlert;\r\n\r\n            return (\r\n                <BlockSenderDialog\r\n                    sender={sender}\r\n                    onClose={this.handleBlockSenderContinue}/>\r\n            );\r\n        } else if (leaveVoiceChatAlert) {\r\n            const { params } = leaveVoiceChatAlert;\r\n\r\n            return (\r\n                <LeaveVoiceChatDialog\r\n                    params={params}\r\n                    onClose={this.handleLeaveVoiceChatContinue}/>\r\n            );\r\n        } else if (reportChatAlert) {\r\n            const { chatId, messageIds } = reportChatAlert;\r\n\r\n            return (\r\n                <ReportChatDialog\r\n                    chatId={chatId}\r\n                    messageIds={messageIds}\r\n                    onClose={this.handleReportChatContinue}/>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    withSnackbar,\r\n    withTranslation()\r\n);\r\n\r\nexport default enhance(Actions);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,9C10.4,9 8.85,9.25 7.4,9.72V12.82C7.4,13.22 7.17,13.56 6.84,13.72C5.86,14.21 4.97,14.84 4.17,15.57C4,15.75 3.75,15.86 3.5,15.86C3.2,15.86 2.95,15.74 2.77,15.56L0.29,13.08C0.11,12.9 0,12.65 0,12.38C0,12.1 0.11,11.85 0.29,11.67C3.34,8.77 7.46,7 12,7C16.54,7 20.66,8.77 23.71,11.67C23.89,11.85 24,12.1 24,12.38C24,12.65 23.89,12.9 23.71,13.08L21.23,15.56C21.05,15.74 20.8,15.86 20.5,15.86C20.25,15.86 20,15.75 19.82,15.57C19.03,14.84 18.14,14.21 17.16,13.72C16.83,13.56 16.6,13.22 16.6,12.82V9.72C15.15,9.25 13.6,9 12,9Z' />,\r\n    'CallEnd'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './CallSettingsVideoPreview.css';\r\n\r\nclass CallSettingsVideoPreview extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const { stream } = this.props;\r\n        if (stream) {\r\n            const video = document.getElementById('call-settings-video');\r\n            if (video) {\r\n                video.srcObject = stream;\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { stream } = this.props;\r\n        if (prevProps.stream !== stream) {\r\n            const video = document.getElementById('call-settings-video');\r\n            if (video) {\r\n                video.srcObject = stream;\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <video id='call-settings-video' autoPlay={true} muted={true}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nCallSettingsVideoPreview.propTypes = {\r\n    stream: PropTypes.object\r\n};\r\n\r\nexport default CallSettingsVideoPreview;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getAmplitude } from '../../Calls/Utils';\r\nimport './GroupCallMicAmplitude.css';\r\n\r\nclass GroupCallMicAmplitude extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n        this.timer = null;\r\n\r\n        this.state = {\r\n            value: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { stream } = this.props;\r\n        if (stream) {\r\n            this.addAnalyser(stream);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { stream } = this.props;\r\n        if (stream) {\r\n            this.removeAnalyser(stream);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { stream } = this.props;\r\n        if (prevProps.stream !== stream) {\r\n            this.removeAnalyser(prevProps.stream);\r\n            this.addAnalyser(stream);\r\n        }\r\n    }\r\n\r\n    addAnalyser(stream) {\r\n        if (!stream) return;\r\n\r\n        const { audioContext } = this;\r\n        if (!audioContext) return;\r\n\r\n        this.streamSource = audioContext.createMediaStreamSource(stream);\r\n        if (!this.analyser) {\r\n            const analyser = audioContext.createAnalyser();\r\n            analyser.minDecibels = -100;\r\n            analyser.maxDecibels = -30;\r\n            analyser.smoothingTimeConstant = 0.05;\r\n            analyser.fftSize = 1024;\r\n\r\n            this.analyser = analyser;\r\n        }\r\n        this.streamSource.connect(this.analyser);\r\n\r\n        this.timer = setInterval(() => this.analyse(), 100);\r\n    }\r\n\r\n    removeAnalyser(stream) {\r\n        if (!stream) return;\r\n\r\n        if (this.analyser && this.streamSource) {\r\n            this.streamSource.disconnect(this.analyser);\r\n        }\r\n\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    analyse() {\r\n        const { analyser } = this;\r\n        if (!analyser) return;\r\n\r\n        const array = new Uint8Array(analyser.frequencyBinCount);\r\n        analyser.getByteFrequencyData(array);\r\n        const value = getAmplitude(array, 1.5);\r\n\r\n        this.setState({\r\n            value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { value } = this.state;\r\n\r\n        let d = '';\r\n        for (let i = 0; i < 35; i++) {\r\n            const x = i * 8 + 1.5;\r\n            d += `M${x},0v15Z`;\r\n        }\r\n\r\n        const bars = (\r\n            <svg className='group-call-mic-amplitude-bars' viewBox='0 0 275 15'>\r\n                <path d={d} fill='currentColor' strokeWidth={3}/>\r\n            </svg>\r\n        );\r\n\r\n        return (\r\n            <div className='group-call-mic-amplitude'>\r\n                {bars}\r\n                <div className='group-call-mic-amplitude-bars-accent' style={{ width: 275 * value }}>\r\n                    {bars}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallMicAmplitude.propTypes = {\r\n    stream: PropTypes.object\r\n};\r\n\r\nexport default GroupCallMicAmplitude;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport async function copy(text) {\r\n    try {\r\n        if (navigator.clipboard) {\r\n            await navigator.clipboard.writeText(text);\r\n            return true;\r\n        }\r\n    } catch (e) {\r\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\r\n    }\r\n\r\n    return copyOld(text);\r\n}\r\n\r\nfunction copyOld(text) {\r\n    let element;\r\n    let successful;\r\n    try {\r\n        element = document.createElement('textarea');\r\n        element.contentEditable = true;\r\n        element.readOnly = true;\r\n        element.value = text;\r\n        element.style.all = 'unset';\r\n        element.style.position = 'fixed';\r\n        element.style.top = 0;\r\n        element.style.clip = 'rect(0, 0, 0, 0)';\r\n        element.style.whiteSpace = 'pre';\r\n        element.style.webkitUserSelect = 'text';\r\n        element.style.MozUserSelect = 'text';\r\n        element.style.msUserSelect = 'text';\r\n        element.style.userSelect = 'text';\r\n\r\n        document.body.appendChild(element);\r\n\r\n        element.focus();\r\n        element.select();\r\n\r\n        successful = document.execCommand('copy');\r\n        if (!successful) {\r\n            throw new Error();\r\n        }\r\n        return true;\r\n    } catch {\r\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\r\n    } finally {\r\n        if (element) {\r\n            document.body.removeChild(element);\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport CallSettingsVideoPreview from './CallSettingsVideoPreview';\r\nimport GroupCallMicAmplitude from './GroupCallMicAmplitude';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { copy } from '../../Utils/Text';\r\nimport { canManageVoiceChats, getChatUsername } from '../../Utils/Chat';\r\nimport { getStream } from '../../Calls/Utils';\r\nimport { showSnackbar } from '../../Actions/Client';\r\nimport { stopPropagation } from '../../Utils/Message';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport './GroupCallSettings.css';\r\n\r\nclass GroupCallSettings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n\r\n        this.state = { };\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n                const { openDeviceSelect } = this.state;\r\n                if (openDeviceSelect) {\r\n                    this.handleCloseDeviceSelect();\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    return;\r\n                }\r\n\r\n                this.handleCancel();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { groupCallId, callId } = props;\r\n        const { prevGroupCallId, prevCallId } = state;\r\n\r\n        if (prevGroupCallId !== groupCallId) {\r\n            const { devices } = CallStore;\r\n\r\n            const outputDeviceId = CallStore.getOutputDeviceId();\r\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\r\n\r\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\r\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\r\n\r\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\r\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\r\n\r\n            let muteSettings = { };\r\n            const groupCall = CallStore.get(groupCallId);\r\n            if (groupCall) {\r\n                const {\r\n                    mute_new_participants: muteNewParticipants,\r\n                    allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\r\n                } = groupCall;\r\n\r\n                muteSettings = {\r\n                    muteNewParticipants,\r\n                    allowedChangeMuteNewParticipants\r\n                }\r\n            }\r\n\r\n            return {\r\n                prevGroupCallId: groupCallId,\r\n                devices,\r\n                outputDeviceId,\r\n                output,\r\n                inputAudioDeviceId,\r\n                inputAudio,\r\n                inputVideoDeviceId,\r\n                inputVideo,\r\n                ...muteSettings\r\n            };\r\n        } else if (prevCallId !== callId) {\r\n            const { devices } = CallStore;\r\n\r\n            const outputDeviceId = CallStore.getOutputDeviceId();\r\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\r\n\r\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\r\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\r\n\r\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\r\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\r\n\r\n            return {\r\n                prevCallId: callId,\r\n                devices,\r\n                outputDeviceId,\r\n                output,\r\n                inputAudioDeviceId,\r\n                inputAudio,\r\n                inputVideoDeviceId,\r\n                inputVideo\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleSelectDevice('inputAudio', CallStore.getInputAudioDeviceId());\r\n        this.handleSelectDevice('inputVideo', CallStore.getInputVideoDeviceId());\r\n        navigator.mediaDevices.addEventListener('devicechange', this.onDeviceChange);\r\n        // navigator.permissions.addEventListener('onchange', this.onDeviceChange);\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        navigator.mediaDevices.removeEventListener('devicechange', this.onDeviceChange);\r\n        // navigator.permissions.removeEventListener('onchange', this.onDeviceChange);\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n\r\n        this.closeStreams();\r\n    }\r\n\r\n    closeStreams() {\r\n        const { inputAudioStream, inputAudioDeviceId, inputVideoStream, inputVideoDeviceId } = this.state;\r\n        if (inputAudioStream) {\r\n            if (!CallStore.currentGroupCall && !CallStore.currentCall || inputAudioDeviceId === CallStore.getInputAudioDeviceId()) {\r\n                inputAudioStream.getAudioTracks().forEach(x => {\r\n                    x.stop();\r\n                });\r\n            }\r\n        }\r\n\r\n        if (inputVideoStream) {\r\n            if (!CallStore.currentGroupCall && !CallStore.currentCall || inputVideoDeviceId === CallStore.getInputVideoDeviceId()) {\r\n                inputVideoStream.getVideoTracks().forEach(x => {\r\n                    x.stop();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { groupCallId } = this.props;\r\n        const { group_call } = update;\r\n        if (!group_call) return;\r\n\r\n        const {\r\n            id,\r\n            mute_new_participants: muteNewParticipants,\r\n            allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\r\n        } = group_call;\r\n        if (id !== groupCallId) return;\r\n\r\n        this.setState({\r\n            muteNewParticipants,\r\n            allowedChangeMuteNewParticipants\r\n        });\r\n    };\r\n\r\n    onDeviceChange = async () => {\r\n        const devices = await navigator.mediaDevices.enumerateDevices();\r\n        CallStore.devices = devices;\r\n\r\n        const outputDeviceId = CallStore.getOutputDeviceId();\r\n        const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\r\n\r\n        const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\r\n        const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\r\n\r\n        const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\r\n        const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\r\n\r\n        this.setState({\r\n            devices,\r\n            outputDeviceId,\r\n            output,\r\n            inputAudioDeviceId,\r\n            inputAudio,\r\n            inputVideoDeviceId,\r\n            inputVideo\r\n        });\r\n    };\r\n\r\n    handleOutputChange = event => {\r\n        const outputDeviceId = event.target.value;\r\n\r\n        this.setState({ outputDeviceId });\r\n    }\r\n\r\n    handleCopyLink = () => {\r\n        const { t } = this.props;\r\n        const { currentGroupCall } = CallStore;\r\n\r\n        const username = getChatUsername(currentGroupCall ? currentGroupCall.chatId : 0);\r\n        if (!username) return;\r\n\r\n        const telegramUrlOption = OptionStore.get('t_me_url');\r\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\r\n\r\n        copy(usernameLink + username);\r\n        showSnackbar(t('LinkCopied'), closeSnackbar => snackKey => {\r\n            return (\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => { closeSnackbar(snackKey); }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            )\r\n        });\r\n    };\r\n\r\n    handleOpenDeviceSelect = async type => {\r\n        switch (type) {\r\n            case 'inputAudio': {\r\n                const { inputAudio } = this.state;\r\n                if (!inputAudio.length) {\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n            case 'output': {\r\n                const { output } = this.state;\r\n                if (!output.length) {\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            openDeviceSelect: { type }\r\n        });\r\n    };\r\n\r\n    handleCloseDeviceSelect = () => {\r\n        this.setState({\r\n            openDeviceSelect: null\r\n        });\r\n    };\r\n\r\n    handleSelectDevice = async (type, deviceId) => {\r\n        this.handleCloseDeviceSelect();\r\n\r\n        switch (type) {\r\n            case 'output': {\r\n                CallStore.setOutputDeviceId(deviceId);\r\n                this.setState({\r\n                    outputDeviceId: deviceId\r\n                });\r\n                break;\r\n            }\r\n            case 'inputAudio': {\r\n                const { currentGroupCall, currentCall } = CallStore;\r\n                if (currentGroupCall) {\r\n                    const { streamManager } = currentGroupCall;\r\n                    if (!streamManager) return;\r\n\r\n                    const { inputAudioStream, inputAudioDeviceId } = this.state;\r\n                    if (inputAudioDeviceId === deviceId && inputAudioStream) return;\r\n\r\n                    if (inputAudioStream) {\r\n                        inputAudioStream.getAudioTracks().forEach(t => {\r\n                            t.stop()\r\n                        });\r\n                    }\r\n\r\n                    const stream = await getStream({\r\n                        audio: { deviceId: { exact: deviceId } },\r\n                        video: false\r\n                    });\r\n\r\n                    this.setState({\r\n                        inputAudioDeviceId: deviceId,\r\n                        inputAudioStream: stream\r\n                    });\r\n                } else if (currentCall) {\r\n                    const { inputAudioStream, inputAudioDeviceId } = this.state;\r\n                    if (inputAudioDeviceId === deviceId && inputAudioStream) return;\r\n\r\n                    if (inputAudioStream) {\r\n                        inputAudioStream.getAudioTracks().forEach(t => {\r\n                            t.stop()\r\n                        });\r\n                    }\r\n\r\n                    const stream = await getStream({\r\n                        audio: { deviceId: { exact: deviceId } },\r\n                        video: false\r\n                    });\r\n\r\n                    this.setState({\r\n                        inputAudioDeviceId: deviceId,\r\n                        inputAudioStream: stream\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            case 'inputVideo': {\r\n                const { currentCall } = CallStore;\r\n                if (!currentCall) return;\r\n\r\n                const { inputVideoStream, inputVideoDeviceId } = this.state;\r\n\r\n                if (inputVideoDeviceId === deviceId && inputVideoStream) return;\r\n\r\n                if (inputVideoStream) {\r\n                    inputVideoStream.getVideoTracks().forEach(t => {\r\n                        t.stop()\r\n                    });\r\n                }\r\n\r\n                const stream = await getStream({\r\n                    audio: false,\r\n                    video: { deviceId: { exact: deviceId } }\r\n                });\r\n\r\n                this.setState({\r\n                    inputVideoDeviceId: deviceId,\r\n                    inputVideoStream: stream\r\n                });\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleEnd = () => {\r\n        const { currentGroupCall: call } = CallStore;\r\n        if (!call) return;\r\n\r\n        const { chatId, groupCallId } = call;\r\n\r\n        CallStore.leaveGroupCall(chatId, groupCallId, true);\r\n    };\r\n\r\n    handleMuteNewParticipants = () => {\r\n        const { groupCallId } = this.props;\r\n        const { muteNewParticipants } = this.state;\r\n\r\n        this.setState({\r\n            muteNewParticipants: !muteNewParticipants\r\n        });\r\n\r\n        CallStore.toggleMuteNewParticipants(groupCallId, !muteNewParticipants);\r\n    };\r\n\r\n    handleDone = async () => {\r\n        const { onClose } = this.props;\r\n        const { inputAudioDeviceId, inputAudioStream, inputVideoDeviceId, inputVideoStream } = this.state;\r\n\r\n        if (inputAudioStream && inputAudioDeviceId !== CallStore.getInputAudioDeviceId()) {\r\n            await CallStore.setInputAudioDeviceId(inputAudioDeviceId, inputAudioStream);\r\n        }\r\n\r\n        if (inputVideoStream && inputVideoDeviceId !== CallStore.getInputVideoDeviceId()) {\r\n            await CallStore.setInputVideoDeviceId(inputVideoDeviceId, inputVideoStream);\r\n        }\r\n\r\n        onClose && onClose();\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose && onClose();\r\n    };\r\n\r\n    render() {\r\n        const { callId, t } = this.props;\r\n        const {\r\n            inputAudioDeviceId,\r\n            inputAudioStream,\r\n            inputAudio,\r\n            inputVideoDeviceId,\r\n            inputVideoStream,\r\n            inputVideo,\r\n            outputDeviceId,\r\n            output,\r\n            openDeviceSelect,\r\n            muteNewParticipants,\r\n            allowedChangeMuteNewParticipants\r\n        } = this.state;\r\n\r\n\r\n        const outputDeviceInfo = output.find(x => x.deviceId === outputDeviceId || !outputDeviceId && x.deviceId === 'default');\r\n        const outputString = !outputDeviceInfo || outputDeviceInfo.deviceId === 'default' || !outputDeviceInfo.deviceId || !outputDeviceInfo.label ? t('Default') : outputDeviceInfo.label;\r\n\r\n        const inputAudioDeviceInfo = inputAudio.find(x => x.deviceId === inputAudioDeviceId || !inputAudioDeviceId && x.deviceId === 'default');\r\n        const inputAudioString = !inputAudioDeviceInfo || inputAudioDeviceInfo.deviceId === 'default' || !inputAudioDeviceInfo.deviceId || !inputAudioDeviceInfo.label ? t('Default') : inputAudioDeviceInfo.label;\r\n\r\n        const inputVideoDeviceInfo = inputVideo.find(x => x.deviceId === inputVideoDeviceId || !inputVideoDeviceId && x.deviceId === 'default');\r\n        const inputVideoString = !inputVideoDeviceInfo || inputVideoDeviceInfo.deviceId === 'default' || !inputVideoDeviceInfo.deviceId || !inputVideoDeviceInfo.label ? t('Default') : inputVideoDeviceInfo.label;\r\n\r\n        const { currentGroupCall } = CallStore;\r\n        const chatId = currentGroupCall ? currentGroupCall.chatId : 0;\r\n\r\n        const username = getChatUsername(chatId);\r\n\r\n        if (openDeviceSelect) {\r\n            const { type } = openDeviceSelect;\r\n            let items = [];\r\n            let deviceId = null;\r\n            switch (type) {\r\n                case 'output': {\r\n                    items = output;\r\n                    deviceId = outputDeviceId;\r\n                    break;\r\n                }\r\n                case 'inputAudio': {\r\n                    items = inputAudio;\r\n                    deviceId = inputAudioDeviceId;\r\n                    break;\r\n                }\r\n                case 'inputVideo': {\r\n                    items = inputVideo;\r\n                    deviceId = inputVideoDeviceId;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return (\r\n                <div className='group-call-settings-device-select'>\r\n                    <div className='group-call-settings-panel'>\r\n                        <div className='group-call-settings-panel-header'>\r\n                            <div className='group-call-panel-caption'>\r\n                                <div className='group-call-title'>{type === 'output' ? t('OutputDevice') : t('InputDevice')}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='group-call-settings-panel-content'>\r\n                            {items.map(x => (\r\n                                <div key={x.deviceId} className='group-call-settings-panel-item' onClick={() => this.handleSelectDevice(type, x.deviceId)}>\r\n                                    <div className='group-call-settings-panel-item-title'>{x.label || t('Default')}</div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className='group-call-settings-panel-buttons'>\r\n                            <div className='group-call-settings-panel-done' onClick={this.handleCloseDeviceSelect}>\r\n                                {t('OK')}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n\r\n\r\n        const canManage = canManageVoiceChats(chatId);\r\n        // console.log('[call][GroupCallSettings] render', muteNewParticipants, allowedChangeMuteNewParticipants);\r\n\r\n        return (\r\n            <div className='group-call-settings' onMouseDown={stopPropagation} onClick={this.handleCancel}>\r\n                <div className='group-call-settings-panel' onClick={stopPropagation}>\r\n                    <div className='group-call-settings-panel-header'>\r\n                        <div className='group-call-panel-caption'>\r\n                            <div className='group-call-title'>{t('Settings')}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='group-call-settings-panel-content'>\r\n                        { canManage && allowedChangeMuteNewParticipants && (\r\n                            <div className='group-call-settings-panel-item' onClick={this.handleMuteNewParticipants}>\r\n                                <div className='group-call-settings-panel-item-title'>{t('VoipGroupOnlyAdminsCanSpeak')}</div>\r\n                                <Switch\r\n                                    disableRipple\r\n                                    classes={{\r\n                                        root: 'group-call-settings-panel-switch-root',\r\n                                        switchBase: 'group-call-settings-panel-switch-base',\r\n                                        colorSecondary: 'group-call-settings-panel-switch-color-secondary',\r\n                                        checked: 'group-call-settings-panel-switch-checked',\r\n                                        track: 'group-call-settings-panel-switch-track'\r\n                                    }}\r\n                                    checked={muteNewParticipants}\r\n                                    onChange={this.handleMuteNewParticipants}/>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('output')}>\r\n                            <div className='group-call-settings-panel-item-title'>{t('Speaker')}</div>\r\n                            <div className='group-call-settings-panel-item-subtitle'>{outputString}</div>\r\n                        </div>\r\n\r\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputAudio')}>\r\n                            <div className='group-call-settings-panel-item-title'>{t('Microphone')}</div>\r\n                            <div className='group-call-settings-panel-item-subtitle'>{inputAudioString}</div>\r\n                        </div>\r\n\r\n                        <GroupCallMicAmplitude stream={inputAudioStream}/>\r\n\r\n                        { callId && (\r\n                            <>\r\n                                <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputVideo')}>\r\n                                    <div className='group-call-settings-panel-item-title'>{t('Camera')}</div>\r\n                                    <div className='group-call-settings-panel-item-subtitle'>{inputVideoString}</div>\r\n                                </div>\r\n                                <CallSettingsVideoPreview stream={inputVideoStream}/>\r\n                                {/*<div>*/}\r\n                                {/*    <video id='call-settings-video' autoPlay={true} muted={true}/>*/}\r\n                                {/*</div>*/}\r\n                            </>\r\n                        )}\r\n                        { username && (\r\n                            <div className='group-call-settings-panel-item' onClick={this.handleCopyLink}>\r\n                                {t('VoipGroupCopyInviteLink')}\r\n                            </div>\r\n                        )}\r\n                        { canManage && (\r\n                            <div className='group-call-settings-panel-item group-call-settings-panel-item-secondary' onClick={this.handleEnd}>\r\n                                {t('VoipGroupEndChat')}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className='group-call-settings-panel-buttons'>\r\n                        <div className='group-call-settings-panel-done' onClick={this.handleDone}>\r\n                            {t('Done')}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallSettings.propTypes = {\r\n    callId: PropTypes.number,\r\n    groupCallId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(GroupCallSettings);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\r\n    'More'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,2A3,3 0 0,1 15,5V11A3,3 0 0,1 12,14A3,3 0 0,1 9,11V5A3,3 0 0,1 12,2M19,11C19,14.53 16.39,17.44 13,17.93V21H11V17.93C7.61,17.44 5,14.53 5,11H7A5,5 0 0,0 12,16A5,5 0 0,0 17,11H19Z' />,\r\n    'Mic'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19,11C19,12.19 18.66,13.3 18.1,14.28L16.87,13.05C17.14,12.43 17.3,11.74 17.3,11H19M15,11.16L9,5.18V5A3,3 0 0,1 12,2A3,3 0 0,1 15,5V11L15,11.16M4.27,3L21,19.73L19.73,21L15.54,16.81C14.77,17.27 13.91,17.58 13,17.72V21H11V17.72C7.72,17.23 5,14.41 5,11H6.7C6.7,14 9.24,16.1 12,16.1C12.81,16.1 13.6,15.91 14.31,15.58L12.65,13.92L12,14A3,3 0 0,1 9,11V10.28L3,4.27L4.27,3Z' />,\r\n    'MicOff'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport VideocamIcon from '@material-ui/icons/VideocamOutlined';\r\nimport VideocamOffIcon from '@material-ui/icons/VideocamOffOutlined';\r\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport GroupCallSettings from './GroupCallSettings';\r\nimport MenuIcon from '../../Assets/Icons/More';\r\nimport MicIcon from '../../Assets/Icons/Mic';\r\nimport MicOffIcon from '../../Assets/Icons/MicOff';\r\nimport { closeCallPanel } from '../../Actions/Call';\r\nimport { isFirefox } from '../../Calls/P2P/P2PSdpBuilder';\r\nimport { p2pGetCallStatus, p2pIsCallReady } from '../../Calls/Utils';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport { stopPropagation } from '../../Utils/Message';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './CallPanel.css';\r\n\r\nconst SUPPORTS_ROTATION = true;\r\n\r\nclass CallPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.callPanelRef = React.createRef();\r\n\r\n        const { callId } = props;\r\n\r\n        this.state = {\r\n            openSettings: false,\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0,\r\n            fullScreen: false,\r\n\r\n            inputMediaState: CallStore.p2pGetMediaState(callId, 'input'),\r\n            outputMediaState: CallStore.p2pGetMediaState(callId, 'output')\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const callPanel = this.callPanelRef.current;\r\n        if (callPanel) {\r\n            const prefixes = ['', 'moz', 'webkit', 'ms']\r\n            prefixes.forEach(x => {\r\n                callPanel.addEventListener(x + 'fullscreenchange', this.handleFullScreenChange);\r\n            });\r\n        }\r\n\r\n        CallStore.on('updateCall', this.handleUpdateCall);\r\n        CallStore.on('clientUpdateCallMediaState', this.onClientUpdateCallMediaState);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const callPanel = this.callPanelRef.current;\r\n        if (callPanel) {\r\n            const prefixes = ['', 'moz', 'webkit', 'ms']\r\n            prefixes.forEach(x => {\r\n                callPanel.removeEventListener(x + 'fullscreenchange', this.handleFullScreenChange);\r\n            });\r\n        }\r\n\r\n        CallStore.off('updateCall', this.handleUpdateCall);\r\n        CallStore.off('clientUpdateCallMediaState', this.onClientUpdateCallMediaState);\r\n    }\r\n\r\n    onClientUpdateCallMediaState = update => {\r\n        const { callId: currentCallId } = this.props;\r\n        const { callId, mediaState, type } = update;\r\n        if (callId !== currentCallId) return;\r\n\r\n        if (type === 'input') {\r\n            this.setState({ inputMediaState: mediaState });\r\n        } else {\r\n            this.setState({ outputMediaState: mediaState });\r\n        }\r\n    };\r\n\r\n    handleUpdateCall = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleFullScreenChange = () => {\r\n        this.setState({\r\n            fullScreen: this.isFullScreen()\r\n        });\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.handleClose();\r\n    }\r\n\r\n    handleAccept = async event => {\r\n        event.stopPropagation();\r\n\r\n        const { callId } = this.props;\r\n        if (!callId) return;\r\n\r\n        await CallStore.p2pAcceptCall(callId);\r\n    };\r\n\r\n    handleDiscard = async event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { callId } = this.props;\r\n        if (!callId) return;\r\n\r\n        closeCallPanel();\r\n        setTimeout(() => {\r\n            CallStore.p2pHangUp(callId, true);\r\n        }, 100);\r\n    };\r\n\r\n    handleOpenSettings = async event => {\r\n        this.handleCloseContextMenu();\r\n\r\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\r\n\r\n        this.setState({\r\n            openSettings: true\r\n        });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        this.setState({\r\n            openSettings: false\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        if (this.isFullScreen()) {\r\n            this.exitFullscreen();\r\n            return;\r\n        }\r\n\r\n        this.handleDiscard(null);\r\n    };\r\n\r\n    handleShareScreen = () => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { currentCall } = CallStore;\r\n        if (!currentCall) return;\r\n\r\n        const { screenStream } = currentCall;\r\n        if (screenStream) {\r\n            CallStore.p2pStopScreenSharing();\r\n        } else {\r\n            CallStore.p2pStartScreenSharing();\r\n        }\r\n    };\r\n\r\n    handleFullScreen = () => {\r\n        this.handleCloseContextMenu();\r\n\r\n        setTimeout(() => {\r\n            if (this.isFullScreen()) {\r\n                this.exitFullscreen();\r\n                return;\r\n            }\r\n\r\n            this.requestFullscreen();\r\n        }, 250);\r\n    }\r\n\r\n    isFullScreen() {\r\n        const callPanel = this.callPanelRef.current;\r\n        if (!callPanel) return false;\r\n\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        return fullscreenElement === callPanel;\r\n    }\r\n\r\n    requestFullscreen() {\r\n        const callPanel = this.callPanelRef.current;\r\n        if (!callPanel) return false;\r\n\r\n        const method = callPanel.requestFullscreen || callPanel.mozRequestFullScreen || callPanel.webkitRequestFullscreen;\r\n\r\n        method && method.call(callPanel);\r\n    }\r\n\r\n    exitFullscreen() {\r\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\r\n\r\n        method && method.call(document);\r\n    }\r\n\r\n    handleOpenContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { currentTarget } = event;\r\n\r\n        const { userId } = this.props;\r\n        if (userId === UserStore.getMyId()) return;\r\n\r\n        const { anchorEl } = this.state;\r\n\r\n        if (anchorEl) {\r\n            this.setState({ anchorEl: null });\r\n        } else {\r\n            this.setState({\r\n                anchorEl: currentTarget\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleAudio = () => {\r\n        const { inputMediaState } = this.state;\r\n        if (!inputMediaState) return;\r\n\r\n        const { muted } = inputMediaState;\r\n\r\n        CallStore.p2pAudioEnabled(muted);\r\n    };\r\n\r\n    handleVideo = () => {\r\n        const { inputMediaState } = this.state;\r\n        if (!inputMediaState) return;\r\n\r\n        const muted = inputMediaState.videoState === 'inactive';\r\n\r\n        CallStore.p2pVideoEnabled(muted)\r\n    };\r\n\r\n    render() {\r\n        const { callId, t } = this.props;\r\n        const { openSettings, anchorEl, fullScreen, inputMediaState, outputMediaState } = this.state;\r\n        const { currentCall } = CallStore;\r\n\r\n        const call = CallStore.p2pGet(callId);\r\n        if (!call) return null;\r\n\r\n        const { user_id: userId, is_outgoing, state } = call;\r\n\r\n        let screenSharing = currentCall && Boolean(currentCall.screenStream);\r\n\r\n        let outputVideoStyle = null;\r\n        if (SUPPORTS_ROTATION && outputMediaState && isFirefox() && !is_outgoing) {\r\n            outputVideoStyle = {\r\n                transform: `rotate(${outputMediaState.videoRotation}deg)`\r\n            };\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('group-call-panel', { 'full-screen': fullScreen })} ref={this.callPanelRef}>\r\n                <div className='group-call-panel-header'>\r\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </div>\r\n                    <div className='group-call-panel-caption' onMouseDown={stopPropagation} onClick={stopPropagation}>\r\n                        <div className='group-call-title'>{getUserFullName(userId, null)}</div>\r\n                        <div className='group-call-join-panel-subtitle'>\r\n                            {p2pGetCallStatus(callId)}\r\n                        </div>\r\n                    </div>\r\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleOpenContextMenu}>\r\n                        <MenuIcon />\r\n                    </div>\r\n                    <Popover\r\n                        container={this.callPanelRef.current}\r\n                        classes={{\r\n                            paper: 'group-call-participant-menu-root'\r\n                        }}\r\n                        anchorEl={anchorEl}\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={this.handleCloseContextMenu}\r\n                        getContentAnchorEl={null}\r\n                        disableRestoreFocus={true}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'right'\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right'\r\n                        }}\r\n                        onMouseDown={e => e.stopPropagation()}>\r\n                        <MenuList onClick={e => e.stopPropagation()}>\r\n                            <MenuItem\r\n                                classes={{ root: 'group-call-participant-menu-item' }}\r\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                                TouchRippleProps={{\r\n                                    classes : {\r\n                                        child : 'group-call-participant-menu-item-ripple-child',\r\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                    }\r\n                                }}\r\n                                onClick={this.handleOpenSettings}>\r\n                                <ListItemText primary={t('Settings')} />\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                classes={{ root: 'group-call-participant-menu-item' }}\r\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                                TouchRippleProps={{\r\n                                    classes : {\r\n                                        child : 'group-call-participant-menu-item-ripple-child',\r\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                    }\r\n                                }}\r\n                                onClick={this.handleFullScreen}>\r\n                                <ListItemText primary={fullScreen ? t('ExitFullScreen') : t('EnterFullScreen')} />\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                classes={{ root: 'group-call-participant-menu-item' }}\r\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                                TouchRippleProps={{\r\n                                    classes : {\r\n                                        child : 'group-call-participant-menu-item-ripple-child',\r\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                    }\r\n                                }}\r\n                                onClick={this.handleShareScreen}>\r\n                                <ListItemText primary={screenSharing ? t('StopScreenSharing') : t('StartScreenSharing')} />\r\n                            </MenuItem>\r\n                        </MenuList>\r\n                    </Popover>\r\n                </div>\r\n                <div className='call-panel-content scrollbars-hidden' onDoubleClick={this.handleFullScreen}>\r\n                    <video id='call-output-video' style={outputVideoStyle} className={outputMediaState && outputMediaState.videoState === 'active' ? 'call-video-active' : 'call-video-inactive'} autoPlay={true} muted={false}/>\r\n                    <video id='call-input-video' className={inputMediaState && inputMediaState.videoState === 'active' ? 'call-video-active' : 'call-video-inactive'} autoPlay={true} muted={true}/>\r\n                </div>\r\n                { outputMediaState && outputMediaState.muted && (\r\n                    <div className='call-panel-microphone-hint'>\r\n                        <div className='call-panel-microphone-hint-wrapper'>\r\n                            <MicOffIcon/>\r\n                            <div className='call-panel-microphone-hint-text'>\r\n                                {LStore.formatString('VoipUserMicrophoneIsOff', getUserFullName(userId, null))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <div className='group-call-panel-buttons'>\r\n                    <div className='group-call-panel-button'>\r\n                        <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={this.handleVideo}>\r\n                            {inputMediaState && inputMediaState.videoState === 'active' ? <VideocamIcon/> : <VideocamOffIcon/>}\r\n                        </div>\r\n                        <div className='group-call-panel-button-text'>\r\n                            {inputMediaState && inputMediaState.videoState === 'active' ? t('VoipStopVideo') : t('VoipStartVideo')}\r\n                        </div>\r\n                    </div>\r\n                    <div className='group-call-panel-button'>\r\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleDiscard}>\r\n                            <CallEndIcon />\r\n                        </div>\r\n                        <div className='group-call-panel-button-text'>\r\n                            {(p2pIsCallReady(callId) || is_outgoing) ? t('VoipEndCall') : t('VoipDeclineCall')}\r\n                        </div>\r\n                    </div>\r\n                    {!is_outgoing && state['@type'] === 'callStatePending' && (\r\n                        <div className='group-call-panel-button'>\r\n                            <div className='group-call-panel-button-answer' onMouseDown={stopPropagation} onClick={this.handleAccept}>\r\n                                <CallIcon />\r\n                            </div>\r\n                            <div className='group-call-panel-button-text'>\r\n                                {t('VoipAnswerCall')}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <div className='group-call-panel-button'>\r\n                        <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={this.handleAudio}>\r\n                            {inputMediaState && !inputMediaState.muted ? <MicIcon/> : <MicOffIcon/>}\r\n                        </div>\r\n                        <div className='group-call-panel-button-text'>\r\n                            {inputMediaState && !inputMediaState.muted ? t('Mute') : t('Unmute')}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {openSettings && <GroupCallSettings callId={callId} onClose={this.handleCloseSettings}/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCallPanel.propTypes = {\r\n    callId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(CallPanel);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CallPanel from './CallPanel';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport { clamp } from '../../Utils/Common';\r\nimport { closeGroupCallPanel } from '../../Actions/Call';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport './GroupCall.css';\r\n\r\nclass Call extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n\r\n        this.state = {\r\n            fullScreen: false\r\n        };\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n\r\n                this.handleClose();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setPosition();\r\n\r\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        window.addEventListener('resize', this.onWindowResize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n    }\r\n\r\n    onClientUpdateGroupCallFullScreen = update => {\r\n        const { fullscreen } = update;\r\n\r\n        this.setState({ fullscreen });\r\n    };\r\n\r\n    handleClose = () => {\r\n        closeGroupCallPanel();\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        if (event.nativeEvent.which !== 1) return;\r\n\r\n        const element = document.getElementById('call');\r\n        if (element) element.focus();\r\n\r\n        this.mouseDownRoot = true;\r\n        event.preventDefault();\r\n\r\n        this.left = parseInt(element.style.left, 10);\r\n        this.top = parseInt(element.style.top, 10);\r\n        this.pageX = event.nativeEvent.pageX;\r\n        this.pageY = event.nativeEvent.pageY;\r\n\r\n        document.onmousemove = this.handleMouseMove;\r\n        document.onmouseup = this.handleMouseUp;\r\n\r\n        this.windowDragging = true;\r\n    };\r\n\r\n    onWindowResize = () => {\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        if (fullscreenElement) return;\r\n\r\n        const player = document.getElementById('call');\r\n\r\n        const oldLeft = parseInt(player.style.left, 10);\r\n        const oldTop = parseInt(player.style.top, 10);\r\n\r\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\r\n\r\n        if (oldLeft === left && oldTop === top) return;\r\n\r\n        // console.log('[pip] windowResize', left, top);\r\n        player.style.left = left + 'px';\r\n        player.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseMove = event => {\r\n        event.preventDefault();\r\n\r\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\r\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\r\n\r\n        const element = document.getElementById('call');\r\n        element.style.left = left + 'px';\r\n        element.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseUp = event => {\r\n        event.preventDefault();\r\n\r\n        document.onmousemove = null;\r\n        document.onmouseup = null;\r\n\r\n        this.windowDragging = false;\r\n    };\r\n\r\n    setPosition() {\r\n        const element = document.getElementById('call');\r\n        let { pipParams } = CallStore;\r\n        if (!pipParams) {\r\n            pipParams = {\r\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\r\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\r\n            }\r\n        }\r\n\r\n        const { left: prevLeft, top: prevTop } = pipParams;\r\n\r\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\r\n\r\n        element.style.left = left + 'px';\r\n        element.style.top = top + 'px';\r\n    }\r\n\r\n    normalizePosition(left, top, checkGlue = true) {\r\n        const player = document.getElementById('call');\r\n        const playerWidth = player ? player.clientWidth : 300;\r\n        const playerHeight = player ? player.clientHeight : 300;\r\n\r\n        const { clientWidth: documentWidth } = document.documentElement;\r\n        const { clientHeight: documentHeight } = document.documentElement;\r\n\r\n        if (checkGlue && this.glueLeft) {\r\n            left = 0;\r\n        } else if (checkGlue && this.glueRight) {\r\n            left = documentWidth - playerWidth;\r\n        } else {\r\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\r\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\r\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\r\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\r\n            left = clamp(left, 0, documentWidth - playerWidth);\r\n        }\r\n\r\n        if (checkGlue && this.glueTop) {\r\n            top = 0;\r\n        } else if (checkGlue && this.glueBottom) {\r\n            top = documentHeight - playerHeight;\r\n        } else {\r\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\r\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\r\n            top = clamp(top, 0, documentHeight - playerHeight);\r\n        }\r\n\r\n        this.glueLeft = left === 0;\r\n        this.glueRight = left === documentWidth - playerWidth;\r\n        this.glueTop = top === 0;\r\n        this.glueBottom = top === documentHeight - playerHeight;\r\n\r\n        CallStore.pipParams = { left, top };\r\n\r\n        return { left, top };\r\n    }\r\n\r\n    render() {\r\n        const { callId } = this.props;\r\n        const { fullscreen } = this.state;\r\n\r\n        return (\r\n            <div\r\n                id='call'\r\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\r\n                onMouseDown={this.handleMouseDown}\r\n            >\r\n                <CallPanel callId={callId}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCall.propTypes = {\r\n    callId: PropTypes.number\r\n};\r\n\r\nexport default Call;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\r\n    'Document2'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\r\n    'SharedMedia'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\r\n    'Verified'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\r\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './DialogTitle.css';\r\n\r\nclass DialogTitle extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (update.chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, showSavedMessages } = this.props;\r\n\r\n        const isVerified = isChatVerified(chatId);\r\n        const title = getChatTitle(chatId, showSavedMessages, t);\r\n\r\n        return (\r\n            <div className='dialog-title'>\r\n                <span className='dialog-title-span'>{title}</span>\r\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogTitle.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    showSavedMessages: PropTypes.bool\r\n};\r\n\r\nDialogTitle.defaultProps = {\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(DialogTitle);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport './DialogStatus.css';\r\n\r\nclass DialogStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            subtitle: getChatSubtitleWithoutTyping(chatId),\r\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            const { chatId } = props;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                subtitle: getChatSubtitleWithoutTyping(chatId),\r\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId } = this.props;\r\n        const { subtitle, isAccent } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.subtitle !== subtitle) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isAccent !== isAccent) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    onUpdateUserStatus = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        let updateSubtitle = false;\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\r\n                if (fullInfo && fullInfo.members) {\r\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\r\n                    if (member) {\r\n                        updateSubtitle = true;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypePrivate': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    updateSubtitle = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    updateSubtitle = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (updateSubtitle) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    updateSubtitle = chatId => {\r\n        this.setState({\r\n            subtitle: getChatSubtitleWithoutTyping(chatId),\r\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n        });\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (\r\n            type &&\r\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\r\n            type.user_id === update.user_id\r\n        ) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { subtitle: externalSubtitle } = this.props;\r\n        const { subtitle, isAccent } = this.state;\r\n\r\n        return (\r\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\r\n                {externalSubtitle ? externalSubtitle + ', ' : null}\r\n                {subtitle}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogStatus;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport DialogStatus from './DialogStatus';\r\nimport { isMeChat } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './Chat.css';\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = this.props;\r\n        this.state = {\r\n            chat: ChatStore.get(chatId)\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.chatId !== this.props.chatId;\r\n    }\r\n\r\n    handleClick = () => {\r\n        const { chatId, onSelect } = this.props;\r\n        if (!onSelect) return;\r\n\r\n        onSelect(chatId);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\r\n\r\n        const isSavedMessages = isMeChat(chatId);\r\n\r\n        return (\r\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\r\n                <div className='chat-wrapper'>\r\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\r\n                    {showTitle && (\r\n                        <div className='chat-inner-wrapper'>\r\n                            <div className='tile-first-row'>\r\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\r\n                            </div>\r\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\r\n                                <div className='tile-second-row'>\r\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    subtitle: PropTypes.string,\r\n    showSavedMessages: PropTypes.bool,\r\n    showStatus: PropTypes.bool,\r\n    showTitle: PropTypes.bool,\r\n    onSelect: PropTypes.func,\r\n    onTileSelect: PropTypes.func\r\n};\r\n\r\nChat.defaultProps = {\r\n    showSavedMessages: true,\r\n    showStatus: true,\r\n    showTitle: true\r\n};\r\n\r\nexport default Chat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\r\n    'Back'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\r\nimport './ChatDetailsHeader.css';\r\n\r\nclass ChatDetailsHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, t, backButton, onClick, onClose } = this.props;\r\n\r\n        let info = t('ChatInfo');\r\n        if (isPrivateChat(chatId)) {\r\n            info = t('Info');\r\n        } else if (isChannelChat(chatId)) {\r\n            info = t('ChannelInfo');\r\n        }\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                {backButton && (\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                )}\r\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\r\n                    <span className='header-status-content'>{info}</span>\r\n                </div>\r\n                {!backButton && (\r\n                    <IconButton className='header-right-button' onClick={onClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(ChatDetailsHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { isChatMuted } from '../../Utils/Chat';\r\nimport { debounce } from '../../Utils/Common';\r\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\r\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport NotificationStore from '../../Stores/NotificationStore';\r\n\r\nclass Notifications extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            isMuted: isChatMuted(chatId)\r\n        };\r\n\r\n        this.debouncedSetChatNotificationSettings = debounce(\r\n            this.setChatNotificationSettings,\r\n            NOTIFICATION_DEBOUNCE_DELAY_MS\r\n        );\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            const { chatId } = props;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                isMuted: isChatMuted(chatId)\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\r\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\r\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    onUpdateChatNotificationSettings = update => {\r\n        const { chat_id } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (!chat_id) return;\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.setState({ isMuted: isChatMuted(chatId) });\r\n    };\r\n\r\n    onUpdateScopeNotificationSettings = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        switch (update.scope['@type']) {\r\n            case 'notificationSettingsScopeGroupChats': {\r\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\r\n                    this.setState({ isMuted: isChatMuted(chatId) });\r\n                }\r\n                break;\r\n            }\r\n            case 'notificationSettingsScopePrivateChats': {\r\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\r\n                    this.setState({ isMuted: isChatMuted(chatId) });\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleSetChatNotifications = () => {\r\n        this.setState({ isMuted: !this.state.isMuted });\r\n        this.debouncedSetChatNotificationSettings();\r\n    };\r\n\r\n    setChatNotificationSettings = () => {\r\n        const { chatId } = this.props;\r\n        const { isMuted } = this.state;\r\n\r\n        toggleChatNotificationSettings(chatId, isMuted);\r\n    };\r\n}\r\n\r\nexport default Notifications;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Notifications from '../ColumnMiddle/Notifications';\r\nimport './NotificationsListItem.css';\r\n\r\nclass NotificationsListItem extends Notifications {\r\n    render() {\r\n        const { t } = this.props;\r\n        const { isMuted } = this.state;\r\n\r\n        return (\r\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\r\n                <ListItemIcon>\r\n                    <Checkbox\r\n                        className='notifications-checkbox'\r\n                        edge='start'\r\n                        checked={!isMuted}\r\n                        color='primary'\r\n                        tabIndex={-1}\r\n                        disableRipple\r\n                        onChange={this.handleSetChatNotifications}\r\n                    />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                    primary={\r\n                        <Typography variant='inherit' noWrap>\r\n                            {t('Notifications')}\r\n                        </Typography>\r\n                    }\r\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\r\n                />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(NotificationsListItem);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Animator from '../../../Utils/Animatior';\r\nimport { clamp, throttle } from '../../../Utils/Common';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './SharedMediaTabs.css';\r\n\r\nclass SharedMediaTabs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.filterRef = new Map();\r\n        this.filtersRef = React.createRef();\r\n        this.filterSelectionRef = React.createRef();\r\n\r\n        this.state = { }\r\n\r\n        this.onWindowResize = throttle(this.onWindowResize, 250);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n\r\n        if (chatId !== state.prevChatId) {\r\n            const media = MessageStore.getMedia(props.chatId);\r\n\r\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\r\n            const photoAndVideo = media ? media.photoAndVideo : [];\r\n            const document = media ? media.document : [];\r\n            const audio = media ? media.audio : [];\r\n            const url = media ? media.url : [];\r\n            const voiceNote = media ? media.voiceNote : [];\r\n            const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n            let selectedIndex = -1;\r\n            if (members.length > 0) {\r\n                selectedIndex = 0;\r\n            } else if (photoAndVideo.length > 0) {\r\n                selectedIndex = 1;\r\n            } else if (document.length > 0) {\r\n                selectedIndex = 2;\r\n            } else if (audio.length > 0) {\r\n                selectedIndex = 3;\r\n            } else if (url.length > 0) {\r\n                selectedIndex = 4;\r\n            } else if (voiceNote.length > 0) {\r\n                selectedIndex = 5;\r\n            } else if (groupsInCommon.length > 0) {\r\n                selectedIndex = 6;\r\n            }\r\n\r\n            return {\r\n                prevChatId: props.chatId,\r\n                selectedIndex,\r\n                members,\r\n                photoAndVideo,\r\n                document,\r\n                audio,\r\n                url,\r\n                voiceNote,\r\n                groupsInCommon,\r\n                isSmallWidth: false\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.observeResize();\r\n        this.setSelection();\r\n\r\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.unobserveResize();\r\n        this.observeResize();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unobserveResize();\r\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    hasObserver = () => {\r\n        return 'ResizeObserver' in window;\r\n    };\r\n\r\n    observeResize() {\r\n        if (!this.hasObserver()) return;\r\n        const filters = this.filtersRef.current;\r\n        if (!filters) return;\r\n\r\n        const observer = new ResizeObserver(this.onWindowResize);\r\n        observer.observe(filters);\r\n\r\n        this.resizeObserver = { observer, filters }\r\n    }\r\n\r\n    unobserveResize() {\r\n        if (!this.hasObserver()) return;\r\n        if (!this.resizeObserver) return;\r\n\r\n        const { observer, filters } = this.resizeObserver;\r\n        if (!observer) return;\r\n        if (!filters) return;\r\n\r\n        observer.unobserve(filters);\r\n    }\r\n\r\n    onWindowResize = () => {\r\n        this.setSelection(true);\r\n    };\r\n\r\n    setMediaState = (media, selectedIndex) => {\r\n        const { chatId } = this.props;\r\n\r\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\r\n        const photoAndVideo = media ? media.photoAndVideo : [];\r\n        const document = media ? media.document : [];\r\n        const audio = media ? media.audio : [];\r\n        const url = media ? media.url : [];\r\n        const voiceNote = media ? media.voiceNote : [];\r\n        const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n        const hasMembers = members.length > 0;\r\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\r\n        const hasDocument = document.length > 0;\r\n        const hasAudio = audio.length > 0;\r\n        const hasUrl = url.length > 0;\r\n        const hasVoiceNote = voiceNote.length > 0;\r\n        const hasGroupsInCommon = groupsInCommon.length > 0;\r\n\r\n        const replaceSelectedIndex =\r\n            selectedIndex === -1\r\n            || selectedIndex === 0 && !hasMembers\r\n            || selectedIndex === 1 && !hasPhotoAndVideo\r\n            || selectedIndex === 2 && !hasDocument\r\n            || selectedIndex === 3 && !hasAudio\r\n            || selectedIndex === 4 && !hasUrl\r\n            || selectedIndex === 5 && !hasVoiceNote\r\n            || selectedIndex === 6 && !hasGroupsInCommon;\r\n        if (replaceSelectedIndex) {\r\n            if (hasMembers) {\r\n                selectedIndex = 0;\r\n            } else if (hasPhotoAndVideo) {\r\n                selectedIndex = 1;\r\n            } else if (hasDocument) {\r\n                selectedIndex = 2;\r\n            } else if (hasAudio) {\r\n                selectedIndex = 3;\r\n            } else if (hasUrl) {\r\n                selectedIndex = 4;\r\n            } else if (hasVoiceNote) {\r\n                selectedIndex = 5;\r\n            } else if (hasGroupsInCommon) {\r\n                selectedIndex = 6;\r\n            }\r\n\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaTab',\r\n                chatId,\r\n                index: selectedIndex\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            selectedIndex,\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection();\r\n        });\r\n    }\r\n\r\n    onClientUpdateChatMedia = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chatId, media } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onClientUpdateMediaTab = update => {\r\n        const { chatId, index } = update;\r\n        if (chatId !== this.props.chatId) return;\r\n\r\n        this.setState({\r\n            selectedIndex: index\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection();\r\n        });\r\n    };\r\n\r\n    setSelection = (transition = true) => {\r\n        const { selectedIndex, isSmallWidth } = this.state;\r\n        if (selectedIndex === -1) return;\r\n\r\n        const padding = 3;\r\n\r\n        const scroll = this.filtersRef.current;\r\n\r\n        let item = null;\r\n        let left = 0;\r\n        const membersFilter = this.filterRef.get('members');\r\n        if (selectedIndex === 0 && membersFilter) {\r\n            item = membersFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\r\n        if (selectedIndex === 1 && photoAndVideoFilter) {\r\n            item = photoAndVideoFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const documentFilter = this.filterRef.get('document');\r\n        if (selectedIndex === 2 && documentFilter) {\r\n            item = documentFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const audioFilter = this.filterRef.get('audio');\r\n        if (selectedIndex === 3 && audioFilter) {\r\n            item = audioFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const urlFilter = this.filterRef.get('url');\r\n        if (selectedIndex === 4 && urlFilter) {\r\n            item = urlFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\r\n        if (selectedIndex === 5 && voiceNoteFilter) {\r\n            item = voiceNoteFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\r\n        if (selectedIndex === 6 && groupsInCommonFilter) {\r\n            item = groupsInCommonFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        if (!item) return;\r\n\r\n        const filterSelection = this.filterSelectionRef.current;\r\n        if (filterSelection) {\r\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\r\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\r\n        }\r\n\r\n        if (item && transition){\r\n            const { animator } = this;\r\n\r\n            if (animator) {\r\n                animator.stop();\r\n            }\r\n\r\n            this.animator = new Animator(250, [\r\n                {\r\n                    from: scroll.scrollLeft,\r\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\r\n                    func: left => (scroll.scrollLeft = left)\r\n                }\r\n            ]);\r\n\r\n            setTimeout(() => {\r\n                if (!this.animator) return;\r\n\r\n                this.animator.start();\r\n            }, 0);\r\n\r\n\r\n            // item.scrollIntoView();\r\n        }\r\n    };\r\n\r\n    handleFilterClick = (event, id) => {\r\n        if (event && event.button !== 0) return;\r\n        const { chatId, onClick } = this.props;\r\n\r\n        onClick && onClick(event);\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTab',\r\n            chatId,\r\n            index: id\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\r\n\r\n        const tabsCount =\r\n            (members.length > 0 ? 1 : 0) +\r\n            (photoAndVideo.length > 0 ? 1 : 0) +\r\n            (document.length > 0 ? 1 : 0) +\r\n            (audio.length > 0 ? 1 : 0) +\r\n            (url.length > 0 ? 1 : 0) +\r\n            (voiceNote.length > 0 ? 1 : 0) +\r\n            (groupsInCommon.length > 0 ? 1 : 0);\r\n\r\n        const hasSharedMedia =\r\n            members.length > 0\r\n            || photoAndVideo.length > 0\r\n            || document.length > 0\r\n            || audio.length > 0\r\n            || url.length > 0\r\n            || voiceNote.length > 0\r\n            || groupsInCommon.length > 0;\r\n\r\n        if (!hasSharedMedia) {\r\n            return null;\r\n        }\r\n\r\n        this.filterRef = new Map();\r\n        return (\r\n            <div className={classNames('tabs', 'shared-media-tabs')}>\r\n                <div className='tabs-bottom-border'/>\r\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\r\n                    {members.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('members', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\r\n                            <span>{t('GroupMembers')}</span>\r\n                        </div>\r\n                    )}\r\n                    {photoAndVideo.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\r\n                            <span>{t('SharedMediaTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {document.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('document', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\r\n                            <span>{t('SharedFilesTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {audio.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('audio', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\r\n                            <span>{t('SharedMusicTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {url.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('url', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\r\n                            <span>{t('SharedLinksTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {voiceNote.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('voiceNote', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\r\n                            <span>{t('SharedVoiceTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {groupsInCommon.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\r\n                            <span>{t('SharedGroupsTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nSharedMediaTabs.propTypes = {\r\n    chatId: PropTypes.number,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SharedMediaTabs);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\r\n    'Delete'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\r\n    'Share'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport DeleteIcon from '../../../Assets/Icons/Delete';\r\nimport ShareIcon from '../../../Assets/Icons/Share';\r\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './ContextMenu.css';\r\n\r\nclass ContextMenu extends React.Component {\r\n    handleOpenMessage = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        openChat(chatId, messageId);\r\n    };\r\n\r\n    handleForward = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        forwardMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleDelete = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        deleteMessages(chatId, [messageId]);\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\r\n\r\n        return (\r\n            <Popover\r\n                open={open}\r\n                onClose={onClose}\r\n                anchorReference='anchorPosition'\r\n                anchorPosition={anchorPosition}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right'\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left'\r\n                }}\r\n                onMouseDown={e => e.stopPropagation()}\r\n                onClick={e => e.stopPropagation()}>\r\n                <MenuList>\r\n                    {showOpenMessage && (\r\n                        <MenuItem onClick={this.handleOpenMessage}>\r\n                            <ListItemIcon>\r\n                                <ChatBubbleOutlineOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('GoToMessage')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {can_be_forwarded && (\r\n                        <MenuItem onClick={this.handleForward}>\r\n                            <ListItemIcon>\r\n                                <ShareIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Forward')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\r\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    )}\r\n                </MenuList>\r\n            </Popover>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nContextMenu.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    anchorPosition: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    showOpenMessage: PropTypes.bool\r\n};\r\n\r\nexport default withTranslation()(ContextMenu);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContextMenu from './ContextMenu';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { getSize } from '../../../Utils/Common';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './SharedPhoto.css';\r\n\r\nclass SharedPhoto extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { photo, size, thumbnailSize } = props;\r\n        const { prevPhoto } = state;\r\n        if (photo !== prevPhoto) {\r\n            return {\r\n                prevPhoto: photo,\r\n\r\n                contextMenu: false,\r\n                left: 0,\r\n                top: 0,\r\n\r\n                photoSize: getSize(photo.sizes, size),\r\n                thumbSize: getSize(photo.sizes, thumbnailSize),\r\n                minithumbnail: photo.minithumbnail\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (photo !== nextProps.photo) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    onClientUpdatePhotoBlob = update => {\r\n        const { photoSize, thumbSize } = this.state;\r\n        const { fileId } = update;\r\n\r\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\r\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\r\n\r\n        if (!photoSize) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\r\n        const src = getSrc(photoSize.photo);\r\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\r\n                        {src !== thumbSrc && (\r\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedPhoto.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    photo: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func,\r\n\r\n    size: PropTypes.number,\r\n    thumbnailSize: PropTypes.number,\r\n    style: PropTypes.object\r\n};\r\n\r\nSharedPhoto.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\r\n};\r\n\r\nexport default SharedPhoto;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ContextMenu from './ContextMenu';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport { getMedia } from '../../../Utils/Media';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedDocument.css';\r\n\r\nclass SharedDocument extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { date } = message;\r\n\r\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\r\n            day: 'numeric',\r\n            month: 'short',\r\n            year: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n            hour12: false\r\n        });\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\r\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedDocument.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    showOpenMessage: PropTypes.bool\r\n};\r\n\r\nexport default withTranslation()(SharedDocument);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { hasVideoNote } from '../../../Utils/Message';\r\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './SharedLinkTile.css';\r\n\r\nclass SharedLinkTile extends React.Component {\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    onClientUpdatePhotoBlob = update => {\r\n        const { thumbnail } = this.props;\r\n        if (!thumbnail) return;\r\n\r\n        const file = thumbnail.file || thumbnail.photo;\r\n        if (!file) return;\r\n\r\n        if (update.fileId === file.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\r\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\r\n        const isVideoNote = hasVideoNote(chatId, messageId);\r\n        const hasSrc = Boolean(src || miniSrc);\r\n\r\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\r\n\r\n        return (\r\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\r\n                {hasSrc? (\r\n                    <img\r\n                        className={classNames(\r\n                            'shared-link-tile-photo',\r\n                            { 'shared-link-tile-photo-round': isVideoNote },\r\n                            { 'media-blurred': src && isBlurred },\r\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\r\n                        )}\r\n                        draggable={false}\r\n                        src={src || miniSrc}\r\n                        alt=''\r\n                    />\r\n                ) : (\r\n                    <span>{title}</span>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSharedLinkTile.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    minithumbnail: PropTypes.object,\r\n    thumbnail: PropTypes.object,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default SharedLinkTile;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContextMenu from './ContextMenu';\r\nimport SafeLink from '../../Additional/SafeLink';\r\nimport SharedLinkTile from './SharedLinkTile';\r\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\r\nimport { getFormattedText, substring } from '../../../Utils/Message';\r\nimport punycode from '../../../Utils/Punycode';\r\nimport { PHOTO_SIZE } from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedLink.css';\r\n\r\nclass SharedLink extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (webPage !== nextProps.webPage) {\r\n            return true;\r\n        }\r\n\r\n        if (caption !== nextProps.caption) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    static isValidEntity(entity) {\r\n        if (!entity) return false;\r\n\r\n        const { type } = entity;\r\n        if (!type) return false;\r\n\r\n        return (\r\n            type['@type'] === 'textEntityTypeUrl' ||\r\n            type['@type'] === 'textEntityTypeTextUrl' ||\r\n            type['@type'] === 'textEntityTypeEmailAddress'\r\n        );\r\n    }\r\n\r\n    getTitleFromUrl(url) {\r\n        try {\r\n            url = url.startsWith('http') ? url : 'http://' + url;\r\n            const decodedUrl = decodeURI(url);\r\n\r\n            const hostname = new URL(decodedUrl).hostname.split('.');\r\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\r\n\r\n            return punycode.ToUnicode(domain);\r\n        } catch (error) {\r\n            console.error('url: ' + url + '\\n' + error);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        let thumbnail = null;\r\n        let minithumbnail = null;\r\n        let content = null;\r\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\r\n            title: '',\r\n            description: {\r\n                '@type': 'formattedText',\r\n                text: '',\r\n                entities: []\r\n            },\r\n            photo: null,\r\n            animation: null,\r\n            audio: null,\r\n            document: null,\r\n            sticker: null,\r\n            video: null,\r\n            video_note: null,\r\n            url: ''\r\n        };\r\n\r\n        if (animation) {\r\n            minithumbnail = animation.minithumbnail;\r\n            thumbnail = animation.thumbnail;\r\n        } else if (audio) {\r\n            minithumbnail = audio.album_cover_minithumbnail;\r\n            thumbnail = audio.album_cover_thumbnail;\r\n        } else if (document) {\r\n            minithumbnail = document.minithumbnail;\r\n            thumbnail = document.thumbnail;\r\n        } else if (sticker) {\r\n            minithumbnail = sticker.minithumbnail;\r\n            thumbnail = sticker.thumbnail;\r\n        } else if (video) {\r\n            minithumbnail = video.minithumbnail;\r\n            thumbnail = video.thumbnail;\r\n        } else if (videoNote) {\r\n            minithumbnail = videoNote.minithumbnail;\r\n            thumbnail = videoNote.thumbnail;\r\n        }\r\n\r\n        if (!thumbnail && !minithumbnail && photo) {\r\n            minithumbnail = photo.minithumbnail;\r\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\r\n        }\r\n\r\n        let { text, caption } = message.content;\r\n        text = text || caption;\r\n        if (text) {\r\n            const { entities } = text;\r\n            if (entities && entities.length > 0) {\r\n                const longTextMaxLength = 40;\r\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\r\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\r\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\r\n\r\n                const nonEmptyUrlEntities = urlEntities\r\n                    .filter(x => {\r\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\r\n                        entityText = entityText.replace(/\\u200B/g,'');\r\n\r\n                        return entityText.length > 0;\r\n                    });\r\n\r\n                const links = nonEmptyUrlEntities.map((x, i) => {\r\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\r\n                        url = entityText;\r\n                        let mail = false;\r\n\r\n                        switch (x.type['@type']) {\r\n                            case 'textEntityTypeTextUrl': {\r\n                                const { url: typeUrl } = x.type;\r\n                                if (typeUrl) {\r\n                                    url = typeUrl;\r\n                                }\r\n                                break;\r\n                            }\r\n                            case 'textEntityTypeUrl': {\r\n                                break;\r\n                            }\r\n                            case 'textEntityTypeEmailAddress':\r\n                                mail = true;\r\n                                break;\r\n                        }\r\n\r\n                        title = title || this.getTitleFromUrl(url) || ' ';\r\n\r\n                        return (\r\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\r\n                                {entityText}\r\n                            </SafeLink>\r\n                        );\r\n                    });\r\n\r\n                if (showLinks) {\r\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\r\n                    d = d.trim();\r\n                    content = (\r\n                        <>\r\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\r\n                            <div>{links}</div>\r\n                        </>);\r\n                } else {\r\n                    let d = description.text || '';\r\n                    d = d.trim();\r\n                    content = (\r\n                        <>\r\n                            {d && <div className='web-page-description'>{d}</div>}\r\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\r\n                        </>);\r\n                }\r\n\r\n                if (webPage) {\r\n                    title = title || this.getTitleFromUrl(url);\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\r\n                    <SharedLinkTile\r\n                        chatId={chatId}\r\n                        messageId={messageId}\r\n                        minithumbnail={minithumbnail}\r\n                        thumbnail={thumbnail}\r\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\r\n                    />\r\n                    <div className='shared-link-content'>\r\n                        {title && <div className='web-page-title'>{title}</div>}\r\n                        {content}\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedLink.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    webPage: PropTypes.object,\r\n    caption: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func,\r\n};\r\n\r\nexport default SharedLink;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AudioAction from '../../Message/Media/AudioAction';\r\nimport ContextMenu from './ContextMenu';\r\nimport MediaStatus from '../../Message/Media/MediaStatus';\r\nimport MessageAuthor from '../../Message/MessageAuthor';\r\nimport VoiceNoteTile from '../VoiceNoteTile';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedVoiceNote.css';\r\n\r\nclass SharedVoiceNote extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (voiceNote !== nextProps.voiceNote) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        if (!voiceNote) return null;\r\n\r\n        const { date, sender } = message;\r\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\r\n            day: 'numeric',\r\n            month: 'short',\r\n            year: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n            hour12: false\r\n        });\r\n\r\n        const { duration, voice: file } = voiceNote;\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\r\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\r\n                    <div className='voice-note-content'>\r\n                        <div className='document-title'><MessageAuthor sender={sender} messageId={messageId} /></div>\r\n                        <div className='voice-note-meta'>\r\n                            <AudioAction\r\n                                chatId={chatId}\r\n                                messageId={messageId}\r\n                                duration={duration}\r\n                                file={file}\r\n                                date={dateString}\r\n                            />\r\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nSharedVoiceNote.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    voiceNote: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SharedVoiceNote);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ContextMenu from './ContextMenu';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { getDurationString } from '../../../Utils/Common';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './SharedVideo.css';\r\n\r\nclass SharedVideo extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, video, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (video !== nextProps.video) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    onClientUpdateVideoThumbnailBlob = update => {\r\n        const { thumbnail } = this.props.video;\r\n        const { fileId } = update;\r\n\r\n        if (!thumbnail) return;\r\n\r\n        const { file } = thumbnail;\r\n        if (file && file.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\r\n        const { minithumbnail, thumbnail, duration } = this.props.video;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\r\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='shared-video-wrapper'>\r\n                        <div\r\n                            className={classNames('shared-video-content', {\r\n                                'media-blurred': isBlurred,\r\n                                'media-mini-blurred': !thumbSrc && isBlurred\r\n                            })}\r\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\r\n                        />\r\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedVideo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    video: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func,\r\n\r\n    size: PropTypes.number,\r\n    thumbnailSize: PropTypes.number,\r\n    style: PropTypes.object\r\n};\r\n\r\nSharedVideo.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\r\n};\r\n\r\nexport default SharedVideo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport User from '../../Tile/User';\r\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\r\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\r\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\r\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\r\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\r\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport { openChat, openUser } from '../../../Actions/Client';\r\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './SharedMediaContent.css';\r\nimport Chat from '../../Tile/Chat';\r\n\r\nconst overScanCount = 5;\r\n\r\nclass SharedMediaContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        this.state = {\r\n            scrollTop: 0\r\n        }\r\n\r\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\r\n    }\r\n\r\n    static getItemHeight(item) {\r\n        if (!item) return undefined;\r\n\r\n        switch (item['@type']) {\r\n            case 'message': {\r\n                const { content } = item;\r\n                switch (content['@type']) {\r\n                    case 'messagePhoto': {\r\n                        return undefined;\r\n                    }\r\n                    case 'messageVideo': {\r\n                        return undefined;\r\n                    }\r\n                    case 'messageDocument': {\r\n                        return 78;\r\n                    }\r\n                    case 'messageAudio': {\r\n                        return 94;\r\n                    }\r\n                    case 'messageVoiceNote': {\r\n                        return 74;\r\n                    }\r\n                    default: {\r\n                        return undefined;\r\n                    }\r\n                }\r\n            }\r\n            case 'chat': {\r\n                return 74;\r\n            }\r\n            case 'user': {\r\n                return 74;\r\n            }\r\n            default: {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    static getRowHeight(selectedIndex) {\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return 74;\r\n            }\r\n            case 1: {\r\n                return undefined;\r\n            }\r\n            case 2: {\r\n                return 78;\r\n            }\r\n            case 3: {\r\n                return 94;\r\n            }\r\n            case 4: {\r\n                return undefined;\r\n            }\r\n            case 5: {\r\n                return 74;\r\n            }\r\n            case 6: {\r\n                return 74;\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\r\n        const migratedChatId = -1;\r\n\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                const { user_id: id } = item;\r\n                return (\r\n                    <ListItem\r\n                        button\r\n                        key={`user_id=${id}`}\r\n                        className='groups-in-common-item'>\r\n                        <User userId={id} onSelect={onOpen}/>\r\n                    </ListItem>\r\n                );\r\n            }\r\n            case 1: {\r\n                const { chat_id, id, content } = item;\r\n                if (content['@type'] === 'messageVideo') {\r\n                    return (\r\n                        <SharedVideo\r\n                            key={`chat_id=${chat_id}_message_id=${id}`}\r\n                            chatId={chat_id}\r\n                            messageId={id}\r\n                            video={content.video}\r\n                            openMedia={onOpen}\r\n                            showOpenMessage={chat_id !== migratedChatId}\r\n                        />\r\n                    );\r\n                }\r\n\r\n                return (\r\n                    <SharedPhoto\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        photo={content.photo}\r\n                        openMedia={onOpen}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 2: {\r\n                const { chat_id, id } = item;\r\n                return (\r\n                    <SharedDocument\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 3: {\r\n                const { chat_id, id, content } = item;\r\n                return (\r\n                    <SharedDocument\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 4: {\r\n                const { chat_id, id, content } = item;\r\n                return (\r\n                    <SharedLink\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        webPage={content.web_page}\r\n                        caption={content.caption}\r\n                        openMedia={onOpen}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 5: {\r\n                const { chat_id, id, content } = item;\r\n                return (\r\n                    <SharedVoiceNote\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        voiceNote={content.voice_note}\r\n                        openMedia={onOpen}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 6: {\r\n                const { id } = item;\r\n                return (\r\n                    <ListItem\r\n                        button\r\n                        key={`chat_id=${id}`}\r\n                        className='groups-in-common-item'>\r\n                        <Chat chatId={id} onSelect={onOpen} />\r\n                    </ListItem>\r\n                );\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    static isValidMessage(selectedIndex, message) {\r\n        if (!message) return false;\r\n\r\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\r\n    };\r\n\r\n    static isValidContent(selectedIndex, content) {\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return true;\r\n            }\r\n            case 1: {\r\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\r\n            }\r\n            case 2: {\r\n                return SharedMediaContent.isValidDocumentContent(content);\r\n            }\r\n            case 3: {\r\n                return SharedMediaContent.isValidAudioContent(content);\r\n            }\r\n            case 4: {\r\n                return SharedMediaContent.isValidUrlContent(content);\r\n            }\r\n            case 5: {\r\n                return SharedMediaContent.isValidVoiceNoteContent(content);\r\n            }\r\n            case 6: {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static isValidPhotoAndVideoContent(content) {\r\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\r\n    }\r\n\r\n    static isValidAudioContent(content) {\r\n        return content && content['@type'] === 'messageAudio';\r\n    }\r\n\r\n    static isValidDocumentContent(content) {\r\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\r\n    }\r\n\r\n    static isValidUrlContent(content) {\r\n        if (!content) return false;\r\n\r\n        const { web_page, text, caption } = content;\r\n        if (web_page) return true;\r\n        if (!text && !caption) return false;\r\n\r\n        const { entities } = text || caption;\r\n        if (!entities) return false;\r\n\r\n        return entities.find(\r\n            x =>\r\n                x.type['@type'] === 'textEntityTypeUrl' ||\r\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\r\n                x.type['@type'] === 'textEntityTypeEmailAddress'\r\n        );\r\n    }\r\n\r\n    static isValidVoiceNoteContent(content) {\r\n        return content && content['@type'] === 'messageVoiceNote';\r\n    }\r\n\r\n    static getFilter(selectedIndex) {\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return null;\r\n            }\r\n            case 1: {\r\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\r\n            }\r\n            case 2: {\r\n                return { '@type': 'searchMessagesFilterDocument' };\r\n            }\r\n            case 3: {\r\n                return { '@type': 'searchMessagesFilterAudio' };\r\n            }\r\n            case 4: {\r\n                return { '@type': 'searchMessagesFilterUrl' };\r\n            }\r\n            case 5: {\r\n                return { '@type': 'searchMessagesFilterVoiceNote' };\r\n            }\r\n            case 6: {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static getSource(selectedIndex, media) {\r\n        if (!media) {\r\n            return [];\r\n        }\r\n\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\r\n            }\r\n            case 1: {\r\n                return media.photoAndVideo || [];\r\n            }\r\n            case 2: {\r\n                return media.document || [];\r\n            }\r\n            case 3: {\r\n                return media.audio || [];\r\n            }\r\n            case 4: {\r\n                return media.url || [];\r\n            }\r\n            case 5: {\r\n                return media.voiceNote || [];\r\n            }\r\n            case 6: {\r\n                return media.groupsInCommon || [];\r\n            }\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n\r\n        if (chatId !== state.prevChatId) {\r\n            const media = MessageStore.getMedia(props.chatId);\r\n\r\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\r\n            const photoAndVideo = media ? media.photoAndVideo : [];\r\n            const document = media ? media.document : [];\r\n            const audio = media ? media.audio : [];\r\n            const url = media ? media.url : [];\r\n            const voiceNote = media ? media.voiceNote : [];\r\n            const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n            let selectedIndex = -1;\r\n            if (members.length > 0) {\r\n                selectedIndex = 0;\r\n            } else if (photoAndVideo.length > 0) {\r\n                selectedIndex = 1;\r\n            } else if (document.length > 0) {\r\n                selectedIndex = 2;\r\n            } else if (audio.length > 0) {\r\n                selectedIndex = 3;\r\n            } else if (url.length > 0) {\r\n                selectedIndex = 4;\r\n            } else if (voiceNote.length > 0) {\r\n                selectedIndex = 5;\r\n            } else if (groupsInCommon.length > 0) {\r\n                selectedIndex = 6;\r\n            }\r\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\r\n\r\n            return {\r\n                prevChatId: props.chatId,\r\n                selectedIndex,\r\n                renderIds: new Map(),\r\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\r\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\r\n                members,\r\n                photoAndVideo,\r\n                document,\r\n                audio,\r\n                url,\r\n                voiceNote,\r\n                groupsInCommon,\r\n                isSmallWidth: false,\r\n                params: {\r\n                    loading: false,\r\n                    completed: false,\r\n                    migrateCompleted: false,\r\n                    filter: SharedMediaContent.getFilter(selectedIndex)\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.onWindowResize);\r\n\r\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n\r\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        const { items, selectedIndex } = this.state;\r\n        if (!items.some(x => x.id === message_id)) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onWindowResize = event => {\r\n        const { items, scrollTop } = this.state;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const offsetTop = list.offsetTop;\r\n        const viewportHeight = list.offsetParent.offsetHeight;\r\n\r\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\r\n\r\n        this.setState({ ...renderIds });\r\n    };\r\n\r\n    onUpdateMessageSend = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    setMediaState = (media, selectedIndex) => {\r\n        const { scrollTop } = this.state;\r\n\r\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\r\n        const photoAndVideo = media ? media.photoAndVideo : [];\r\n        const document = media ? media.document : [];\r\n        const audio = media ? media.audio : [];\r\n        const url = media ? media.url : [];\r\n        const voiceNote = media ? media.voiceNote : [];\r\n        const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n        const hasMembers = members.length > 0;\r\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\r\n        const hasDocument = document.length > 0;\r\n        const hasAudio = audio.length > 0;\r\n        const hasUrl = url.length > 0;\r\n        const hasVoiceNote = voiceNote.length > 0;\r\n        const hasGroupsInCommon = groupsInCommon.length > 0;\r\n\r\n        const replaceSelectedIndex =\r\n            selectedIndex === -1\r\n            || selectedIndex === 0 && !hasMembers\r\n            || selectedIndex === 1 && !hasPhotoAndVideo\r\n            || selectedIndex === 2 && !hasDocument\r\n            || selectedIndex === 3 && !hasAudio\r\n            || selectedIndex === 4 && !hasUrl\r\n            || selectedIndex === 5 && !hasVoiceNote\r\n            || selectedIndex === 6 && !hasGroupsInCommon;\r\n        if (replaceSelectedIndex) {\r\n            if (hasMembers) {\r\n                selectedIndex = 0;\r\n            } else if (hasPhotoAndVideo) {\r\n                selectedIndex = 1;\r\n            } else if (hasDocument) {\r\n                selectedIndex = 2;\r\n            } else if (hasAudio) {\r\n                selectedIndex = 3;\r\n            } else if (hasUrl) {\r\n                selectedIndex = 4;\r\n            } else if (hasVoiceNote) {\r\n                selectedIndex = 5;\r\n            } else if (hasGroupsInCommon) {\r\n                selectedIndex = 6;\r\n            }\r\n        }\r\n\r\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\r\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const offsetTop = list.offsetTop;\r\n        const viewportHeight = list.offsetParent.offsetHeight;\r\n\r\n        this.setState({\r\n            selectedIndex,\r\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\r\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\r\n            items,\r\n            params: {\r\n                loading: false,\r\n                completed: false,\r\n                migrateCompleted: false,\r\n                filter: SharedMediaContent.getFilter(selectedIndex)\r\n            },\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\r\n            const { items } = this.state;\r\n\r\n            const store = FileStore.getStore();\r\n            switch (this.state.selectedIndex) {\r\n                case 0: {\r\n                    loadUsersContent(store, items.map(x => x.user_id));\r\n                    break;\r\n                }\r\n                case 1:\r\n                case 2:\r\n                case 3:\r\n                case 4:\r\n                case 5: {\r\n                    loadMessageContents(store, items);\r\n                    break;\r\n                }\r\n                case 6: {\r\n                    loadChatsContent(store, items);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // this.unobserveResize();\r\n        // this.observeResize();\r\n    }\r\n\r\n    onClientUpdateMediaTab = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { chatId, index: selectedIndex } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        const media = MessageStore.getMedia(currentChatId);\r\n\r\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\r\n        const photoAndVideo = media ? media.photoAndVideo : [];\r\n        const document = media ? media.document : [];\r\n        const audio = media ? media.audio : [];\r\n        const url = media ? media.url : [];\r\n        const voiceNote = media ? media.voiceNote : [];\r\n        const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n        let source = [];\r\n        if (selectedIndex === 0) {\r\n            source = members;\r\n        } else if (selectedIndex === 1) {\r\n            source = photoAndVideo;\r\n        } else if (selectedIndex === 2) {\r\n            source = document;\r\n        } else if (selectedIndex === 3) {\r\n            source = audio;\r\n        } else if (selectedIndex === 4) {\r\n            source = url;\r\n        } else if (selectedIndex === 5) {\r\n            source = voiceNote;\r\n        } else if (selectedIndex === 6) {\r\n            source = groupsInCommon;\r\n        }\r\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\r\n\r\n        this.setState({\r\n            selectedIndex,\r\n            renderIds: new Map(),\r\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\r\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon,\r\n            params: {\r\n                loading: false,\r\n                completed: false,\r\n                migrateCompleted: false,\r\n                filter: SharedMediaContent.getFilter(selectedIndex)\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatMedia = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n\r\n        const { chatId } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    handleScroll = (event, container) => {\r\n        const { params } = this.state;\r\n\r\n        if (params && !params.completed) {\r\n            this.onLoadNext(params);\r\n        } else {\r\n            // this.onLoadMigratedNext(params);\r\n        }\r\n    };\r\n\r\n    handleVirtScroll = (event, container) => {\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        this.setScrollPosition(container.scrollTop);\r\n    };\r\n\r\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\r\n        const { rowHeight } = this.state;\r\n\r\n        const itemTop = index * rowHeight;\r\n        const itemBottom = (index + 1) * rowHeight;\r\n\r\n        return (\r\n            itemTop > scrollTop - overScanCount * rowHeight &&\r\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\r\n        );\r\n    };\r\n\r\n    getRenderIds(source, viewportHeight, scrollTop) {\r\n        const renderIds = new Map();\r\n        const renderIdsList = [];\r\n        source.forEach((item, index) => {\r\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\r\n                renderIds.set(index, index);\r\n                renderIdsList.push(index);\r\n            }\r\n        });\r\n\r\n        return { renderIds, renderIdsList };\r\n    }\r\n\r\n    setScrollPosition = scrollTop => {\r\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const offsetTop = list.offsetTop;\r\n        const viewportHeight = list.offsetParent.offsetHeight;\r\n\r\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\r\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\r\n\r\n            this.setState({\r\n                scrollTop,\r\n                ...renderIds\r\n            });\r\n        }\r\n    };\r\n\r\n    onLoadNext = async (params, loadIncomplete = true) => {\r\n        const { chatId } = this.props;\r\n        const { items, selectedIndex } = this.state;\r\n        const { completed, filter, loading, messages: lastMessages } = params;\r\n\r\n        if (selectedIndex === 0) return;\r\n        if (selectedIndex === 6) return;\r\n        if (!filter) return;\r\n        if (loading) return;\r\n        if (completed) return;\r\n\r\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        if (lastMessages) {\r\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\r\n        }\r\n        params.loading = true;\r\n        params.requestId = new Date();\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\r\n            filter\r\n        });\r\n\r\n        const { params: currentParams } = this.state;\r\n        if (!currentParams || currentParams.requestId !== params.requestId) {\r\n            return;\r\n        }\r\n\r\n        const { messages } = result;\r\n        params.messages = messages;\r\n        params.completed = messages.length === 0 || messages.total_count === 0;\r\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        MessageStore.setItems(result.messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n\r\n        this.setState({ items: params.items });\r\n\r\n        if (params.completed) {\r\n            this.onLoadMigratedNext(params, true);\r\n        } else if (incompleteResults) {\r\n            this.onLoadNext(params, false);\r\n        }\r\n    };\r\n\r\n    onLoadMigratedNext(params, loadIncomplete) {\r\n\r\n    }\r\n\r\n    handleOpen = item => {\r\n        const { popup } = this.props;\r\n\r\n        switch (item['@type']) {\r\n            case 'message': {\r\n                const { chat_id, id } = item;\r\n\r\n                openMedia(chat_id, id, false);\r\n                break;\r\n            }\r\n            case 'chat': {\r\n                const { id } = item;\r\n                openChat(id);\r\n\r\n                if (popup) {\r\n                    TdLibController.clientUpdate({\r\n                        '@type': 'clientUpdateDialogChatId',\r\n                        chatId: 0\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            case 'chatMember': {\r\n                const { user_id } = item;\r\n                openUser(user_id, true);\r\n\r\n                if (popup) {\r\n                    TdLibController.clientUpdate({\r\n                        '@type': 'clientUpdateDialogChatId',\r\n                        chatId: 0\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            selectedIndex,\r\n            items = [],\r\n            renderIds,\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon\r\n        } = this.state;\r\n\r\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\r\n\r\n        const hasItems = members && members.length > 0\r\n            || photoAndVideo && photoAndVideo.length > 0\r\n            || document && document.length > 0\r\n            || audio && audio.length > 0\r\n            || url && url.length > 0\r\n            || voiceNote && voiceNote.length > 0\r\n            || groupsInCommon && groupsInCommon.length > 0;\r\n        if (!hasItems) {\r\n            return (<div ref={this.listRef}/>);\r\n        }\r\n\r\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\r\n            let contentHeight = 0;\r\n            const controls = items.map((x, index) => {\r\n                const { chat_id, id } = x;\r\n                const itemHeight = SharedMediaContent.getItemHeight(x);\r\n                if (!itemHeight) {\r\n                    return null;\r\n                }\r\n                contentHeight += itemHeight;\r\n\r\n                return ((!renderIds.size || renderIds.has(index)) && (\r\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\r\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\r\n                    </div>\r\n                ));\r\n            });\r\n\r\n            return (\r\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\r\n                    {controls}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\r\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSharedMediaContent.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default SharedMediaContent;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport HeadsetIcon from '@material-ui/icons/Headset';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\r\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport User from '../Tile/User';\r\nimport Chat from '../Tile/Chat';\r\nimport ChatDetailsHeader from './ChatDetailsHeader';\r\nimport NotificationsListItem from './NotificationsListItem';\r\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\r\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\r\nimport { copy } from '../../Utils/Text';\r\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\r\nimport {\r\n    getChatUsername,\r\n    getChatPhoneNumber,\r\n    getChatBio,\r\n    isGroupChat,\r\n    getGroupChatMembers,\r\n    getChatFullInfo,\r\n    isPrivateChat,\r\n    isMeChat, isChannelChat\r\n} from '../../Utils/Chat';\r\nimport { getUserStatusOrder } from '../../Utils/User';\r\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\r\nimport { formatPhoneNumber } from '../../Utils/Phone';\r\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MoreListItem.css';\r\nimport './ChatDetails.css';\r\n\r\nclass ChatDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n        this.dividerRef = React.createRef();\r\n        this.mediaRef = React.createRef();\r\n\r\n        const { chatId } = this.props;\r\n\r\n        this.members = new Map();\r\n        this.state = {\r\n            prevChatId: chatId\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            return {\r\n                prevChatId: props.chatId\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { chatId } = this.props;\r\n\r\n        const { current: list } = this.listRef;\r\n        const { scrollTop, scrollHeight, offsetHeight } = list;\r\n        const snapshot = {\r\n            scrollTop,\r\n            scrollHeight,\r\n            offsetHeight\r\n        };\r\n\r\n        // console.log(\r\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\r\n        // );\r\n\r\n        return snapshot;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, theme, counters, migratedCounters } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.counters !== counters) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.migratedCounters !== migratedCounters) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId } = this.props;\r\n        if (prevProps.chatId !== chatId) {\r\n            this.loadContent();\r\n        }\r\n\r\n        const { current: list } = this.listRef;\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\r\n        if (prevProps.chatId === chatId) {\r\n            list.scrollTop = scrollTop;\r\n        } else {\r\n            list.scrollTop = 0;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\r\n            chat.type.basic_group_id === update.basic_group_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeSupergroup' &&\r\n            chat.type.supergroup_id === update.supergroup_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\r\n            chat.type.user_id === update.user_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateUserStatus = update => {\r\n        if (this.members.has(update.user_id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    loadContent = () => {\r\n        this.loadChatContents();\r\n    };\r\n\r\n    loadChatContents = () => {\r\n        const { chatId, popup } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadChatsContent(store, [chatId]);\r\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\r\n        loadUsersContent(store, members);\r\n\r\n        if (popup) {\r\n            getChatFullInfo(chatId);\r\n        }\r\n    };\r\n\r\n    handleUsernameHint = () => {\r\n        const { t, chatId } = this.props;\r\n        const username = getChatUsername(chatId);\r\n        if (!username) return;\r\n\r\n        const telegramUrlOption = OptionStore.get('t_me_url');\r\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\r\n\r\n        copy(usernameLink + username);\r\n\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => {\r\n                        closeSnackbar(snackKey);\r\n                    }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handlePhoneHint = () => {\r\n        const { t, chatId } = this.props;\r\n        const phoneNumber = getChatPhoneNumber(chatId);\r\n        if (!phoneNumber) return;\r\n\r\n        copy(formatPhoneNumber(phoneNumber));\r\n\r\n        this.handleScheduledAction(t('PhoneCopied'));\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        this.listRef.current.scrollTop = 0;\r\n    };\r\n\r\n    handleOpenViewer = () => {\r\n        const { chatId, popup } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.photo) return;\r\n\r\n        setProfileMediaViewerContent({ chatId });\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    handleOpenChat = () => {\r\n        const { chatId, popup } = this.props;\r\n\r\n        openChat(chatId, null, false);\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    handleOpenUser = userId => {\r\n        openUser(userId, true);\r\n    };\r\n\r\n    getContentHeight = () => {\r\n        if (!this.listRef) return 0;\r\n\r\n        return this.listRef.current.clientHeight;\r\n    };\r\n\r\n    handleTabClick = event => {\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const { current: divider } = this.dividerRef;\r\n        if (!divider) return;\r\n        if (divider.offsetTop === list.scrollTop) return;\r\n\r\n        if (list.scrollTop < divider.offsetTop) {\r\n            list.scrollTo({\r\n                top: divider.offsetTop,\r\n                behavior: 'smooth'\r\n            });\r\n        } else {\r\n            list.scrollTop = divider.offsetTop + 70;\r\n            setTimeout(() => {\r\n                list.scrollTo({\r\n                    top: divider.offsetTop,\r\n                    behavior: 'smooth'\r\n                });\r\n            }, 0);\r\n        }\r\n        // requestAnimationFrame(() => {\r\n        //     list.scrollTo({\r\n        //         top: divider.offsetTop,\r\n        //         behavior: 'smooth'\r\n        //     });\r\n        // });\r\n    };\r\n\r\n    handleScroll = event => {\r\n        if (!this.listRef) return;\r\n        if (!this.mediaRef) return;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const { current: media } = this.mediaRef;\r\n        if (!media) return;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            media.handleScroll(event);\r\n        }\r\n\r\n        media.handleVirtScroll(event, list);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            backButton,\r\n            className,\r\n            chatId,\r\n            onClose,\r\n            popup,\r\n            t\r\n        } = this.props;\r\n\r\n        let { counters, migratedCounters } = this.props;\r\n        counters = counters || [0, 0, 0, 0, 0, 0];\r\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\r\n\r\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\r\n            (el, i) => el + migratedCounters[i]\r\n        );\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) {\r\n            return (\r\n                <div className='chat-details'>\r\n                    <ChatDetailsHeader onClose={onClose} />\r\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let groupInCommonCount = 0;\r\n        if (isPrivateChat(chatId)) {\r\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\r\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\r\n        }\r\n\r\n        const username = getChatUsername(chatId);\r\n        const phoneNumber = getChatPhoneNumber(chatId);\r\n        let bio = getChatBio(chatId);\r\n        const isGroup = isGroupChat(chatId);\r\n        const isMe = isMeChat(chatId);\r\n\r\n        const members = getGroupChatMembers(chatId);\r\n        const users = [];\r\n        this.members = new Map();\r\n        members.forEach(member => {\r\n            const user = UserStore.get(member.user_id);\r\n            if (user) {\r\n                this.members.set(user.id, user.id);\r\n                users.push(user);\r\n            }\r\n        });\r\n\r\n        const sortedUsers = users.sort((x, y) => {\r\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\r\n        });\r\n        const items = sortedUsers.map(user => (\r\n            <ListItem button className='list-item' key={user.id}>\r\n                <User userId={user.id} onSelect={this.handleOpenUser} />\r\n            </ListItem>\r\n        ));\r\n\r\n        const { photo } = chat;\r\n\r\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\r\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\r\n            if (bioEntities.length > 0) {\r\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\r\n            }\r\n        }\r\n\r\n        let openChatTitle = t('SendMessage');\r\n        if (isChannelChat(chatId)) {\r\n            openChatTitle = t('OpenChannel');\r\n        } else if (isGroupChat(chatId)) {\r\n            openChatTitle = t('OpenGroup');\r\n        }\r\n\r\n        let chatUrl = ''\r\n        if (username) {\r\n            if (isPrivateChat(chatId)) {\r\n                chatUrl = username;\r\n            } else {\r\n                const tMeUrl = OptionStore.get('t_me_url')\r\n                    .value\r\n                    .toLowerCase()\r\n                    .replace('https://', '')\r\n                    .replace('http://', '');\r\n\r\n                chatUrl = tMeUrl + username;\r\n            }\r\n        }\r\n\r\n        const content = (\r\n            <>\r\n                <ChatDetailsHeader\r\n                    chatId={chatId}\r\n                    backButton={backButton}\r\n                    onClose={onClose}\r\n                    onClick={this.handleHeaderClick}\r\n                />\r\n                <div\r\n                    ref={this.listRef}\r\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\r\n                    onScroll={this.handleScroll}>\r\n                    <div className='chat-details-info'>\r\n                        <Chat\r\n                            chatId={chatId}\r\n                            big={true}\r\n                            showStatus={true}\r\n                            showSavedMessages={!popup}\r\n                            onTileSelect={photo ? this.handleOpenViewer : null}\r\n                        />\r\n                        {!isMe && (\r\n                            <List className='chat-details-items'>\r\n                                {bio && (\r\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\r\n                                        <ListItemIcon>\r\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={bio}\r\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\r\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {username && (\r\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\r\n                                        <ListItemIcon>\r\n                                            <AlternateEmailIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {chatUrl}\r\n                                                </Typography>\r\n                                            }\r\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {isPrivateChat(chatId) && (\r\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\r\n                                        <ListItemIcon>\r\n                                            <CallIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {phoneNumber ? formatPhoneNumber(phoneNumber) : t('PhoneHidden')}\r\n                                                </Typography>\r\n                                            }\r\n                                            secondary={t('Phone')}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                <NotificationsListItem chatId={chatId} />\r\n                                {popup && (\r\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography color='primary' variant='inherit' noWrap>\r\n                                                    {openChatTitle.toUpperCase()}\r\n                                                </Typography>\r\n                                            }\r\n                                            style={{ paddingLeft: 40 }}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                            </List>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div ref={this.dividerRef}/>\r\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\r\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\r\n    }\r\n}\r\n\r\nChatDetails.propTypes = {\r\n    chatId: PropTypes.number,\r\n    popup: PropTypes.bool,\r\n    onClose: PropTypes.func,\r\n    onOpenGroupInCommon: PropTypes.func,\r\n    onOpenSharedDocuments: PropTypes.func,\r\n    onOpenSharedMedia: PropTypes.func,\r\n    onOpenSharedLinks: PropTypes.func,\r\n    onOpenSharedPhotos: PropTypes.func,\r\n    onOpenSharedVideos: PropTypes.func,\r\n    onOpenSharedVoiceNotes: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withSnackbar,\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ChatDetails);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport './GroupsInCommonHeader.css';\r\n\r\nclass GroupsInCommonHeader extends React.Component {\r\n    render() {\r\n        const { onClose } = this.props;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <IconButton className='header-left-button' onClick={onClose}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-status grow cursor-pointer'>\r\n                    <span className='header-status-content'>Groups in common</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupsInCommonHeader.propTypes = {\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default GroupsInCommonHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Chat from '../Tile/Chat';\r\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { openChat } from '../../Actions/Client';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './GroupsInCommon.css';\r\n\r\nclass GroupsInCommon extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatIds: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId } = this.props;\r\n\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'getGroupsInCommon',\r\n            user_id: userId,\r\n            offset_chat_id: 0,\r\n            limit: 100\r\n        }).then(result => {\r\n            const store = FileStore.getStore();\r\n            loadChatsContent(store, result.chat_ids);\r\n\r\n            this.setState({ chatIds: result.chat_ids });\r\n        });\r\n    }\r\n\r\n    handleSelect = chatId => {\r\n        const { popup } = this.props;\r\n\r\n        openChat(chatId);\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { minHeight, onClose, popup } = this.props;\r\n        const { chatIds } = this.state;\r\n\r\n        const chats = chatIds.map(x => (\r\n            <ListItem button key={x}>\r\n                <Chat chatId={x} onSelect={this.handleSelect} />\r\n            </ListItem>\r\n        ));\r\n\r\n        const content = (\r\n            <>\r\n                <GroupsInCommonHeader onClose={onClose} />\r\n                <div className='groups-in-common-list' style={{ minHeight }}>\r\n                    {chats}\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\r\n    }\r\n}\r\n\r\nGroupsInCommon.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nGroupsInCommon.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default GroupsInCommon;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\r\n    'Search'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport SearchIcon from '../../../Assets/Icons/Search';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\r\nimport './SharedMediaHeader.css';\r\n\r\nclass SharedMediaHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n\r\n        this.state = {\r\n            openSearch: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { openSearch } = this.state;\r\n\r\n        if (openSearch && openSearch !== prevProps.openSearch) {\r\n            setTimeout(() => {\r\n                if (this.searchInputRef.current) {\r\n                    this.searchInputRef.current.focus();\r\n                }\r\n            }, ANIMATION_DURATION_200MS);\r\n        }\r\n    }\r\n\r\n    handleSearch = () => {\r\n        if (this.searchInputRef.current) {\r\n            const innerText = this.searchInputRef.current.innerText;\r\n            if (innerText) {\r\n                this.searchInputRef.current.innerText = '';\r\n\r\n                const { onSearch } = this.props;\r\n                if (!onSearch) return;\r\n\r\n                onSearch('');\r\n                return;\r\n            }\r\n        }\r\n\r\n        const { onCloseSearch } = this.props;\r\n        const { openSearch } = this.state;\r\n\r\n        this.setState({ openSearch: !openSearch });\r\n\r\n        if (onCloseSearch) {\r\n            onCloseSearch();\r\n        }\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    handleKeyUp = () => {\r\n        const element = this.searchInputRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        const { onSearch } = this.props;\r\n        if (!onSearch) return;\r\n\r\n        onSearch(innerText);\r\n    };\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t, title, onClick, onClose, onSearch } = this.props;\r\n        const { openSearch } = this.state;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                {!openSearch ? (\r\n                    <>\r\n                        <IconButton className='header-left-button' onClick={onClose}>\r\n                            <ArrowBackIcon />\r\n                        </IconButton>\r\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\r\n                            <span className='header-status-content'>{title}</span>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <div className='header-search-input grow'>\r\n                            <div\r\n                                id='header-search-inputbox'\r\n                                ref={this.searchInputRef}\r\n                                placeholder={t('Search')}\r\n                                contentEditable\r\n                                suppressContentEditableWarning\r\n                                onKeyDown={this.handleKeyDown}\r\n                                onKeyUp={this.handleKeyUp}\r\n                                onPaste={this.handlePaste}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n                {Boolean(onSearch) && (\r\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\r\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\r\n                    </IconButton>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSharedMediaHeader.propTypes = {\r\n    title: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n    onClose: PropTypes.func,\r\n    onCloseSearch: PropTypes.func,\r\n    onSearch: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SharedMediaHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\r\nimport SharedMediaHeader from './SharedMediaHeader';\r\nimport { between, insertByOrder } from '../../../Utils/Common';\r\nimport { loadMessageContents } from '../../../Utils/File';\r\nimport { messageComparatorDesc } from '../../../Utils/Message';\r\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './SharedMediaBase.css';\r\n\r\nclass SharedMediaBase extends React.Component {\r\n    getListClassName() {\r\n        return null;\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return null;\r\n    }\r\n\r\n    constructor(props) {\r\n        if (new.target === SharedMediaBase) {\r\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\r\n        }\r\n\r\n        // console.log('SharedMediaBase.ctor');\r\n\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n\r\n        this.state = {\r\n            items: [],\r\n            migratedItems: [],\r\n            searchItems: [],\r\n            searchMigratedItems: []\r\n        };\r\n    }\r\n\r\n    hasSearch() {\r\n        return true;\r\n    }\r\n\r\n    isValidContent(content) {\r\n        throw new Error('Virtual method isValidContent is not implemented');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, id } = message;\r\n\r\n        return (\r\n            <SharedDocument\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n\r\n    getSearchFilter() {\r\n        throw new Error('Virtual method getSearchFilter is not implemented');\r\n    }\r\n\r\n    getHeader() {\r\n        throw new Error('Virtual method getHeader is not implemented');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { chat_id, message_id, old_content, new_content } = update;\r\n\r\n        const message = MessageStore.get(chat_id, message_id);\r\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\r\n\r\n        if (chat_id === chatId) {\r\n            if (!items.length) return;\r\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\r\n\r\n            const index = items.findIndex(x => x.id === message_id);\r\n            if (this.isValidContent(new_content)) {\r\n                if (index === -1) {\r\n                    // add new document\r\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\r\n                } else {\r\n                    // replace document\r\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\r\n                }\r\n            } else {\r\n                if (index === -1) {\r\n                } else {\r\n                    // remove none document\r\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\r\n                }\r\n            }\r\n        } else if (chat_id === migratedChatId) {\r\n            if (!migratedItems.length) return;\r\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\r\n\r\n            const index = migratedItems.findIndex(x => x.id === message_id);\r\n            if (this.isValidContent(new_content)) {\r\n                if (index === -1) {\r\n                    // add new document\r\n                    this.setState({\r\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\r\n                    });\r\n                } else {\r\n                    // replace document\r\n                    this.setState({\r\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\r\n                    });\r\n                }\r\n            } else {\r\n                if (index === -1) {\r\n                } else {\r\n                    // remove none document\r\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { message } = update;\r\n        const { chat_id } = message;\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (!this.isValidMessage(message)) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, [message]);\r\n\r\n        if (chat_id === chatId) {\r\n            this.setState({ items: [message].concat(items) });\r\n        } else if (chat_id === migratedChatId) {\r\n            this.setState({ migratedItems: [message].concat(migratedItems) });\r\n        }\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { chat_id, message_ids } = update;\r\n\r\n        const map = new Map(message_ids.map(x => [x, x]));\r\n        const callback = () => {\r\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\r\n                this.onLoadNext(this.params);\r\n            }\r\n        };\r\n\r\n        if (chat_id === chatId) {\r\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\r\n        } else if (chat_id === migratedChatId) {\r\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\r\n        }\r\n    };\r\n\r\n    loadContent = () => {\r\n        this.params = {\r\n            loading: false,\r\n            completed: false,\r\n            migrateCompleted: false,\r\n            items: [],\r\n            migratedItems: [],\r\n            filter: this.getSearchFilter()\r\n        };\r\n        this.onLoadNext(this.params);\r\n    };\r\n\r\n    onLoadNext = async (params, loadIncomplete = true) => {\r\n        const { chatId } = this.props;\r\n        const { completed, filter, items, loading } = params;\r\n\r\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\r\n\r\n        if (loading) return;\r\n        if (completed) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\r\n            filter\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.completed = messages.length === 0 || messages.total_count === 0;\r\n        params.items = items.concat(messages.filter(this.isValidMessage));\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        MessageStore.setItems(result.messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n\r\n        this.setState({ items: params.items });\r\n\r\n        if (params.completed) {\r\n            this.onLoadMigratedNext(params, true);\r\n        } else if (incompleteResults) {\r\n            this.onLoadNext(params, false);\r\n        }\r\n    };\r\n\r\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\r\n        const { migratedChatId } = this.props;\r\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\r\n\r\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\r\n\r\n        if (!migratedChatId) return;\r\n        if (loading) return;\r\n        if (migrateCompleted) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: migratedChatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\r\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (params.migrateCompleted) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ migratedItems: params.migratedItems });\r\n\r\n        if (incompleteResults) {\r\n            this.onLoadMigratedNext(params, false);\r\n        }\r\n    };\r\n\r\n    handleScroll = () => {\r\n        if (!this.listRef) return;\r\n\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        const { params } = this;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (params && !params.completed) {\r\n                this.onLoadNext(params);\r\n            } else {\r\n                this.onLoadMigratedNext(params);\r\n            }\r\n        }\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        list.scrollTop = 0;\r\n    };\r\n\r\n    handleSearchScroll = () => {\r\n        if (!this.searchListRef) return;\r\n\r\n        const list = this.searchListRef.current;\r\n        if (!list) return;\r\n\r\n        const { searchParams } = this;\r\n        if (!searchParams) return;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (!searchParams.completed) {\r\n                this.onSearchNext(searchParams);\r\n            } else {\r\n                this.onSearchMigratedNext(searchParams);\r\n            }\r\n        }\r\n    };\r\n\r\n    onSearchNext = async (params, loadIncomplete = true) => {\r\n        const { chatId } = this.props;\r\n        const { completed, filter, items, loading, query } = params;\r\n\r\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\r\n\r\n        if (completed) return;\r\n        if (loading) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query,\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.items = items.concat(messages.filter(this.isValidMessage));\r\n        params.completed = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (this.searchParams !== params) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\r\n\r\n        if (params.completed) {\r\n            this.onSearchMigratedNext(params, true);\r\n        } else if (incompleteResults) {\r\n            this.onSearchNext(params, false);\r\n        }\r\n    };\r\n\r\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\r\n        const { migratedChatId } = this.props;\r\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\r\n\r\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\r\n\r\n        if (!migratedChatId) return;\r\n        if (loading) return;\r\n        if (migrateCompleted) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: migratedChatId,\r\n            query,\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\r\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (this.searchParams !== params) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\r\n\r\n        if (incompleteResults) {\r\n            this.onSearchMigratedNext(params, false);\r\n        }\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text ? text.trim() : '';\r\n        if (!query) {\r\n            this.handleCloseSearch();\r\n            return;\r\n        }\r\n\r\n        this.searchParams = {\r\n            query,\r\n            completed: false,\r\n            migrateCompleted: false,\r\n            items: [],\r\n            migratedItems: [],\r\n            filter: this.getSearchFilter()\r\n        };\r\n        this.onSearchNext(this.searchParams, true);\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.searchParams = null;\r\n        this.setState({ searchItems: [], searchMigratedItems: [] });\r\n    };\r\n\r\n    isValidMessage = message => {\r\n        if (!message) return false;\r\n\r\n        return this.isValidContent(message.content);\r\n    };\r\n\r\n    render() {\r\n        const { minHeight, onClose, popup } = this.props;\r\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\r\n        const { searchParams } = this;\r\n\r\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\r\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\r\n\r\n        return (\r\n            <>\r\n                <SharedMediaHeader\r\n                    title={this.getHeader()}\r\n                    onClick={this.handleHeaderClick}\r\n                    onClose={onClose}\r\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\r\n                    onCloseSearch={this.handleCloseSearch}\r\n                />\r\n                <div\r\n                    ref={this.listRef}\r\n                    className={classNames('shared-media-list', this.getListClassName())}\r\n                    onScroll={this.handleScroll}\r\n                    style={{ minHeight: popup ? minHeight : null }}>\r\n                    {messages}\r\n                </div>\r\n                {Boolean(searchParams) && (\r\n                    <div\r\n                        ref={this.searchListRef}\r\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\r\n                        onScroll={this.handleSearchScroll}>\r\n                        {searchMessages}\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedMediaBase.propTypes = {};\r\n\r\nexport default SharedMediaBase;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport './SharedAudios.css';\r\n\r\nclass SharedAudios extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageAudio';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterAudio' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('AudioTitle');\r\n    }\r\n}\r\n\r\nSharedAudios.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedAudios.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedAudios);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport './SharedDocuments.css';\r\n\r\nclass SharedDocuments extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageDocument';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterDocument' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('DocumentsTitle');\r\n    }\r\n}\r\n\r\nSharedDocuments.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedDocuments.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedDocuments);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedLinks.css';\r\n\r\nclass SharedLinks extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        if (!content) return false;\r\n\r\n        const { web_page, text } = content;\r\n        if (web_page) return true;\r\n        if (!text) return false;\r\n\r\n        const { entities } = text;\r\n        if (!entities) return false;\r\n\r\n        return entities.find(\r\n            x =>\r\n                x.type['@type'] === 'textEntityTypeUrl' ||\r\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\r\n                x.type['@type'] === 'textEntityTypeEmailAddress'\r\n        );\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterUrl' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('LinksTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedLink\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                webPage={content.web_page}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedLinks.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedLinks.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedLinks);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport './SharedMediaHeader.css';\r\n\r\nclass SharedMediaHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { close } = this.props;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <IconButton className='header-left-button' onClick={close}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-status grow cursor-pointer'>\r\n                    <span className='header-status-content'>Shared Media</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SharedMediaHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport SharedMediaHeader from './SharedMediaHeader';\r\nimport './SharedMedia.css';\r\n\r\nclass SharedMedia extends React.Component {\r\n    state = {\r\n        value: 0\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, popup } = this.props;\r\n        const { value } = this.state;\r\n\r\n        const content = (\r\n            <>\r\n                <SharedMediaHeader close={onClose} />\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={this.handleChange}\r\n                    indicatorColor='primary'\r\n                    textColor='primary'\r\n                    scrollable\r\n                    scrollButtons='off'\r\n                    fullWidth>\r\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\r\n                </Tabs>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\r\n    }\r\n}\r\n\r\nSharedMedia.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedMedia.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default SharedMedia;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedPhotos.css';\r\n\r\nclass SharedPhotos extends SharedMediaBase {\r\n    getListClassName() {\r\n        return 'shared-photos-list';\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return 'shared-photos-search-list';\r\n    }\r\n\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messagePhoto';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterPhoto' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('PhotosTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedPhoto\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                photo={content.photo}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedPhotos.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedPhotos.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedPhotos);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedVideos.css';\r\n\r\nclass SharedVideos extends SharedMediaBase {\r\n    getListClassName() {\r\n        return 'shared-photos-list';\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return 'shared-photos-search-list';\r\n    }\r\n\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageVideo';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterVideo' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('VideosTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedVideo\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                video={content.video}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedVideos.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedVideos.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedVideos);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedVoiceNotes.css';\r\n\r\nclass SharedVoiceNotes extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageVoiceNote';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterVoiceNote' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('VoiceTitle');\r\n    }\r\n\r\n    hasSearch() {\r\n        return false;\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedVoiceNote\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                voiceNote={content.voice_note}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedVoiceNotes.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedVoiceNotes.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedVoiceNotes);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatDetails from './ChatDetails';\r\nimport GroupsInCommon from './GroupsInCommon';\r\nimport SharedAudios from './SharedMedia/SharedAudios';\r\nimport SharedDocuments from './SharedMedia/SharedDocuments';\r\nimport SharedLinks from './SharedMedia/SharedLinks';\r\nimport SharedMedia from './SharedMedia';\r\nimport SharedPhotos from './SharedMedia/SharedPhotos';\r\nimport SharedVideos from './SharedMedia/SharedVideos';\r\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\r\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\r\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\r\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ChatInfo.css';\r\n\r\nclass ChatInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.detailsRef = React.createRef();\r\n\r\n        const { popup } = props;\r\n        const { chatId, dialogChatId } = AppStore;\r\n\r\n        this.state = {\r\n            chatId: popup ? dialogChatId : chatId,\r\n            migratedChatId: 0,\r\n            userChatId: null,\r\n            openGroupInCommon: false,\r\n            openSharedAudios: false,\r\n            openSharedDocuments: false,\r\n            openSharedLinks: false,\r\n            openSharedMedia: false,\r\n            openSharedPhotos: false,\r\n            openSharedVideos: false,\r\n            openSharedVoiceNotes: false,\r\n            counters: null,\r\n            migratedCounters: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent(this.state.chatId);\r\n\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId } = this.state;\r\n        if (chatId !== prevState.chatId) {\r\n            this.loadContent(chatId);\r\n        }\r\n    }\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { popup } = this.props;\r\n        if (popup) return;\r\n\r\n        this.handleCloseChatDetails();\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { popup } = this.props;\r\n        const { chatId } = this.state;\r\n\r\n        if (popup) return;\r\n        if (chatId === update.nextChatId) return;\r\n\r\n        this.sharedAudios = null;\r\n        this.sharedDocuments = null;\r\n        this.sharedLinks = null;\r\n        this.sharedPhotos = null;\r\n        this.sharedVideos = null;\r\n        this.sharedVoiceNotes = null;\r\n\r\n        this.setState({\r\n            chatId: update.nextChatId,\r\n            migratedChatId: 0,\r\n            userChatId: null,\r\n            openGroupInCommon: false,\r\n            openSharedAudios: false,\r\n            openSharedDocuments: false,\r\n            openSharedLinks: false,\r\n            openSharedMedia: false,\r\n            openSharedPhotos: false,\r\n            openSharedVideos: false,\r\n            openSharedVoiceNotes: false,\r\n            counters: ChatStore.getCounters(update.nextChatId),\r\n            migratedCounters: null\r\n        });\r\n\r\n        if (!update.nextChatId) {\r\n            this.handleCloseChatDetails();\r\n        }\r\n    };\r\n\r\n    loadContent = chatId => {\r\n        this.loadChatCounters(chatId);\r\n        this.loadMigratedCounters(chatId);\r\n\r\n        const photo = getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n        loadProfileMediaViewerContent(chatId, [photo]);\r\n    };\r\n\r\n    loadChatCounters = async chatId => {\r\n        const counters = await getChatCounters(chatId);\r\n        ChatStore.setCounters(chatId, counters);\r\n\r\n        if (chatId !== this.state.chatId) return;\r\n\r\n        this.setState({ counters });\r\n    };\r\n\r\n    loadMigratedCounters = async chatId => {\r\n        if (!isSupergroup(chatId)) return;\r\n\r\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\r\n        if (!fullInfo) return;\r\n\r\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\r\n        if (!basic_group_id) return;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createBasicGroupChat',\r\n            basic_group_id,\r\n            force: true\r\n        });\r\n\r\n        if (!chat) return;\r\n\r\n        const counters = await getChatCounters(chat.id);\r\n        ChatStore.setCounters(chat.id, counters);\r\n\r\n        if (this.state.chatId !== chatId) return;\r\n\r\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\r\n    };\r\n\r\n    handleOpenSharedMedia = () => {\r\n        this.setState({ openSharedMedia: true });\r\n    };\r\n\r\n    handleCloseSharedMedia = () => {\r\n        this.setState({ openSharedMedia: false });\r\n    };\r\n\r\n    handleOpenGroupInCommon = () => {\r\n        this.setState({ openGroupInCommon: true });\r\n    };\r\n\r\n    handleCloseGroupsInCommon = () => {\r\n        this.setState({ openGroupInCommon: false });\r\n    };\r\n\r\n    handleCloseChatDetails = () => {\r\n        const { popup } = this.props;\r\n        const { userChatId } = this.state;\r\n\r\n        if (userChatId) {\r\n            this.setState({ userChatId: null });\r\n        } else if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        } else {\r\n            changeChatDetailsVisibility(false);\r\n        }\r\n    };\r\n\r\n    handleOpenSharedDocuments = () => {\r\n        this.setState({ openSharedDocuments: true });\r\n    };\r\n\r\n    handleCloseSharedDocuments = () => {\r\n        this.setState({ openSharedDocuments: false });\r\n    };\r\n\r\n    handleOpenSharedAudios = () => {\r\n        this.setState({ openSharedAudios: true });\r\n    };\r\n\r\n    handleCloseSharedAudios = () => {\r\n        this.setState({ openSharedAudios: false });\r\n    };\r\n\r\n    handleOpenSharedVoiceNotes = () => {\r\n        this.setState({ openSharedVoiceNotes: true });\r\n    };\r\n\r\n    handleCloseSharedVoiceNotes = () => {\r\n        this.setState({ openSharedVoiceNotes: false });\r\n    };\r\n\r\n    handleOpenSharedLinks = () => {\r\n        this.setState({ openSharedLinks: true });\r\n    };\r\n\r\n    handleCloseSharedLinks = () => {\r\n        this.setState({ openSharedLinks: false });\r\n    };\r\n\r\n    handleOpenSharedPhotos = () => {\r\n        this.setState({ openSharedPhotos: true });\r\n    };\r\n\r\n    handleCloseSharedPhotos = () => {\r\n        this.setState({ openSharedPhotos: false });\r\n    };\r\n\r\n    handleOpenSharedVideos = () => {\r\n        this.setState({ openSharedVideos: true });\r\n    };\r\n\r\n    handleCloseSharedVideos = () => {\r\n        this.setState({ openSharedVideos: false });\r\n    };\r\n\r\n    render() {\r\n        const { className, popup } = this.props;\r\n        const {\r\n            chatId,\r\n            counters,\r\n            migratedChatId,\r\n            migratedCounters,\r\n            userChatId,\r\n            openSharedAudios,\r\n            openSharedDocuments,\r\n            openSharedLinks,\r\n            openSharedMedia,\r\n            openSharedPhotos,\r\n            openSharedVideos,\r\n            openSharedVoiceNotes,\r\n            openGroupInCommon\r\n        } = this.state;\r\n\r\n        const currentChatId = chatId || userChatId;\r\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\r\n\r\n        let content = null;\r\n        if (openSharedMedia) {\r\n            content = (\r\n                <SharedMedia\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedMedia}\r\n                />\r\n            );\r\n        } else if (openSharedAudios) {\r\n            this.sharedAudios = this.sharedAudios || (\r\n                <SharedAudios\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedAudios}\r\n                />\r\n            );\r\n\r\n            content = this.sharedAudios;\r\n        } else if (openSharedDocuments) {\r\n            this.sharedDocuments = this.sharedDocuments || (\r\n                <SharedDocuments\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedDocuments}\r\n                />\r\n            );\r\n\r\n            content = this.sharedDocuments;\r\n        } else if (openSharedLinks) {\r\n            this.sharedLinks = this.sharedLinks || (\r\n                <SharedLinks\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedLinks}\r\n                />\r\n            );\r\n\r\n            content = this.sharedLinks;\r\n        } else if (openSharedPhotos) {\r\n            this.sharedPhotos = this.sharedPhotos || (\r\n                <SharedPhotos\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedPhotos}\r\n                />\r\n            );\r\n\r\n            content = this.sharedPhotos;\r\n        } else if (openSharedVideos) {\r\n            this.sharedVideos = this.sharedVideos || (\r\n                <SharedVideos\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedVideos}\r\n                />\r\n            );\r\n\r\n            content = this.sharedVideos;\r\n        } else if (openSharedVoiceNotes) {\r\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\r\n                <SharedVoiceNotes\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedVoiceNotes}\r\n                />\r\n            );\r\n\r\n            content = this.sharedVoiceNotes;\r\n        } else if (openGroupInCommon) {\r\n            content = (\r\n                <GroupsInCommon\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseGroupsInCommon}\r\n                />\r\n            );\r\n        } else {\r\n            content = (\r\n                <ChatDetails\r\n                    ref={this.detailsRef}\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    backButton={userChatId === chatId}\r\n                    counters={counters}\r\n                    migratedCounters={migratedCounters}\r\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\r\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\r\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\r\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\r\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\r\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\r\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\r\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\r\n                    onClose={this.handleCloseChatDetails}\r\n                />\r\n            );\r\n        }\r\n\r\n        return popup ? (\r\n            <>{content}</>\r\n        ) : (\r\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\r\n        );\r\n    }\r\n}\r\n\r\nChatInfo.propTypes = {\r\n    className: PropTypes.string,\r\n    classes: PropTypes.object,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nChatInfo.defaultProps = {\r\n    className: null,\r\n    classes: null,\r\n    popup: false\r\n};\r\n\r\nexport default ChatInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport {\r\n    getChatTypingString,\r\n    getChatDraft,\r\n    getLastMessageSenderName,\r\n    getLastMessageContent,\r\n    showChatDraft, isPrivateChat\r\n} from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './DialogContent.css';\r\n\r\nclass DialogContent extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateUserChatAction', this.onUpdate);\r\n        UserStore.on('updateUser', this.onUpdateUser);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateUserChatAction', this.onUpdate);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUser = update => {\r\n        const { chatId } = this.props;\r\n        const { user } = update;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (isPrivateChat(chatId)) return;\r\n\r\n        const { last_message } = chat;\r\n        if (!last_message) return;\r\n\r\n        const { sender } = last_message;\r\n        if (sender.user_id !== user.id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\r\n\r\n        let contentControl = null;\r\n        const typingString = getChatTypingString(chatId);\r\n        if (typingString) {\r\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\r\n        }\r\n\r\n        if (!contentControl) {\r\n            const draft = getChatDraft(chatId);\r\n            if (showChatDraft(chatId)) {\r\n                const text = draft.text || '\\u00A0';\r\n\r\n                contentControl = (\r\n                    <>\r\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\r\n                        {text}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n\r\n        if (!contentControl) {\r\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\r\n            const senderName = getLastMessageSenderName(chat, t);\r\n            contentControl = (\r\n                <>\r\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\r\n                    {content}\r\n                </>\r\n            );\r\n        }\r\n\r\n        return <div className='dialog-content'>{contentControl}</div>;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(DialogContent);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\r\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\r\n        <path\r\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\r\n            strokeWidth='1.66'\r\n            strokeLinecap='round'\r\n            strokeLinejoin='round'\r\n        />\r\n    </g>,\r\n    'Pin'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport PinIcon from '../../Assets/Icons/Pin';\r\nimport {\r\n    isChatMuted,\r\n    isChatPinned,\r\n    showChatUnreadCount,\r\n    showChatUnreadMentionCount\r\n} from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport NotificationStore from '../../Stores/NotificationStore';\r\nimport './DialogBadge.css';\r\n\r\nclass DialogBadge extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, chatList } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatList !== chatList) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\r\n        ChatStore.on('updateChatPosition', this.onUpdate);\r\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\r\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\r\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\r\n        ChatStore.off('updateChatPosition', this.onUpdate);\r\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\r\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\r\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (update.chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateScopeNotificationSettings = update => {\r\n        const { chatId } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        switch (update.scope['@type']) {\r\n            case 'notificationSettingsScopeGroupChats': {\r\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'notificationSettingsScopePrivateChats': {\r\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.clearHistory) return null;\r\n\r\n        const { chatId, chatList } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { unread_count } = chat;\r\n        const isPinned = isChatPinned(chatId, chatList);\r\n\r\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\r\n        const showUnreadCount = showChatUnreadCount(chatId);\r\n        const isMuted = isChatMuted(chatId);\r\n\r\n        return (\r\n            <>\r\n                {showUnreadMentionCount && (\r\n                    <div className='dialog-badge'>\r\n                        <div className='dialog-badge-mention'>@</div>\r\n                    </div>\r\n                )}\r\n                {showUnreadCount && (\r\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\r\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\r\n                    </div>\r\n                )}\r\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\r\n                    <div className='dialog-badge-pinned'>\r\n                        <PinIcon className='dialog-badge-pinned-icon' />\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogBadge;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\r\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\r\n        </g>\r\n    </g>,\r\n    'Error'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\r\n        <g transform='translate(-3.000000, 0.000000)'>\r\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\r\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\r\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\r\n        </g>\r\n    </g>,\r\n    'Pending'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path\r\n        transform='translate(-4.000000, -2.000000)'\r\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\r\n    />,\r\n    'Sent'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path\r\n        transform='translate(-1.000000, -2.000000)'\r\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\r\n    />,\r\n    'Succeeded'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '../../Assets/Icons/Error';\r\nimport PendingIcon from '../../Assets/Icons/Pending';\r\nimport SentIcon from '../../Assets/Icons/Sent';\r\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\r\nimport { isMessageUnread } from '../../Utils/Message';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Status.css';\r\n\r\nclass Status extends React.Component {\r\n    state = {};\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId } = props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const sendingState = message ? message.sending_state : null;\r\n\r\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n                sendingState,\r\n                unread: isMessageUnread(chatId, messageId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\r\n\r\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n        MessageStore.on('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\r\n\r\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\r\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n        MessageStore.off('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\r\n    }\r\n\r\n    onUpdateMessageSendAcknowledged = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id) return;\r\n\r\n        this.setState({ sendingState: null });\r\n    };\r\n\r\n    onUpdateMessageSend = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { old_message_id, message } = update;\r\n\r\n        if (messageId !== old_message_id) return;\r\n        if (!message) return;\r\n\r\n        const { chat_id, id, sending_state } = message;\r\n        if (chatId !== chat_id) return;\r\n\r\n        this.newMessageId = id;\r\n        this.setState({ sendingState: sending_state });\r\n    };\r\n\r\n    onUpdateChatReadOutbox = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { chat_id, last_read_outbox_message_id } = update;\r\n        const { newMessageId } = this;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\r\n            this.setState({ sendingState: null, unread: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId } = this.props;\r\n        const { sendingState, unread } = this.state;\r\n        if (!unread) {\r\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\r\n        }\r\n\r\n        if (sendingState) {\r\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\r\n                <ErrorIcon\r\n                    className='status'\r\n                    viewBox='0 0 14 14'\r\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\r\n                />\r\n            ) : (\r\n                <PendingIcon\r\n                    className='status'\r\n                    viewBox='0 0 14 14'\r\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\r\n                />\r\n            );\r\n        }\r\n\r\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\r\n    }\r\n}\r\n\r\nStatus.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number\r\n};\r\n\r\nexport default Status;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Status from '../Message/Status';\r\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './DialogMeta.css';\r\n\r\nclass DialogMeta extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        if (this.clearHistory) return null;\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const isMe = isMeChat(chatId);\r\n\r\n        const { last_message } = chat;\r\n        if (!last_message) return null;\r\n\r\n        const date = getLastMessageDate(chat);\r\n        if (!date) return null;\r\n\r\n        const { id, is_outgoing } = last_message;\r\n\r\n        return (\r\n            <div className='dialog-meta'>\r\n                {is_outgoing && !isMe && (\r\n                    <>\r\n                        <Status chatId={chatId} messageId={id} />\r\n                        <span> </span>\r\n                    </>\r\n                )}\r\n                {date}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(DialogMeta);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\r\n    'Archive'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\r\n    'Unarchive'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\r\n    'Pin2'\r\n);\r\n\r\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\r\n// <title>Combined Shape</title>\r\n// <desc>Created with Sketch.</desc>\r\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\r\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\r\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\r\n// </g>\r\n// </g>\r\n// </svg>\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\r\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\r\n    </g>,\r\n    'PinOff'\r\n);\r\n\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\r\n    'Mute'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\r\n    'Unmute'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\r\n    'User'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\r\n    'Group'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\r\n    'Message'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\r\n    'Unread'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ChatTile from './ChatTile';\r\nimport DialogContent from './DialogContent';\r\nimport DialogBadge from './DialogBadge';\r\nimport DialogTitle from './DialogTitle';\r\nimport DialogMeta from './DialogMeta';\r\nimport ArchiveIcon from '../../Assets/Icons/Archive';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\r\nimport PinIcon from '../../Assets/Icons/Pin2';\r\nimport UnpinIcon from '../../Assets/Icons/PinOff';\r\nimport MuteIcon from '../../Assets/Icons/Mute';\r\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\r\nimport UserIcon from '../../Assets/Icons/User';\r\nimport GroupIcon from '../../Assets/Icons/Group';\r\nimport MessageIcon from '../../Assets/Icons/Message';\r\nimport UnreadIcon from '../../Assets/Icons/Unread';\r\nimport {\r\n    canAddChatToList,\r\n    canDeleteChat,\r\n    getDeleteChatTitle,\r\n    getViewInfoTitle,\r\n    isChatArchived,\r\n    isChatMuted,\r\n    isChatPinned,\r\n    isChatSecret,\r\n    isChatUnread,\r\n    isMeChat,\r\n    isPrivateChat\r\n} from '../../Utils/Chat';\r\nimport {\r\n    addChatToList,\r\n    leaveChat,\r\n    toggleChatIsMarkedAsUnread,\r\n    toggleChatIsPinned,\r\n    toggleChatNotificationSettings\r\n} from '../../Actions/Chat';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { viewMessages } from '../../Actions/Message';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Dialog.css';\r\n\r\nclass Dialog extends Component {\r\n    static contextMenuId;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialog = React.createRef();\r\n\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        this.state = {\r\n            chat,\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\r\n        const { contextMenu } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            // console.log('[vl] Dialog.shouldUpdate true t');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.hidden !== hidden) {\r\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.isLastPinned !== isLastPinned) {\r\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chatList !== chatList) {\r\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\r\n            // console.log('[vl] Dialog.shouldUpdate true style');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[vl] Dialog.shouldUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleSelect = event => {\r\n        if (event.button === 0) {\r\n            openChat(this.props.chatId);\r\n        }\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { chatId, chatList } = this.props;\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const contextMenuId = new Date();\r\n            Dialog.contextMenuId = contextMenuId;\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const isPinned = isChatPinned(chatId, chatList);\r\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\r\n            const canToggleArchive = canAddChatToList(chatId);\r\n            const canMute = !isMeChat(chatId);\r\n\r\n            if (Dialog.contextMenuId !== contextMenuId) {\r\n                return;\r\n            }\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                canTogglePin,\r\n                canToggleArchive,\r\n                canMute,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleMute = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\r\n    };\r\n\r\n    canPinChats = async chatId => {\r\n        const { chatList } = this.props;\r\n\r\n        const pinnedSumMaxOption = isChatArchived(chatId)\r\n            ? OptionStore.get('pinned_archived_chat_count_max')\r\n            : OptionStore.get('pinned_chat_count_max');\r\n        if (!pinnedSumMaxOption) return false;\r\n\r\n        const isSecret = isChatSecret(chatId);\r\n        const chats = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: chatList,\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: pinnedSumMaxOption.value + 10\r\n        });\r\n\r\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\r\n            if (isChatSecret(id) !== isSecret) return x;\r\n\r\n            const chat = ChatStore.get(id);\r\n\r\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\r\n        }, 0);\r\n\r\n        return pinnedSum < pinnedSumMaxOption.value;\r\n    };\r\n\r\n    handlePin = async event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId, chatList } = this.props;\r\n        const isPinned = isChatPinned(chatId, chatList);\r\n\r\n        if (!isPinned && !this.canPinChats(chatId)) return;\r\n\r\n        toggleChatIsPinned(chatId, chatList, !isPinned);\r\n    };\r\n\r\n    handleArchive = async event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n        if (!canAddChatToList(chatId)) return;\r\n\r\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\r\n    };\r\n\r\n    handleViewInfo = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        openChat(chatId, null, true);\r\n    };\r\n\r\n    handleRead = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const isUnread = isChatUnread(chatId);\r\n        if (isUnread) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (!chat) return;\r\n\r\n            const { is_marked_as_unread, last_message, unread_count } = chat;\r\n            if (unread_count > 0 && last_message) {\r\n                viewMessages(chatId, [last_message.id], true);\r\n            } else if (is_marked_as_unread) {\r\n                toggleChatIsMarkedAsUnread(chatId, false);\r\n            }\r\n        } else {\r\n            toggleChatIsMarkedAsUnread(chatId, true);\r\n        }\r\n    };\r\n\r\n    handleDeleteChat = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        leaveChat(chatId)\r\n    };\r\n\r\n    render() {\r\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\r\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\r\n\r\n        const deleteChat = canDeleteChat(chatId);\r\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\r\n\r\n        const isPinned = isChatPinned(chatId, chatList);\r\n        const currentChatId = ApplicationStore.getChatId();\r\n        const isSelected = currentChatId === chatId;\r\n        const isMuted = isChatMuted(chatId);\r\n        const isUnread = isChatUnread(chatId);\r\n        const isArchived = isChatArchived(chatId);\r\n        return (\r\n            <ListItem\r\n                button\r\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\r\n                onMouseDown={this.handleSelect}\r\n                onContextMenu={this.handleContextMenu}\r\n                style={style}\r\n                >\r\n                    <div className='dialog-wrapper'>\r\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline showGroupCall/>\r\n                        <div className='dialog-inner-wrapper'>\r\n                            <div className='tile-first-row'>\r\n                                <DialogTitle chatId={chatId} />\r\n                                <DialogMeta chatId={chatId} />\r\n                            </div>\r\n                            <div className='tile-second-row'>\r\n                                <DialogContent chatId={chatId} />\r\n                                <DialogBadge chatId={chatId} chatList={chatList} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Popover\r\n                        open={contextMenu}\r\n                        onClose={this.handleCloseContextMenu}\r\n                        anchorReference='anchorPosition'\r\n                        anchorPosition={{ top, left }}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'right'\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'left'\r\n                        }}\r\n                        onMouseDown={e => e.stopPropagation()}>\r\n                        <MenuList onClick={e => e.stopPropagation()}>\r\n                            {canToggleArchive && (\r\n                                <MenuItem onClick={this.handleArchive}>\r\n                                    {isArchived ? (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <UnarchiveIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('Unarchive')} />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <ArchiveIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('Archive')} />\r\n                                        </>\r\n                                    )}\r\n                                </MenuItem>\r\n                            )}\r\n                            {canTogglePin && (\r\n                                <MenuItem onClick={this.handlePin}>\r\n                                    {isPinned ? (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <UnpinIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('UnpinFromTop')} />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <PinIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('PinToTop')} />\r\n                                        </>\r\n                                    )}\r\n                                </MenuItem>\r\n                            )}\r\n                            <MenuItem onClick={this.handleViewInfo}>\r\n                                <ListItemIcon>\r\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\r\n                            </MenuItem>\r\n                            { canMute && (\r\n                                <MenuItem onClick={this.handleMute}>\r\n                                    {isMuted ? (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <UnmuteIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('ChatsUnmute')} />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <MuteIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('ChatsMute')} />\r\n                                        </>\r\n                                    )}\r\n                                </MenuItem>\r\n                            )}\r\n                            <MenuItem onClick={this.handleRead}>\r\n                                {isUnread ? (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <MessageIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('MarkAsRead')} />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <UnreadIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('MarkAsUnread')} />\r\n                                    </>\r\n                                )}\r\n                            </MenuItem>\r\n                            {/*{clearHistory && (*/}\r\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\r\n                            {/*        <ListItemIcon>*/}\r\n                            {/*            <BroomIcon />*/}\r\n                            {/*        </ListItemIcon>*/}\r\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\r\n                            {/*    </MenuItem>*/}\r\n                            {/*)}*/}\r\n                            {deleteChat && deleteChatTitle && (\r\n                                <MenuItem onClick={this.handleDeleteChat}>\r\n                                    <ListItemIcon>\r\n                                        <DeleteIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={deleteChatTitle} />\r\n                                </MenuItem>\r\n                            )}\r\n                        </MenuList>\r\n                    </Popover>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nDialog.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    chatList: PropTypes.object.isRequired,\r\n    hidden: PropTypes.bool,\r\n    showSavedMessages: PropTypes.bool,\r\n    isLastPinned: PropTypes.bool,\r\n    style: PropTypes.object\r\n};\r\n\r\nDialog.defaultProps = {\r\n    hidden: false,\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(Dialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getChatTitle } from '../../Utils/Chat';\r\nimport './DialogPlaceholder.css';\r\n\r\nclass DialogPlaceholder extends React.Component {\r\n    render() {\r\n        const { chatId, index, showTitle } = this.props;\r\n\r\n        let title = null;\r\n        if (showTitle) {\r\n            title = getChatTitle(chatId, true);\r\n        }\r\n\r\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\r\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\r\n\r\n        return (\r\n            <div className='dialog-placeholder'>\r\n                <div className='dialog-placeholder-wrapper'>\r\n                    <div className='dialog-placeholder-tile' />\r\n                    <div className='dialog-placeholder-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            {showTitle ? (\r\n                                title\r\n                            ) : (\r\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\r\n                            )}\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogPlaceholder.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    showTitle: PropTypes.bool\r\n};\r\n\r\nexport default DialogPlaceholder;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './VirtualizedList.css';\r\n\r\nconst style = {\r\n    listWrapper: height => ({\r\n        height,\r\n        position: 'relative'\r\n    }),\r\n    item: (index, height) => ({\r\n        height,\r\n        left: 0,\r\n        right: 0,\r\n        top: height * index,\r\n        position: 'absolute'\r\n    })\r\n};\r\n\r\nexport class VirtualizedList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        this.state = {\r\n            scrollTop: 0,\r\n            renderIds: new Map(),\r\n            renderIdsList: [],\r\n            viewportHeight: 0\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.source !== this.props.source) {\r\n            this.setViewportHeight();\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return true;\r\n\r\n        // const { renderIds } = this.state;\r\n        // const { renderIds: nextRenderIds } = nextState;\r\n        //\r\n        // if (renderIds.size === nextRenderIds.size) {\r\n        //     renderIds.forEach((value, key) => {\r\n        //         if (!nextRenderIds.has(key)) {\r\n        //             return true;\r\n        //         }\r\n        //     });\r\n        //\r\n        //     return false;\r\n        // }\r\n        //\r\n        // return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.setViewportHeight, true);\r\n\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n        current.addEventListener('scroll', this.setScrollPosition, true);\r\n\r\n        this.setViewportHeight();\r\n    }\r\n\r\n    setViewportHeight = () => {\r\n        const { source } = this.props;\r\n        const { scrollTop } = this.state;\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n\r\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\r\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\r\n\r\n        // console.log('[vl] setViewportHeight');\r\n        this.setState({ viewportHeight, ...renderIds });\r\n    };\r\n\r\n    getRenderIds(source, viewportHeight, scrollTop) {\r\n        const renderIds = new Map();\r\n        const renderIdsList = [];\r\n        source.forEach((item, index) => {\r\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\r\n                renderIds.set(index, index);\r\n                renderIdsList.push(index);\r\n            }\r\n        });\r\n\r\n        return { renderIds, renderIdsList };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.setViewportHeight);\r\n\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n        current.removeEventListener('scroll', this.setScrollPosition);\r\n    }\r\n\r\n    getListRenderIds() {\r\n        const { renderIds } = this.state;\r\n\r\n        return renderIds;\r\n    }\r\n\r\n    setScrollPosition = event => {\r\n        const { source, rowHeight, onScroll } = this.props;\r\n        const { viewportHeight, scrollTop } = this.state;\r\n\r\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\r\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\r\n\r\n            this.setState({\r\n                scrollTop: event.target.scrollTop,\r\n                ...renderIds\r\n            });\r\n        }\r\n\r\n        if (onScroll) {\r\n            onScroll(event);\r\n        }\r\n    };\r\n\r\n    getListRef() {\r\n        return this.listRef;\r\n    }\r\n\r\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\r\n        const { overScanCount, rowHeight } = this.props;\r\n\r\n        const itemTop = index * rowHeight;\r\n        const itemBottom = (index + 1) * rowHeight;\r\n\r\n        return (\r\n            itemTop > scrollTop - overScanCount * rowHeight &&\r\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { className, source, renderItem, rowHeight } = this.props;\r\n        const { renderIds } = this.state;\r\n\r\n        const items = (source || []).map((item, index) => {\r\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\r\n        });\r\n\r\n        // console.log('[vl] render', source, renderIds);\r\n\r\n        return (\r\n            <div ref={this.listRef} className={classNames('vlist', className)}>\r\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\r\n                    {items}\r\n                </div>\r\n                {/*<div className='vlist-top-border'/>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nVirtualizedList.defaultProps = {\r\n    source: [],\r\n    rowHeight: 72,\r\n    overScanCount: 5\r\n};\r\n\r\nVirtualizedList.propTypes = {\r\n    renderItem: PropTypes.func,\r\n    onScroll: PropTypes.func,\r\n    rowHeight: PropTypes.number,\r\n    className: PropTypes.string,\r\n    source: PropTypes.array.isRequired,\r\n    overScanCount: PropTypes.number.isRequired\r\n};\r\n\r\nexport default VirtualizedList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport function findLastTextNode(element) {\r\n    if (element.nodeType === Node.TEXT_NODE) {\r\n        return element;\r\n    }\r\n\r\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\r\n        const textNode = findLastTextNode(element.childNodes[i]);\r\n        if (textNode) {\r\n            return textNode;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function focusInput(element) {\r\n    if (!element) return;\r\n\r\n    const textNode = findLastTextNode(element);\r\n    if (textNode) {\r\n        const range = document.createRange();\r\n        range.setStart(textNode, textNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n    }\r\n\r\n    element.focus();\r\n}\r\n\r\nexport function scrollTop(element, behavior = 'smooth') {\r\n    if (!element) return;\r\n    if (element.scrollTop === 0) return;\r\n\r\n    element.scrollTop = Math.min(element.scrollTop, 50);\r\n    setTimeout(() => {\r\n        element.scrollTo({ top: 0, behavior });\r\n    }, 1);\r\n}\r\n\r\nexport function scrollBottom(element, behavior = 'smooth') {\r\n    if (!element) return;\r\n    if (element.scrollTop === element.scrollHeight - element.offsetHeight) return;\r\n\r\n    element.scrollTop = Math.max(element.scrollTop, element.scrollHeight - element.offsetHeight - 50);\r\n    setTimeout(() => {\r\n        element.scrollTo({ top: element.scrollHeight - element.offsetHeight, behavior });\r\n    }, 1);\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\r\n    'Channel'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\r\n    'Menu'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\r\n    'Help'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\r\n    'Settings'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nclass CacheManager {\r\n    async load(key) {\r\n        const value = localStorage.getItem(key);\r\n        if (!value) return null;\r\n\r\n        try {\r\n            return JSON.parse(value);\r\n        } catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async save(key, value) {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n\r\n    async remove(key) {\r\n        localStorage.removeItem(key);\r\n    }\r\n\r\n    async clear() {\r\n        localStorage.clear();\r\n    }\r\n}\r\n\r\nconst manager = new CacheManager();\r\nexport default manager;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport EventEmitter from './EventEmitter';\r\nimport { debounce } from '../Utils/Common';\r\nimport CacheManager from '../Workers/CacheManager';\r\nimport {\r\n    STORAGE_CACHE_KEY,\r\n    STORAGE_CACHE_TEST_KEY,\r\n    STORAGE_CONTACTS_KEY,\r\n    STORAGE_CONTACTS_TEST_KEY,\r\n    STORAGE_FILES_KEY,\r\n    STORAGE_FILES_TEST_KEY,\r\n    STORAGE_FILTERS_KEY,\r\n    STORAGE_FILTERS_TEST_KEY, STORAGE_REGISTER_KEY, STORAGE_REGISTER_TEST_KEY\r\n} from '../Constants';\r\nimport BasicGroupStore from './BasicGroupStore';\r\nimport ChatStore from './ChatStore';\r\nimport FileStore from './FileStore';\r\nimport MessageStore from './MessageStore';\r\nimport OptionStore from './OptionStore';\r\nimport SupergroupStore from './SupergroupStore';\r\nimport UserStore from './UserStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass CacheStore extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.cacheContacts = false;\r\n\r\n        const { useTestDC } = TdLibController.parameters;\r\n        this.cacheKey = useTestDC ? STORAGE_CACHE_TEST_KEY : STORAGE_CACHE_KEY;\r\n        this.contactsKey = useTestDC ? STORAGE_CONTACTS_TEST_KEY : STORAGE_CONTACTS_KEY;\r\n        this.filesKey = useTestDC ? STORAGE_FILES_TEST_KEY : STORAGE_FILES_KEY;\r\n        this.filtersKey = useTestDC ? STORAGE_FILTERS_TEST_KEY : STORAGE_FILTERS_KEY;\r\n        this.registerKey = useTestDC ? STORAGE_REGISTER_TEST_KEY : STORAGE_REGISTER_KEY;\r\n\r\n        this.reset();\r\n\r\n        this.addTdLibListener();\r\n\r\n        this.saveInternal = debounce(this.saveInternal, 2000, {\r\n            leading: false,\r\n            trailing: true\r\n        });\r\n    }\r\n\r\n    reset = () => {\r\n        this.filters = null;\r\n        this.chatIds = [];\r\n        this.archiveChatIds = [];\r\n        this.meChat = null;\r\n        if (this.cacheContacts) {\r\n            this.contacts = null;\r\n        }\r\n\r\n        this.cache = null;\r\n    };\r\n\r\n    onUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'updateAuthorizationState': {\r\n                const { authorization_state } = update;\r\n                if (!authorization_state) break;\r\n\r\n                switch (authorization_state['@type']) {\r\n                    case 'authorizationStateClosed': {\r\n                        this.reset();\r\n                        this.clear();\r\n                        break;\r\n                    }\r\n                    case 'authorizationStateLoggingOut':\r\n                    case 'authorizationStateWaitCode':\r\n                    case 'authorizationStateWaitPhoneNumber':\r\n                    case 'authorizationStateWaitPassword':\r\n                    case 'authorizationStateWaitRegistration': {\r\n                        CacheManager.remove(this.cacheKey);\r\n                        CacheManager.remove(this.filesKey);\r\n                        if (this.cacheContacts) {\r\n                            CacheManager.remove(this.contactsKey);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onClientUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'clientUpdateDialogsReady': {\r\n                this.clearDataUrls();\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    addTdLibListener = () => {\r\n        TdLibController.on('update', this.onUpdate);\r\n        TdLibController.on('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    removeTdLibListener = () => {\r\n        TdLibController.off('update', this.onUpdate);\r\n        TdLibController.off('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    async load() {\r\n        const promises = [];\r\n        promises.push(CacheManager.load(this.cacheKey).catch(error => null));\r\n        promises.push(CacheManager.load(this.filesKey).catch(error => null));\r\n        promises.push(CacheManager.load(this.filtersKey).catch(error => null));\r\n        if (this.cacheContacts) {\r\n            promises.push(CacheManager.load(this.contactsKey).catch(error => null));\r\n        }\r\n        let [cache, files, filters, contacts] = await Promise.all(promises);\r\n        // console.log('[f] cache.load', files);\r\n\r\n        let dropCache = false;\r\n        if (cache && cache.chats) {\r\n            for (let i = 0; i < cache.chats.length; i++) {\r\n                const { last_message } = cache.chats[i];\r\n                if (last_message && last_message.sender_user_id) {\r\n                    dropCache = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (dropCache) {\r\n            cache = null;\r\n        }\r\n\r\n        this.cache = cache;\r\n        if (this.cache) {\r\n            this.cache.files = files || [];\r\n        }\r\n\r\n        if (this.cacheContacts) {\r\n            if (contacts) {\r\n                (contacts || []).forEach(x => {\r\n                    UserStore.set(x);\r\n                })\r\n\r\n                this.contacts = {\r\n                    '@type': 'users',\r\n                    user_ids: contacts.map(x => x.id),\r\n                    total_count: contacts.length\r\n                };\r\n            }\r\n        }\r\n\r\n        this.filters = filters;\r\n\r\n        if (this.cache) {\r\n            this.parseCache(this.cache);\r\n        }\r\n\r\n        // console.log('[cm] load', this.filters, filters);\r\n        return this.cache;\r\n    }\r\n\r\n    parseCache(cache) {\r\n        if (!cache) return;\r\n\r\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\r\n        // console.log('[f] cache.parse', cache.files);\r\n\r\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\r\n            FileStore.setDataUrl(id, url);\r\n        });\r\n\r\n        (users || []).forEach(x => {\r\n            UserStore.set(x);\r\n        });\r\n\r\n        (basicGroups || []).forEach(x => {\r\n            BasicGroupStore.set(x);\r\n        });\r\n\r\n        (supergroups || []).forEach(x => {\r\n            SupergroupStore.set(x);\r\n        });\r\n\r\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\r\n            if (x) {\r\n                delete x.OutputTypingManager;\r\n\r\n                ChatStore.set(x);\r\n                if (x.photo) {\r\n                    if (x.photo.small) FileStore.set(x.photo.small);\r\n                    if (x.photo.big) FileStore.set(x.photo.big);\r\n                }\r\n                if (x.position) {\r\n                    ChatStore.updateChatChatLists(x.id);\r\n                }\r\n                if (x.last_message) {\r\n                    MessageStore.set(x.last_message);\r\n                }\r\n            }\r\n        });\r\n\r\n        (options || []).forEach(([id, option]) => {\r\n            OptionStore.set(id, option);\r\n        });\r\n    }\r\n\r\n    async getCache(chatIds, archiveChatIds) {\r\n        const fileMap = new Map();\r\n        const userMap = new Map();\r\n        const basicGroupMap = new Map();\r\n        const supergroupMap = new Map();\r\n        const meChat = this.meChat;\r\n        const chats = chatIds.map(x => ChatStore.get(x));\r\n        const chatMap = new Map(chats.map(x => [x.id, x]));\r\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\r\n\r\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\r\n            const { photo, type, last_message } = x;\r\n            if (photo && photo.small) {\r\n                const { id } = photo.small;\r\n                if (id) {\r\n                    const blob = FileStore.getBlob(id);\r\n                    if (blob) {\r\n                        fileMap.set(id, blob);\r\n                    }\r\n                }\r\n            }\r\n\r\n            switch (type['@type']) {\r\n                case 'chatTypeBasicGroup': {\r\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n                    if (basicGroup) {\r\n                        basicGroupMap.set(basicGroup.id, basicGroup);\r\n                    }\r\n                }\r\n                case 'chatTypePrivate':\r\n                case 'chatTypeSecret': {\r\n                    const user = UserStore.get(type.user_id);\r\n                    if (user) {\r\n                        userMap.set(user.id, user);\r\n                    }\r\n                }\r\n                case 'chatTypeSupergroup': {\r\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\r\n                    if (supergroup) {\r\n                        supergroupMap.set(supergroup.id, supergroup);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (last_message) {\r\n                const { sender } = last_message;\r\n                switch (sender['@type']) {\r\n                    case 'messageSenderUser': {\r\n                        const user = UserStore.get(sender.user_id);\r\n                        if (user) {\r\n                            userMap.set(user.id, user);\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'messageSenderChat': {\r\n                        const chat = ChatStore.get(sender.chat_id);\r\n                        if (chat) {\r\n                            chatMap.set(chat.id, chat);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return {\r\n            date: new Date(),\r\n            meChat,\r\n            chats: [...chatMap.values()],\r\n            archiveChats,\r\n            users: [...userMap.values()],\r\n            basicGroups: [...basicGroupMap.values()],\r\n            supergroups: [...supergroupMap.values()],\r\n            files: [...fileMap.entries()],\r\n            options: [...OptionStore.items.entries()]\r\n        };\r\n    }\r\n\r\n    async save(filters, chatIds, archiveChatIds) {\r\n        this.chatIds = chatIds;\r\n        this.archiveChatIds = archiveChatIds;\r\n        this.meChat = this.meChat || await TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: false\r\n        });\r\n        if (this.cacheContacts) {\r\n            this.contacts = this.contacts || await TdLibController.send({\r\n                '@type': 'getContacts'\r\n            });\r\n        }\r\n        this.filters = filters;\r\n\r\n        // console.log('[cm] save');\r\n        this.saveInternal();\r\n    }\r\n\r\n    async saveInternal() {\r\n        // console.log('[cm] saveInternal');\r\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\r\n        const files = cache.files;\r\n        cache.files = [];\r\n        // console.log('[cm] save cache', cache);\r\n        await CacheManager.save(this.cacheKey, cache);\r\n\r\n        const promises = [];\r\n        files.forEach(x => {\r\n            const [id, blob] = x;\r\n            promises.push(\r\n                new Promise((resolve, reject) => {\r\n                    const fileReader = new FileReader();\r\n                    fileReader.readAsDataURL(blob);\r\n                    fileReader.onload = e => {\r\n                        resolve({ id, url: e.target.result });\r\n                    };\r\n                    fileReader.onerror = e => {\r\n                        resolve(null);\r\n                    };\r\n                })\r\n            );\r\n        });\r\n        const results = await Promise.all(promises);\r\n        await CacheManager.save(this.filesKey, results);\r\n\r\n        if (this.cacheContacts) {\r\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\r\n            await CacheManager.save(this.contactsKey, contacts);\r\n        }\r\n\r\n        if (this.filters) {\r\n            await CacheManager.save(this.filtersKey, this.filters);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        const promises = [];\r\n        promises.push(CacheManager.remove(this.cacheKey).catch(error => null));\r\n        promises.push(CacheManager.remove(this.filesKey).catch(error => null));\r\n        promises.push(CacheManager.remove(this.filtersKey).catch(error => null));\r\n        promises.push(CacheManager.remove(this.contactsKey).catch(error => null));\r\n        promises.push(CacheManager.remove(this.registerKey).catch(error => null));\r\n\r\n        Promise.all(promises);\r\n    }\r\n\r\n    clearDataUrls() {\r\n        if (this.cache) {\r\n            const { files } = this.cache;\r\n\r\n            files.forEach(({ id, url }) => {\r\n                FileStore.deleteDataUrl(id);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nconst store = new CacheStore();\r\nwindow.cache = store;\r\nexport default store;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport ChannelIcon from '../../Assets/Icons/Channel';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport ArchiveIcon from '../../Assets/Icons/Archive';\r\nimport SearchIcon from '../../Assets/Icons/Search';\r\nimport MenuIcon from '../../Assets/Icons/Menu';\r\nimport GroupIcon from '../../Assets/Icons/Group';\r\nimport HelpIcon from '../../Assets/Icons/Help';\r\nimport SavedIcon from '../../Assets/Icons/Saved';\r\nimport SettingsIcon from '../../Assets/Icons/Settings';\r\nimport UserIcon from '../../Assets/Icons/User';\r\nimport { isAuthorizationReady } from '../../Utils/Common';\r\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\r\nimport { openSupportChat } from '../../Actions/Chat';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MainMenuButton.css';\r\n\r\nclass MainMenuButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            authorizationState: AppStore.getAuthorizationState(),\r\n            anchorEl: null,\r\n            isSmallWidth: AppStore.isSmallWidth\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        this.setState({ isSmallWidth });\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    handleMenuOpen = event => {\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleCheckUpdates = async () => {\r\n        this.handleMenuClose();\r\n\r\n        //await update();\r\n    };\r\n\r\n    handleNewChannel = event => {\r\n        this.handleMenuClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewChannel',\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleNewGroup = event => {\r\n        this.handleMenuClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewGroup',\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleContacts = event => {\r\n        this.handleMenuClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateContacts',\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleArchived = event => {\r\n        this.handleMenuClose();\r\n\r\n        openArchive();\r\n    };\r\n\r\n    handleSaved = async event => {\r\n        this.handleMenuClose();\r\n\r\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\r\n        if (!chat) {\r\n            chat = await TdLibController.send({\r\n                '@type': 'createPrivateChat',\r\n                user_id: UserStore.getMyId(),\r\n                force: false\r\n            });\r\n        }\r\n\r\n        if (!chat) return;\r\n\r\n        openChat(chat.id);\r\n    };\r\n\r\n    handleSettings = async event => {\r\n        this.handleMenuClose();\r\n\r\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\r\n        if (!chat) {\r\n            chat = await TdLibController.send({\r\n                '@type': 'createPrivateChat',\r\n                user_id: UserStore.getMyId(),\r\n                force: false\r\n            });\r\n        }\r\n\r\n        if (!chat) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSettings',\r\n            open: true,\r\n            chatId: chat.id\r\n        });\r\n    };\r\n\r\n    handleHelp = async event => {\r\n        this.handleMenuClose();\r\n\r\n        openSupportChat();\r\n    };\r\n\r\n    handleSearch = () => {\r\n        this.handleMenuClose();\r\n\r\n        searchChat(0);\r\n    };\r\n\r\n    render() {\r\n        const { t, timeout, popup, showClose, onClose } = this.props;\r\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\r\n\r\n        const mainMenuControl =\r\n            !showClose && isAuthorizationReady(authorizationState) ? (\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left'\r\n                    }}>\r\n                    <MenuItem onClick={this.handleNewChannel}>\r\n                        <ListItemIcon>\r\n                            <ChannelIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('NewChannel')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleNewGroup}>\r\n                        <ListItemIcon>\r\n                            <GroupIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('NewGroup')} />\r\n                    </MenuItem>\r\n                    { isSmallWidth && (\r\n                        <MenuItem onClick={this.handleSearch}>\r\n                            <ListItemIcon>\r\n                                <SearchIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Search')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    <MenuItem onClick={this.handleContacts}>\r\n                        <ListItemIcon>\r\n                            <UserIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Contacts')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleArchived}>\r\n                        <ListItemIcon>\r\n                            <ArchiveIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Archived')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleSaved}>\r\n                        <ListItemIcon>\r\n                            <SavedIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Saved')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleSettings}>\r\n                        <ListItemIcon>\r\n                            <SettingsIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Settings')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleHelp}>\r\n                        <ListItemIcon>\r\n                            <HelpIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('SettingsHelp')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n            ) : null;\r\n\r\n        const closeIcon = popup\r\n            ? <CloseIcon/>\r\n            : <ArrowBackIcon/>;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    className='header-left-button main-menu-button'\r\n                    aria-label='Menu'\r\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\r\n                    { timeout\r\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\r\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\r\n                    }\r\n\r\n                </IconButton>\r\n                {mainMenuControl}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(MainMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SearchIcon from '../../../Assets/Icons/Search';\r\nimport './SearchInput.css';\r\n\r\nclass SearchInput extends React.Component {\r\n    handleKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        } else if (event.keyCode === 27) {\r\n            const { onChange, onClose } = this.props;\r\n\r\n            const element = event.target;\r\n            if (!element) return;\r\n\r\n            if (element.innerText) {\r\n                event.stopPropagation();\r\n                event.nativeEvent.stopImmediatePropagation();\r\n\r\n                element.innerText = null;\r\n                if (onChange) onChange(element.innerText);\r\n                return;\r\n            }\r\n\r\n            if (onClose) {\r\n                onClose(event);\r\n            }\r\n        } else if (event.keyCode === 8) {\r\n            const { onBackspace } = this.props;\r\n\r\n            const element = event.target;\r\n            if (!element) return;\r\n            if (element.innerText) return;\r\n\r\n            if (onBackspace) {\r\n                event.stopPropagation();\r\n                onBackspace();\r\n            }\r\n        }\r\n    };\r\n\r\n    handleKeyUp = event => {\r\n        const element = event.target;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    };\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleInput = event => {\r\n        const { onChange } = this.props;\r\n\r\n        const element = event.target;\r\n        if (!element) return;\r\n\r\n        if (onChange) {\r\n            onChange(element.innerText);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\r\n\r\n        return (\r\n            <div className='search-input'>\r\n                <div className='search-input-wrapper'>\r\n                    {showIcon && <SearchIcon className='search-input-icon' />}\r\n                    <div\r\n                        id='search-inputbox'\r\n                        ref={inputRef}\r\n                        placeholder={hint || t('Search')}\r\n                        contentEditable\r\n                        suppressContentEditableWarning\r\n                        onKeyDown={this.handleKeyDown}\r\n                        onKeyUp={this.handleKeyUp}\r\n                        onPaste={this.handlePaste}\r\n                        onInput={this.handleInput}\r\n                        onFocus={onFocus}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearchInput.propTypes = {\r\n    inputRef: PropTypes.object,\r\n    hint: PropTypes.string,\r\n    showIcon: PropTypes.bool,\r\n    onBackspace: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    onFocus: PropTypes.func,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nSearchInput.defaultProps = {\r\n    showIcon: true\r\n}\r\n\r\nexport default withTranslation()(SearchInput);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MainMenuButton from './MainMenuButton';\r\nimport SearchInput from './Search/SearchInput';\r\nimport { isAuthorizationReady } from '../../Utils/Common';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport '../ColumnMiddle/Header.css';\r\n\r\nclass DialogsHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n\r\n        this.state = {\r\n            authorizationState: AppStore.getAuthorizationState(),\r\n            open: false\r\n        };\r\n    }\r\n\r\n    setInitQuery(query) {\r\n        const { onSearchTextChange } = this.props;\r\n\r\n        const searchInput = this.searchInputRef.current;\r\n        if (searchInput) {\r\n            searchInput.innerText = query;\r\n            if (searchInput.childNodes.length > 0) {\r\n                const range = document.createRange();\r\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\r\n                range.collapse(true);\r\n\r\n                const selection = window.getSelection();\r\n                selection.removeAllRanges();\r\n                selection.addRange(range);\r\n            }\r\n            searchInput.focus();\r\n            onSearchTextChange(query);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { openSearch } = this.props;\r\n\r\n        if (openSearch !== prevProps.openSearch) {\r\n            if (openSearch) {\r\n                this.focusInput();\r\n            } else {\r\n                const searchInput = this.searchInputRef.current;\r\n                if (searchInput) {\r\n                    searchInput.innerText = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    focusInput() {\r\n        const searchInput = this.searchInputRef.current;\r\n        if (searchInput) {\r\n            searchInput.focus();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.popup) {\r\n            this.focusInput();\r\n        }\r\n\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n    }\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    handleSearch = () => {\r\n        const { onSearch, openSearch } = this.props;\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        onSearch(!openSearch);\r\n    };\r\n\r\n    handleSearchTextChange = () => {\r\n        const { onSearchTextChange } = this.props;\r\n\r\n        const element = this.searchInputRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        onSearchTextChange(innerText);\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.handleSearch();\r\n    };\r\n\r\n    handleFocus = () => {\r\n        this.handleSearch();\r\n    };\r\n\r\n    render() {\r\n        const { openSearch, timeout, popup } = this.props;\r\n\r\n        let content = null;\r\n        let showBack = false;\r\n        if (openSearch) {\r\n            showBack = true;\r\n            content = (\r\n                <SearchInput\r\n                    inputRef={this.searchInputRef}\r\n                    onChange={this.handleSearchTextChange}\r\n                    onClose={this.handleCloseSearch}\r\n                />\r\n            );\r\n        } else {\r\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\r\n        }\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogsHeader.propTypes = {\r\n    openSearch: PropTypes.bool.isRequired,\r\n    onClick: PropTypes.func,\r\n    onSearch: PropTypes.func.isRequired,\r\n    onSearchTextChange: PropTypes.func.isRequired,\r\n    timeout: PropTypes.bool,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nexport default DialogsHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport Animator from '../../Utils/Animatior';\r\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\r\nimport { openChatList } from '../../Actions/Chat';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport FilterStore from '../../Stores/FilterStore';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport './Filters.css';\r\n\r\nclass Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.filterRef = new Map();\r\n        this.filtersRef = React.createRef();\r\n        this.filterSelectionRef = React.createRef();\r\n\r\n        const { isSmallWidth } = AppStore;\r\n        const { filters, chatList } = FilterStore;\r\n\r\n        this.state = {\r\n            isSmallWidth,\r\n            filters,\r\n            chatList\r\n        };\r\n\r\n        this.onWindowResize = throttle(this.onWindowResize, 250);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.observeResize();\r\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\r\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\r\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\r\n\r\n        this.setSelection();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.unobserveResize();\r\n        this.observeResize();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unobserveResize();\r\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\r\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\r\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\r\n    }\r\n\r\n    hasObserver = () => {\r\n        return 'ResizeObserver' in window;\r\n    };\r\n\r\n    observeResize() {\r\n        if (!this.hasObserver()) return;\r\n        const filters = this.filtersRef.current;\r\n        if (!filters) return;\r\n\r\n        const observer = new ResizeObserver(this.onWindowResize);\r\n        observer.observe(filters);\r\n\r\n        this.resizeObserver = { observer, filters }\r\n    }\r\n\r\n    unobserveResize() {\r\n        if (!this.hasObserver()) return;\r\n        if (!this.resizeObserver) return;\r\n\r\n        const { observer, filters } = this.resizeObserver;\r\n        if (!observer) return;\r\n        if (!filters) return;\r\n\r\n        observer.unobserve(filters);\r\n    }\r\n\r\n    onClientUpdateLanguageChange = update => {\r\n        if (!this.hasObserver()) this.setSelection(false);\r\n    };\r\n\r\n    onClientUpdateCacheLoaded = update => {\r\n        const { filters } = this.state;\r\n        if (filters) return;\r\n\r\n        const { filters: cachedFilters } = CacheStore;\r\n        if (!cachedFilters) return;\r\n\r\n        this.setState({\r\n            filters: cachedFilters\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection(false);\r\n        });\r\n    };\r\n\r\n    onWindowResize = () => {\r\n        this.setSelection(true);\r\n    };\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        this.setState({\r\n            isSmallWidth\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection(false);\r\n        });\r\n    };\r\n\r\n    setSelection = (transition = true) => {\r\n        const { chatList, filters, isSmallWidth } = this.state;\r\n\r\n        const scroll = this.filtersRef.current;\r\n        const padding = 3;\r\n\r\n        let item = null;\r\n        let left = 9;\r\n        if (chatList['@type'] === 'chatListMain') {\r\n            const main = this.filterRef.get('chatListMain');\r\n            if (main){\r\n                item = main.firstChild;\r\n                left = item.offsetLeft;\r\n            }\r\n        } else if (chatList['@type'] === 'chatListFilter') {\r\n            for (let i = 0; i < filters.length; i++) {\r\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\r\n                if (filters[i].id === chatList.chat_filter_id) {\r\n                    item = filter.firstChild;\r\n                    left = item.offsetLeft;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (!item) return;\r\n\r\n        const filterSelection = this.filterSelectionRef.current;\r\n        if (filterSelection) {\r\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\r\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\r\n        }\r\n\r\n        if (item && transition){\r\n            const { animator } = this;\r\n\r\n            if (animator) {\r\n                animator.stop();\r\n            }\r\n\r\n            this.animator = new Animator(250, [\r\n                {\r\n                    from: scroll.scrollLeft,\r\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\r\n                    func: left => (scroll.scrollLeft = left)\r\n                }\r\n            ]);\r\n\r\n            setTimeout(() => {\r\n                if (!this.animator) return;\r\n\r\n                this.animator.start();\r\n            }, 0);\r\n\r\n\r\n            // item.scrollIntoView();\r\n        }\r\n    };\r\n\r\n    onUpdateChatFilters = update => {\r\n        const { chatList } = this.state;\r\n        const { filters } = FilterStore;\r\n\r\n        this.setState({\r\n            filters\r\n        }, () => {\r\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\r\n                this.handleMainClick();\r\n            } else {\r\n                if (!this.hasObserver()) this.setSelection();\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatList = update => {\r\n        const { chatList } = FilterStore;\r\n\r\n        this.setState({\r\n            chatList\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection();\r\n        });\r\n    };\r\n\r\n    handleMainClick = event => {\r\n        if (event && event.button !== 0) return;\r\n\r\n        openChatList({ '@type': 'chatListMain' });\r\n    };\r\n\r\n    handleFilterClick = (event, id) => {\r\n        if (event && event.button !== 0) return;\r\n\r\n        openChatList({ '@type': 'chatListFilter', chat_filter_id: id });\r\n    };\r\n\r\n    handleWheel = event => {\r\n        if (!event.deltaY) {\r\n            return;\r\n        }\r\n\r\n        event.currentTarget.scrollLeft += event.deltaY;\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { filters, chatList, isSmallWidth } = this.state;\r\n\r\n        if (!filters) return null;\r\n        if (!filters.length) return null;\r\n\r\n        this.filterRef = new Map();\r\n        return (\r\n            <div className='tabs'>\r\n                <div className='tabs-bottom-border'/>\r\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\r\n                    <div\r\n                        ref={r => this.filterRef.set('chatListMain', r)}\r\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\r\n                        onMouseDown={this.handleMainClick}\r\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\r\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\r\n                    </div>\r\n                    {filters.map(x => (\r\n                        <div\r\n                            key={x.id}\r\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\r\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\r\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\r\n                            title={isSmallWidth ? x.title : null}>\r\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\r\n                        </div>))}\r\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFilters.propTypes = {\r\n\r\n};\r\n\r\nexport default withTranslation()(Filters);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '../Tile/Dialog';\r\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\r\nimport { scrollTop } from '../../Utils/DOM';\r\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\r\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './DialogsList.css';\r\nimport FilterStore from '../../Stores/FilterStore';\r\nimport DialogsHeader from './DialogsHeader';\r\nimport Filters from './Filters';\r\n\r\nclass DialogListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, chatList, style, hidden } = this.props;\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatList !== chatList) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.hidden !== hidden) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true style');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, chatList, hidden, style } = this.props;\r\n\r\n        return (\r\n            <div className='dialog-list-item' style={style}>\r\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass DialogsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.hiddenChats = new Map();\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        const { authorizationState } = AppStore;\r\n\r\n        this.state = {\r\n            authorizationState,\r\n            chats: null,\r\n            fistSliceLoaded: false,\r\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\r\n            params: {\r\n                loading: false,\r\n                completed: false\r\n            }\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { theme, cacheItems } = this.props;\r\n        const { chats, chatList } = this.state;\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.cacheItems !== cacheItems) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chats !== chats) {\r\n            return true;\r\n        }\r\n\r\n        // if (nextState.chatList !== chatList) {\r\n        //     return true;\r\n        // }\r\n\r\n        return false;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { current: list } = this.listRef;\r\n        if (!list) return { scrollTop: 0 };\r\n\r\n        return { scrollTop: list.scrollTop };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadFirstSlice();\r\n\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\r\n\r\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\r\n\r\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\r\n\r\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\r\n\r\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onClientUpdateChatList = update => {\r\n        const { chatList } = update;\r\n\r\n        if (chatListEquals(this.state.chatList, chatList)) {\r\n            this.scrollToTop();\r\n        } else {\r\n            this.setState({\r\n                chatList,\r\n                params: {\r\n                    loading: false,\r\n                    completed: false\r\n                }\r\n            }, () => {\r\n                this.loadFirstSlice();\r\n            });\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        // const { supegroup, prevSupergroup } = update;\r\n        //\r\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\r\n        //     return;\r\n        // }\r\n\r\n\r\n    };\r\n\r\n    onClientUpdateLeaveChat = update => {\r\n        const { inProgress, chatId } = update;\r\n\r\n        if (inProgress) {\r\n            this.hiddenChats.set(chatId, chatId);\r\n        } else {\r\n            this.hiddenChats.delete(chatId);\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        const { authorization_state: authorizationState } = update;\r\n\r\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.onLoadNext(true);\r\n    };\r\n\r\n    loadFirstSlice = async () => {\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        await FileStore.initDB(() => this.onLoadNext(true));\r\n    };\r\n\r\n    saveCache = () => {\r\n        const { onSaveCache, type } = this.props;\r\n        const { chatList } = this.state;\r\n        if (type !== 'chatListMain') return;\r\n        if (chatList['@type'] !== 'chatListMain') return;\r\n\r\n        if (onSaveCache) onSaveCache();\r\n    };\r\n\r\n    onUpdateChatPosition = update => {\r\n        const { chatList } = this.state;\r\n        const { position } = update;\r\n\r\n        if (!chatListEquals(chatList, position.list)) {\r\n            return;\r\n        }\r\n\r\n        this.onUpdateChatOrder(update);\r\n    };\r\n\r\n    onUpdateChatOrder = update => {\r\n        const { chats, chatList, params } = this.state;\r\n        if (!chats) return;\r\n\r\n        const { loading } = params;\r\n        if (loading && !chats.length) return;\r\n\r\n        const { chat_id } = update;\r\n\r\n        const chat = ChatStore.get(chat_id);\r\n        if (!chat) {\r\n            return;\r\n        }\r\n\r\n        if (!hasChatList(chat_id, chatList)) {\r\n            return;\r\n        }\r\n\r\n        const order = getChatOrder(chat_id, chatList);\r\n        const currentIndex = chats.findIndex(x => x === chat_id);\r\n        if (currentIndex === -1 && order === '0') {\r\n            return;\r\n        }\r\n\r\n        const chatIds = [];\r\n        for (let i = 0; i < chats.length; i++) {\r\n            const chat = ChatStore.get(chats[i]);\r\n            const chatOrder = getChatOrder(chats[i], chatList);\r\n            if (chat && chatOrder !== '0') {\r\n                chatIds.push(chat.id);\r\n            }\r\n        }\r\n\r\n        const newChatIds = [];\r\n        if (order === '0') {\r\n            // unselect deleted chat\r\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\r\n                TdLibController.setChatId(0);\r\n                changeChatDetailsVisibility(false);\r\n            }\r\n        } else {\r\n            if (currentIndex === -1) {\r\n                if (loading) {\r\n                    console.error(`[vl] skip ${update['@type']}`, { id: chat_id, title: ChatStore.get(chat_id).title, chat: ChatStore.get(chat_id) });\r\n                    // TODO: check and add if within loaded part\r\n                } else {\r\n                    newChatIds.push(chat_id);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.reorderChats(chatIds, newChatIds, () => {\r\n            this.loadChatContents(newChatIds);\r\n            this.saveCache();\r\n        });\r\n    };\r\n\r\n    reorderChats(chatIds, newChatIds = [], callback) {\r\n        const { chatList } = this.state;\r\n\r\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\r\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\r\n        });\r\n\r\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        // console.log('[vl] reorderChats', orderedChatIds);\r\n        this.setState({ chats: orderedChatIds }, callback);\r\n    }\r\n\r\n    static isDifferentOrder(oldChatIds, newChatIds) {\r\n        if (oldChatIds.length === newChatIds.length) {\r\n            for (let i = 0; i < oldChatIds.length; i++) {\r\n                if (oldChatIds[i] !== newChatIds[i]) return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    handleScroll = () => {\r\n        // console.log('[vl] onScroll');\r\n        if (this.stub) return;\r\n\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n\r\n        const list = current.getListRef().current;\r\n        if (!list) return;\r\n\r\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\r\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\r\n            this.onLoadPrev();\r\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\r\n            // console.log(`[vl] onScroll onLoadNext`);\r\n            this.onLoadNext();\r\n        }\r\n    };\r\n\r\n    onLoadPrev() {\r\n\r\n    }\r\n\r\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\r\n        const { type } = this.props;\r\n        const { chats, chatList, params } = this.state;\r\n\r\n        // console.log('[folders] onLoadNext', chatList, limit);\r\n        if (params.loading) {\r\n            // console.log('[folders] onLoadNext cancel loading', chatList);\r\n            return;\r\n        }\r\n\r\n        if (params.completed) {\r\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\r\n            return;\r\n        }\r\n\r\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\r\n        let offsetChatId = 0;\r\n        let offsetChat = null;\r\n        if (!replace && chats && chats.length > 0) {\r\n            offsetChat = ChatStore.get(chats[chats.length - 1]);\r\n            if (offsetChat) {\r\n                offsetOrder = getChatOrder(offsetChat.id, chatList);\r\n                offsetChatId = offsetChat.id;\r\n            }\r\n        }\r\n\r\n        if (type === 'chatListMain') console.log('[vl] GETCHATS start', type, offsetOrder, offsetChatId, offsetChat);\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: chatList,\r\n            offset_chat_id: offsetChatId,\r\n            offset_order: offsetOrder,\r\n            limit: CHAT_SLICE_LIMIT\r\n        }).finally(() => {\r\n            params.loading = false;\r\n            if (replace) {\r\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\r\n            }\r\n        });\r\n        if (type === 'chatListMain') console.log('[vl] GETCHATS stop', replace, type, result);\r\n\r\n        if (params !== this.state.params) {\r\n            // console.log('[folders] onLoadNext cancel', chatList);\r\n            return;\r\n        }\r\n\r\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\r\n            result.chat_ids.shift();\r\n        }\r\n\r\n        params.completed = !result.chat_ids.length;\r\n\r\n        if (replace) {\r\n            this.replaceChats(result.chat_ids, () => {\r\n                this.loadChatContents(result.chat_ids);\r\n                this.saveCache();\r\n\r\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\r\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\r\n                }\r\n\r\n                const list = this.listRef.current.getListRef().current;\r\n                if (!list) return;\r\n                list.scrollTop = 0;\r\n            });\r\n        } else {\r\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\r\n            this.appendChats(result.chat_ids, () => {\r\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\r\n                this.loadChatContents(result.chat_ids);\r\n\r\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\r\n                    this.onLoadNext(false, limit - result.chat_ids.length);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    loadChatContents(chatIds) {\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chatIds);\r\n    }\r\n\r\n    appendChats(chatIds, callback) {\r\n        if (chatIds.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        const { chats } = this.state;\r\n\r\n        const newChats = (chats || []).concat(chatIds);\r\n        this.setState({ chats: newChats }, callback);\r\n    }\r\n\r\n    replaceChats(chats, callback) {\r\n        this.setState({ chats }, callback);\r\n    }\r\n\r\n    scrollToTop() {\r\n        const list = this.listRef.current.getListRef().current;\r\n\r\n        scrollTop(list);\r\n    }\r\n\r\n    renderItem = ({ index, style }, source, stub = false) => {\r\n        const { chatList } = this.state;\r\n        const x = source[index];\r\n\r\n        if (stub) {\r\n            return <DialogPlaceholder key={index} index={index} />\r\n        }\r\n\r\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\r\n\r\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\r\n    };\r\n\r\n    render() {\r\n        const { cacheItems } = this.props;\r\n        const { chats, chatList } = this.state;\r\n\r\n        this.source = [];\r\n        this.stub = false;\r\n        if (chats) {\r\n            let lastPinnedId = 0;\r\n            chats.forEach(x => {\r\n                if (isChatPinned(x, chatList)) {\r\n                    lastPinnedId = x;\r\n                }\r\n            });\r\n            this.source = chats;\r\n        } else if (cacheItems) {\r\n            let lastPinnedId = 0;\r\n            cacheItems.forEach(x => {\r\n                if (isChatPinned(x, chatList)) {\r\n                    lastPinnedId = x;\r\n                }\r\n            });\r\n            this.source = cacheItems.map(x => x.id);\r\n        } else {\r\n            if (chatList['@type'] === 'chatListMain') {\r\n                this.source = Array.from(Array(10));\r\n                this.stub = true;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <VirtualizedList\r\n                ref={this.listRef}\r\n                className='dialogs-list'\r\n                source={this.source}\r\n                rowHeight={76}\r\n                overScanCount={20}\r\n                renderItem={x => this.renderItem(x, this.source, this.stub)}\r\n                onScroll={this.handleScroll}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nDialogsList.propTypes = {\r\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\r\n    cacheItems: PropTypes.array,\r\n};\r\n\r\nexport default DialogsList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport DialogsList from './DialogsList';\r\n\r\nclass Archive extends React.Component {\r\n    handleClick = () => {\r\n        const { innerListRef } = this.props;\r\n        if (!innerListRef) return;\r\n\r\n        const { current: list } = innerListRef;\r\n        if (!list) return;\r\n\r\n        list.scrollToTop();\r\n    };\r\n\r\n    render() {\r\n        const { t, innerListRef, cacheItems, onClose } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer' onClick={this.handleClick}>\r\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='dialogs-content'>\r\n                    <DialogsList\r\n                        type='chatListArchive'\r\n                        ref={innerListRef}\r\n                        cacheItems={cacheItems}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nArchive.propTypes = {};\r\n\r\nexport default withTranslation()(Archive);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ChatTile from './ChatTile';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './TopChat.css';\r\n\r\nclass TopChat extends React.PureComponent {\r\n    state = {\r\n        contextMenu: false,\r\n        top: 0,\r\n        left: 0\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleDelete = event => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\r\n        const { contextMenu, top, left } = this.state;\r\n\r\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\r\n\r\n        return (\r\n            <>\r\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\r\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline showGroupCall/>\r\n                    <div className='top-chat-title'>{shortTitle}</div>\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nTopChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func,\r\n    onDelete: PropTypes.func,\r\n    showSavedMessages: PropTypes.bool\r\n};\r\n\r\nTopChat.defaultProps = {\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(TopChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Chat from './Chat';\r\nimport './RecentlyFoundChat.css';\r\n\r\nclass RecentlyFoundChat extends React.PureComponent {\r\n    state = {\r\n        contextMenu: false,\r\n        top: 0,\r\n        left: 0\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleDelete = event => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, onClick } = this.props;\r\n        const { contextMenu, top, left } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <ListItem\r\n                    button\r\n                    className='recently-found-chat'\r\n                    onClick={onClick}\r\n                    onContextMenu={this.handleContextMenu}>\r\n                    <Chat chatId={chatId} />\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nRecentlyFoundChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func,\r\n    onDelete: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(RecentlyFoundChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Chat from './Chat';\r\nimport { getChatUsername } from '../../Utils/Chat';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './FoundPublicChat.css';\r\n\r\nclass FoundPublicChat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nextChatId: AppStore.getChatId(),\r\n            previousChatId: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId } = this.props;\r\n\r\n        if (nextState.nextChatId === chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.previousChatId === chatId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { nextChatId, previousChatId } = update;\r\n\r\n        this.setState({\r\n            nextChatId: nextChatId,\r\n            previousChatId: previousChatId\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClick } = this.props;\r\n        const { nextChatId: selectedChatId } = this.state;\r\n\r\n        const username = getChatUsername(chatId);\r\n\r\n        return (\r\n            <ListItem\r\n                button\r\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\r\n                onClick={onClick}>\r\n                <div className='found-public-chat-wrapper'>\r\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\r\n                </div>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nFoundPublicChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default FoundPublicChat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ChatTile from './ChatTile';\r\nimport UserTile from './UserTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\r\nimport { getContent } from '../../Utils/Message';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './FoundMessage.css';\r\n\r\nclass FoundMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nextChatId: AppStore.getChatId(),\r\n            nextMessageId: AppStore.getMessageId()\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        this.setState({\r\n            ...update\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\r\n        const selectedChatId = this.state.nextChatId;\r\n        const selectedMessageId = this.state.nextMessageId;\r\n        const message = MessageStore.get(chatId, messageId);\r\n\r\n        const { sender } = message;\r\n\r\n        const date = getMessageDate(message);\r\n        const senderName = getMessageSenderName(message, t);\r\n        const senderFullName = getMessageSenderFullName(message, t);\r\n        const content = getContent(message, t) || '\\u00A0';\r\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\r\n\r\n        const tile =\r\n            sender.user_id && chatSearch ? (\r\n                <UserTile userId={sender.user_id} dialog />\r\n            ) : (\r\n                <ChatTile chatId={chatId} dialog />\r\n            );\r\n\r\n        return (\r\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\r\n                <div className='dialog-wrapper'>\r\n                    {tile}\r\n                    <div className='dialog-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            {chatSearch && senderFullName ? (\r\n                                <div className='dialog-title'>{senderFullName}</div>\r\n                            ) : (\r\n                                <DialogTitle chatId={chatId} />\r\n                            )}\r\n                            <div className='dialog-meta'>{date}</div>\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <div className='dialog-content'>\r\n                                {\r\n                                    <>\r\n                                        {!chatSearch && senderName && (\r\n                                            <span className='dialog-content-accent'>{senderName}: </span>\r\n                                        )}\r\n                                        {content}\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nFoundMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    chatSearch: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(FoundMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './SectionHeader.css';\r\n\r\nfunction SectionHeader({ command, multiline, onClick, children }) {\r\n    return (\r\n        <div className='section-header'>\r\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\r\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\r\n        </div>\r\n    );\r\n}\r\n\r\nSectionHeader.propTypes = {\r\n    command: PropTypes.string,\r\n    multiline: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default SectionHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Chat from '../../Tile/Chat';\r\nimport TopChat from '../../Tile/TopChat';\r\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\r\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\r\nimport FoundMessage from '../../Tile/FoundMessage';\r\nimport SectionHeader from '../SectionHeader';\r\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\r\nimport { filterDuplicateMessages } from '../../../Utils/Message';\r\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\r\nimport { orderCompare } from '../../../Utils/Common';\r\nimport { getChatOrder } from '../../../Utils/Chat';\r\nimport { modalManager } from '../../../Utils/Modal';\r\nimport { SCROLL_PRECISION, SEARCH_GLOBAL_TEXT_MIN, USERNAME_LENGTH_MIN } from '../../../Constants';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Search.css';\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n        this.listRef = React.createRef();\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { text } = this.props;\r\n\r\n        this.searchOrLoadContent(text);\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape':\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                event.target.blur();\r\n\r\n                this.handleClose();\r\n                break;\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId, text } = this.props;\r\n\r\n        if (prevProps.text !== text) {\r\n            this.searchOrLoadContent(text);\r\n        } else if (prevProps.chatId !== chatId) {\r\n            this.searchOrLoadContent(text);\r\n        }\r\n    }\r\n\r\n    searchOrLoadContent(text) {\r\n        const trimmedText = text ? text.trim() : '';\r\n\r\n        if (!trimmedText) {\r\n            this.loadContent();\r\n        } else {\r\n            this.searchText(trimmedText);\r\n        }\r\n    }\r\n\r\n    concatSearchResults = results => {\r\n        const arr = [];\r\n        const map = new Map();\r\n\r\n            for (let i = 0; i < results.length; i++) {\r\n            let result = results[i] && results[i].chat_ids;\r\n            if (result) {\r\n                for (let j = 0; j < result.length; j++) {\r\n                    if (!map.has(result[j])) {\r\n                        map.set(result[j], result[j]);\r\n                        arr.push(result[j]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        arr.sort((a, b) => {\r\n            return orderCompare(getChatOrder(b), getChatOrder(a));\r\n        });\r\n\r\n        return arr;\r\n    };\r\n\r\n    searchText = async text => {\r\n        this.sessionId = new Date();\r\n        this.text = text;\r\n        const sessionId = this.sessionId;\r\n        let store = null;\r\n\r\n        // console.log('[se] searchText=' + text);\r\n\r\n        const { chatId } = this.props;\r\n        const { savedMessages } = this.state;\r\n\r\n        if (!chatId) {\r\n            const promises = [];\r\n            const localPromise = TdLibController.send({\r\n                '@type': 'searchChats',\r\n                query: text,\r\n                limit: 100\r\n            });\r\n            promises.push(localPromise);\r\n\r\n            const latinText = getLatinInput(text);\r\n            if (latinText && latinText !== text) {\r\n                const latinLocalPromise = TdLibController.send({\r\n                    '@type': 'searchChats',\r\n                    query: latinText,\r\n                    limit: 100\r\n                });\r\n                promises.push(latinLocalPromise);\r\n            }\r\n\r\n            const cyrillicText = getCyrillicInput(text);\r\n            if (cyrillicText && cyrillicText !== text) {\r\n                const cyrillicLocalPromise = TdLibController.send({\r\n                    '@type': 'searchChats',\r\n                    query: cyrillicText,\r\n                    limit: 100\r\n                });\r\n                promises.push(cyrillicLocalPromise);\r\n            }\r\n\r\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\r\n            const local = this.concatSearchResults(results);\r\n\r\n            if (sessionId !== this.sessionId) {\r\n                return;\r\n            }\r\n\r\n            if (savedMessages) {\r\n                const { t } = this.props;\r\n\r\n                const searchText = text.toUpperCase();\r\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\r\n\r\n                if (\r\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\r\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\r\n                ) {\r\n                    local.splice(0, 0, savedMessages.id);\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                top: null,\r\n                recentlyFound: null,\r\n                local: local\r\n            });\r\n\r\n            store = FileStore.getStore();\r\n            loadChatsContent(store, local);\r\n\r\n            let trimmedText = text.trim();\r\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\r\n            if (trimmedText.length >= SEARCH_GLOBAL_TEXT_MIN) {\r\n                trimmedText = trimmedText.length === SEARCH_GLOBAL_TEXT_MIN ? trimmedText + '.' : trimmedText;\r\n\r\n                const globalPromises = [];\r\n\r\n                const globalPromise = TdLibController.send({\r\n                    '@type': 'searchPublicChats',\r\n                    query: trimmedText\r\n                });\r\n                globalPromises.push(globalPromise);\r\n\r\n                if (latinText) {\r\n                    let latinTrimmedText = latinText.trim();\r\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\r\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\r\n                        const globalLatinPromise = TdLibController.send({\r\n                            '@type': 'searchPublicChats',\r\n                            query: latinTrimmedText\r\n                        });\r\n                        globalPromises.push(globalLatinPromise);\r\n                    }\r\n                }\r\n\r\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\r\n                const global = this.concatSearchResults(globalResults);\r\n\r\n                if (sessionId !== this.sessionId) {\r\n                    return;\r\n                }\r\n\r\n                this.setState({\r\n                    global\r\n                });\r\n\r\n                store = FileStore.getStore();\r\n                loadChatsContent(store, global);\r\n            } else {\r\n                this.setState({\r\n                    global: null\r\n                });\r\n            }\r\n        }\r\n\r\n        let messages = [];\r\n        if (chatId) {\r\n            messages = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: text,\r\n                sender_user_id: 0,\r\n                from_message_id: 0,\r\n                offset: 0,\r\n                limit: 50,\r\n                filter: null\r\n            });\r\n        } else {\r\n            messages = await TdLibController.send({\r\n                '@type': 'searchMessages',\r\n                chat_list: { '@type': 'chatListMain' },\r\n                query: text,\r\n                offset_date: 0,\r\n                offset_chat_id: 0,\r\n                offset_message_id: 0,\r\n                limit: 50\r\n            });\r\n        }\r\n\r\n        MessageStore.setItems(messages.messages);\r\n\r\n        let linkMessage = null;\r\n        if (!chatId) {\r\n            try {\r\n                const messageLinkInfo = await TdLibController.send({\r\n                    '@type': 'getMessageLinkInfo',\r\n                    url: text\r\n                });\r\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\r\n\r\n                MessageStore.setItems([messageLinkInfo.message]);\r\n\r\n                linkMessage = messageLinkInfo;\r\n            } catch (error) {\r\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\r\n            }\r\n        }\r\n\r\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\r\n\r\n        this.setState({\r\n            messages,\r\n            linkMessage\r\n        });\r\n\r\n        const chats = new Map();\r\n        const users = new Map();\r\n        for (let i = 0; i < messages.messages.length; i++) {\r\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\r\n            if (messages.messages[i].sender.user_id) {\r\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\r\n            }\r\n        }\r\n\r\n        if (linkMessage) {\r\n            const { chat_id, message } = linkMessage;\r\n\r\n            chats.set(chat_id, chat_id);\r\n            if (message) {\r\n                const { sender } = message;\r\n                if (sender && sender.user_id) {\r\n                    users.set(sender.user_id, sender.user_id);\r\n                }\r\n            }\r\n        }\r\n\r\n        store = FileStore.getStore();\r\n        loadChatsContent(store, [...chats.keys()]);\r\n        loadUsersContent(store, [...users.keys()]);\r\n    };\r\n\r\n    loadContent = async () => {\r\n        const { chatId } = this.props;\r\n        if (chatId) {\r\n            this.setState({\r\n                top: null,\r\n                recentlyFound: null,\r\n                local: null,\r\n                global: null,\r\n                messages: null,\r\n                linkMessage: null\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const topPromise = TdLibController.send({\r\n            '@type': 'getTopChats',\r\n            category: { '@type': 'topChatCategoryUsers' },\r\n            limit: 30\r\n        }).catch(() => {\r\n            return { '@type': 'chats', chat_ids: [] };\r\n        });\r\n\r\n        const recentlyFoundPromise = TdLibController.send({\r\n            '@type': 'searchChats',\r\n            query: '',\r\n            limit: 100\r\n        }).catch(() => {\r\n            return { '@type': 'chats', chat_ids: [] };\r\n        });\r\n\r\n        const savedMessagesPromise = TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: true\r\n        }).catch(error => {});\r\n\r\n        const [top, recentlyFound, savedMessages] = await Promise.all([\r\n            topPromise,\r\n            recentlyFoundPromise,\r\n            savedMessagesPromise\r\n        ]);\r\n\r\n        this.setState({\r\n            top,\r\n            recentlyFound,\r\n            savedMessages,\r\n            local: null,\r\n            global: null,\r\n            messages: null,\r\n            linkMessage: null\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, top.chat_ids);\r\n        loadChatsContent(store, recentlyFound.chat_ids);\r\n    };\r\n\r\n    handleClearRecentlyFound = event => {\r\n        event.stopPropagation();\r\n\r\n        TdLibController.send({\r\n            '@type': 'clearRecentlyFoundChats'\r\n        });\r\n\r\n        this.setState({ recentlyFound: null });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\r\n        const { onSelectMessage } = this.props;\r\n\r\n        if (addToRecent) {\r\n            TdLibController.send({\r\n                '@type': 'addRecentlyFoundChat',\r\n                chat_id: chatId\r\n            });\r\n        }\r\n\r\n        onSelectMessage(chatId, messageId, keepOpen);\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            this.onLoadPrevious();\r\n        }\r\n    };\r\n\r\n    getOffset = messages => {\r\n        const length = messages ? messages.messages.length : 0;\r\n\r\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\r\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\r\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\r\n\r\n        return {\r\n            offset_date: offsetDate,\r\n            offset_chat_id: offsetChatId,\r\n            offset_message_id: offsetMessageId\r\n        };\r\n    };\r\n\r\n    concatMessages = (messages, result) => {\r\n        if (!result) return messages;\r\n        if (!result.messages.length) return messages;\r\n\r\n        if (!messages) return result;\r\n        if (!messages.messages.length) return result;\r\n\r\n        return {\r\n            total_count: result.total_count,\r\n            messages: messages.messages.concat(result.messages)\r\n        };\r\n    };\r\n\r\n    onLoadPrevious = async () => {\r\n        if (this.loading) return;\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const sessionId = this.sessionId;\r\n\r\n        const { messages } = this.state;\r\n\r\n        const offset = this.getOffset(messages);\r\n\r\n        this.loading = true;\r\n        let result = [];\r\n        if (chatId) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: this.text,\r\n                sender_user_id: 0,\r\n                from_message_id: offset.offset_message_id,\r\n                limit: 50,\r\n                filter: null\r\n            });\r\n        } else {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchMessages',\r\n                chat_list: { '@type': 'chatListMain' },\r\n                query: this.text,\r\n                ...offset,\r\n                limit: 50\r\n            });\r\n        }\r\n        this.loading = false;\r\n\r\n        filterDuplicateMessages(result, messages ? messages.messages : []);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            messages: this.concatMessages(messages, result)\r\n        });\r\n\r\n        const chats = new Map();\r\n        const users = new Map();\r\n        for (let i = 0; i < result.messages.length; i++) {\r\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\r\n            if (result.messages[i].sender.user_id) {\r\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\r\n            }\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, [...chats.keys()]);\r\n        loadUsersContent(store, [...users.keys()]);\r\n    };\r\n\r\n    handleTopChatsScroll = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose();\r\n    };\r\n\r\n    handleDeleteRecentlyFoundChat = async chatId => {\r\n        if (!chatId) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'removeRecentlyFoundChat',\r\n            chat_id: chatId\r\n        });\r\n\r\n        const { recentlyFound } = this.state;\r\n        if (!recentlyFound) return;\r\n\r\n        this.setState({\r\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\r\n        });\r\n    };\r\n\r\n    handleDeleteTopChat = async chatId => {\r\n        if (!chatId) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'removeTopChat',\r\n            chat_id: chatId,\r\n            category: {\r\n                '@type': 'topChatCategoryUsers'\r\n            }\r\n        });\r\n\r\n        const { top } = this.state;\r\n        if (!top) return;\r\n\r\n        this.setState({\r\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const topChats =\r\n            top && top.chat_ids\r\n                ? top.chat_ids.map(x => (\r\n                      <TopChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\r\n                          onDelete={() => this.handleDeleteTopChat(x)}\r\n                      />\r\n                  ))\r\n                : [];\r\n\r\n        const recentlyFoundChats =\r\n            recentlyFound && recentlyFound.chat_ids\r\n                ? recentlyFound.chat_ids.map(x => (\r\n                      <RecentlyFoundChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\r\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\r\n                      />\r\n                  ))\r\n                : [];\r\n\r\n        const localChats = local\r\n            ? local.map(x => (\r\n                  <RecentlyFoundChat\r\n                      key={x}\r\n                      chatId={x}\r\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\r\n                  />\r\n              ))\r\n            : [];\r\n\r\n        const globalChatsMap = new Map();\r\n        const globalChats = global\r\n            ? global.map(x => {\r\n                  globalChatsMap.set(x, x);\r\n\r\n                  return (\r\n                      <FoundPublicChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\r\n                      />\r\n                  );\r\n              })\r\n            : [];\r\n\r\n        const globalLinkChat =\r\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\r\n                <FoundPublicChat\r\n                    key={linkMessage.chat_id}\r\n                    chatId={linkMessage.chat_id}\r\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\r\n                />\r\n            ) : null;\r\n\r\n        const globalMessagesMap = new Map();\r\n        const globalMessages =\r\n            messages && messages.messages\r\n                ? messages.messages.map(x => {\r\n                      const key = `${x.chat_id}_${x.id}`;\r\n                      globalMessagesMap.set(key, key);\r\n\r\n                      return (\r\n                          <FoundMessage\r\n                              key={key}\r\n                              chatId={x.chat_id}\r\n                              messageId={x.id}\r\n                              chatSearch={Boolean(chatId)}\r\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\r\n                          />\r\n                      );\r\n                  })\r\n                : [];\r\n\r\n        const globalLinkMessage =\r\n            linkMessage &&\r\n            linkMessage.message &&\r\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\r\n                <FoundMessage\r\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\r\n                    chatId={linkMessage.message.chat_id}\r\n                    messageId={linkMessage.message.id}\r\n                    chatSearch={false}\r\n                    onClick={() =>\r\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\r\n                    }\r\n                />\r\n            ) : null;\r\n\r\n        let count = messages ? messages.total_count : 0;\r\n        if (\r\n            linkMessage &&\r\n            linkMessage.message &&\r\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\r\n        ) {\r\n            count++;\r\n        }\r\n\r\n        let messagesCaption = t('NoMessages');\r\n        if (count) {\r\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\r\n        }\r\n\r\n        return (\r\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\r\n                {chat && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\r\n                            <div className='search-chat-wrapper'>\r\n                                <div className='search-chat-control'>\r\n                                    <Chat chatId={chatId} showStatus={false} />\r\n                                </div>\r\n                                <IconButton\r\n                                    className='header-right-button'\r\n                                    aria-label='Search'\r\n                                    onMouseDown={this.handleClose}>\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {topChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\r\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\r\n                                <div className='search-top-chats-placeholder' />\r\n                                {topChats}\r\n                                <div className='search-top-chats-placeholder' />\r\n                            </div>\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {recentlyFoundChats.length > 0 && (\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\r\n                            {t('Recent')}\r\n                        </SectionHeader>\r\n                        {recentlyFoundChats}\r\n                    </div>\r\n                )}\r\n                {localChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\r\n                            {localChats}\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {globalChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\r\n                            {globalLinkChat}\r\n                            {globalChats}\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {(messages || (linkMessage && linkMessage.message)) && (\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{messagesCaption}</SectionHeader>\r\n                        {globalLinkMessage}\r\n                        {globalMessages}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearch.propTypes = {\r\n    chatId: PropTypes.number,\r\n    text: PropTypes.string,\r\n    onSelectMessage: PropTypes.func.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Search);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes, { number } from 'prop-types';\r\nimport { Slide } from '@material-ui/core';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './SidebarPage.css';\r\n\r\nclass SidebarPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape':\r\n                const { onClose } = this.props;\r\n                if (onClose) {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    event.target.blur();\r\n\r\n                    onClose();\r\n                }\r\n                break;\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { open } = this.props;\r\n\r\n        if (prevProps.open !== open) {\r\n            if (open) {\r\n                KeyboardManager.add(this.keyboardHandler);\r\n            } else {\r\n                KeyboardManager.remove(this.keyboardHandler);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { children, open, timeout, onClose } = this.props;\r\n\r\n        return (\r\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\r\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\r\n            </Slide>\r\n        );\r\n    }\r\n}\r\n\r\nSidebarPage.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default SidebarPage;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\r\n    'Folder'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\r\n    'Edit'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\r\n    'LogOut'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\r\nimport MoreIcon from '../../../Assets/Icons/More';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport { modalManager } from '../../../Utils/Modal';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\n\r\nclass SettingsMenuButton extends React.Component {\r\n    state = {\r\n        anchorEl: null,\r\n        open: false\r\n    };\r\n\r\n    handleMenuOpen = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.handleMenuClose();\r\n\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleDone = () => {\r\n        this.handleClose();\r\n        TdLibController.logOut();\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { anchorEl, open } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    className='header-right-button'\r\n                    aria-label='Menu'\r\n                    onClick={this.handleMenuOpen}>\r\n                    <MoreIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}>\r\n                    <MenuItem onClick={this.handleLogOut}>\r\n                        <ListItemIcon>\r\n                            <LogOutIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('LogOut')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={open}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('AreYouSureLogout')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDone} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSettingsMenuButton.propTypes = {};\r\n\r\nexport default withTranslation()(SettingsMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\r\n    'Data'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\r\n    'Language'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport FilterIcon from '../../../Assets/Icons/Folder';\r\nimport Chat from '../../Tile/Chat';\r\nimport EditIcon from '../../../Assets/Icons/Edit';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport SettingsIcon from '../../../Assets/Icons/Settings';\r\nimport SettingsMenuButton from './SettingsMenuButton';\r\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\r\nimport DataIcon from '../../../Assets/Icons/Data';\r\nimport LanguageIcon from '../../../Assets/Icons/Language';\r\nimport packageJson from '../../../../package.json';\r\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport './Main.css';\r\n\r\nclass Main extends React.Component {\r\n\r\n    handleOpenViewer = () => {\r\n        const { chatId } = this.props;\r\n        \r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.photo) return;\r\n\r\n        setProfileMediaViewerContent({ chatId });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            chatId,\r\n            popup,\r\n            t,\r\n            onClose,\r\n            onEditProfile,\r\n            onGeneral,\r\n            onNotifications,\r\n            onPrivacySecurity,\r\n            onLanguage,\r\n            onFilters\r\n        } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { photo } = chat;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Settings')}</span>\r\n                    </div>\r\n                    <SettingsMenuButton />\r\n                </div>\r\n                <div className='sidebar-page-content settings-main-content'>\r\n                    <div className='chat-details-info'>\r\n                        <Chat\r\n                            chatId={chatId}\r\n                            big={true}\r\n                            showStatus={true}\r\n                            showSavedMessages={false}\r\n                            onTileSelect={photo ? this.handleOpenViewer : null}\r\n                        />\r\n                    </div>\r\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\r\n                        <ListItemIcon>\r\n                            <EditIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('EditProfile')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\r\n                        <ListItemIcon>\r\n                            <SettingsIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('GeneralSettings')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\r\n                        <ListItemIcon>\r\n                            <UnmuteIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Notifications')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\r\n                        <ListItemIcon>\r\n                            <DataIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('PrivacySettings')} />\r\n                    </ListItem>\r\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\r\n                        <ListItemIcon>\r\n                            <FilterIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Filters')} />\r\n                    </ListItem>\r\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\r\n                        <ListItemIcon>\r\n                            <LanguageIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Language')} />\r\n                    </ListItem>\r\n                    <div className='settings-main-footer'>\r\n                        {packageJson.version}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMain.propTypes = {\r\n    chatId: PropTypes.number,\r\n    popup: PropTypes.bool,\r\n    onClose: PropTypes.func,\r\n    onEditProfile: PropTypes.func,\r\n    onGeneral: PropTypes.func,\r\n    onNotifications: PropTypes.func,\r\n    onPrivacySecurity: PropTypes.func,\r\n    onLanguage: PropTypes.func,\r\n    onFilters: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Main);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\r\n    'AddImage'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Cropper from 'react-cropper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport AddImageIcon from '../../Assets/Icons/AddImage';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport CheckIcon from '../../Assets/Icons/Check';\r\nimport { getFitSize, readImageSize } from '../../Utils/Common';\r\nimport 'cropperjs/dist/cropper.css';\r\nimport './NewChatPhoto.css';\r\n\r\nclass NewChatPhoto extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.attachPhotoRef = React.createRef();\r\n        this.cropperRef = React.createRef();\r\n\r\n        const { defaultURL } = this.props;\r\n\r\n        this.state = {\r\n            blobURL: defaultURL,\r\n            open: false\r\n        }\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n\r\n    handleDone = () => {\r\n        const cropper = this.cropperRef.current.cropper;\r\n        if (!cropper) return;\r\n\r\n        cropper.getCroppedCanvas().toBlob(blob => {\r\n            const blobURL = URL.createObjectURL(blob);\r\n\r\n            this.setState({\r\n                blob,\r\n                blobURL\r\n            });\r\n\r\n            const { onChoose } = this.props;\r\n            if (!onChoose) return;\r\n\r\n            onChoose(blob, blobURL);\r\n        }, 'image/jpeg');\r\n\r\n        this.handleCancel();\r\n    };\r\n\r\n    handleAttach = () => {\r\n        this.attachPhotoRef.current.click();\r\n    };\r\n\r\n    handleAttachComplete = async () => {\r\n        const { files } = this.attachPhotoRef.current;\r\n        if (files.length === 0) return;\r\n\r\n        if (files.length === 1) {\r\n            const [ file, ...rest ] = Array.from(files);\r\n            if (!file) return;\r\n\r\n            const [width, height] = await readImageSize(file);\r\n\r\n            this.setState({\r\n                open: true,\r\n                file,\r\n                fileURL: URL.createObjectURL(file),\r\n                width,\r\n                height\r\n            });\r\n        }\r\n\r\n        this.attachPhotoRef.current.value = '';\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { open, width, height, fileURL, blobURL } = this.state;\r\n\r\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\r\n\r\n        return (\r\n            <>\r\n                <div className='new-chat-photo'>\r\n                    { blobURL ? (\r\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\r\n                        ) : (\r\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\r\n                            <AddImageIcon className='new-chat-photo-icon'/>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <input\r\n                    ref={this.attachPhotoRef}\r\n                    className='inputbox-attach-button'\r\n                    type='file'\r\n                    multiple={false}\r\n                    accept='image/*'\r\n                    onChange={this.handleAttachComplete}\r\n                />\r\n                { open && (\r\n                    <Dialog\r\n                        transitionDuration={0}\r\n                        open={true}\r\n                        onClose={this.handleCancel}\r\n                        aria-labelledby='dialog-title'>\r\n                        <div className='header-master'>\r\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\r\n                                <CloseIcon/>\r\n                            </IconButton>\r\n                            <div className='header-status grow cursor-pointer'>\r\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\r\n                            </div>\r\n                        </div>\r\n                        <DialogContent>\r\n                            <Cropper\r\n                                ref={this.cropperRef}\r\n                                src={fileURL}\r\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\r\n                                // Cropper.js options\r\n                                aspectRatio={1}\r\n                                viewMode={3}\r\n                                guides={false} />\r\n                        </DialogContent>\r\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\r\n                            <CheckIcon/>\r\n                        </div>\r\n                    </Dialog>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nNewChatPhoto.propTypes = {\r\n    defaultURL: PropTypes.string,\r\n    onChoose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(NewChatPhoto);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport NewChatPhoto from '../NewChatPhoto';\r\nimport { getSrc, loadChatContent } from '../../../Utils/File';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './EditProfile.css';\r\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\r\n\r\nclass EditProfile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.firstNameRef = React.createRef();\r\n        this.lastNameRef = React.createRef();\r\n        this.bioRef = React.createRef();\r\n        this.usernameRef = React.createRef();\r\n\r\n        const user = UserStore.get(UserStore.getMyId());\r\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\r\n\r\n        this.state = {\r\n            firstName: user ? user.first_name : '',\r\n            lastName: user ? user.last_name : '',\r\n            bio: userFullInfo ? userFullInfo.bio : '',\r\n            username: user ? user.username : '',\r\n            usernameCheck: null\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setName();\r\n        this.setBio();\r\n        this.setUsername();\r\n    }\r\n\r\n    setUsername() {\r\n        const { username, usernameCheck } = this.state;\r\n        let newUsername = this.usernameRef.current.value;\r\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\r\n            newUsername = newUsername.substr(1);\r\n        }\r\n\r\n        if (username === newUsername) return;\r\n        if (!usernameCheck) return;\r\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setUsername',\r\n            username: newUsername\r\n        });\r\n    }\r\n\r\n    setName() {\r\n        const { firstName, lastName } = this.state;\r\n        const newFirstName = this.firstNameRef.current.value;\r\n        const newLastName = this.lastNameRef.current.value;\r\n\r\n        if (newFirstName === firstName && newLastName === lastName) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.send({\r\n            '@type': 'setName',\r\n            first_name: newFirstName,\r\n            last_name: newLastName\r\n        });\r\n    }\r\n\r\n    setBio() {\r\n        const { bio } = this.state;\r\n        const newBio = this.bioRef.current.value;\r\n        if (newBio === bio) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.send({\r\n            '@type': 'setBio',\r\n            bio: newBio\r\n        });\r\n    }\r\n\r\n    handleUsernameChange = async () => {\r\n        const { chatId } = this.props;\r\n        const { username } = this.state;\r\n        let newUsername = this.usernameRef.current.value;\r\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\r\n            newUsername = newUsername.substr(1);\r\n        }\r\n        if (username === newUsername || newUsername === '') {\r\n            this.setState({\r\n                usernameCheck: null\r\n            });\r\n\r\n            // console.log('[un] checkChatUsername', 'null');\r\n        } else {\r\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\r\n            const result = await TdLibController.send({\r\n                '@type': 'checkChatUsername',\r\n                chat_id: chatId,\r\n                username: newUsername\r\n            });\r\n\r\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\r\n\r\n            let newUsername2 = this.usernameRef.current.value;\r\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\r\n                newUsername2 = newUsername2.substr(1);\r\n            }\r\n            if (newUsername2 === newUsername) {\r\n                this.setState({\r\n                    usernameCheck: result\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleChoosePhoto = async data => {\r\n        const { chatId } = this.props;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'setProfilePhoto',\r\n            photo: { '@type': 'inputChatPhotoStatic', photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data } }\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatContent(store, chatId, true);\r\n    };\r\n\r\n    render() {\r\n        let { chatId, t, onClose } = this.props;\r\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\r\n\r\n        let hasError = false;\r\n        let usernameLabel = t('Username');\r\n        if (usernameCheck) {\r\n            switch (usernameCheck['@type']) {\r\n                case 'checkChatUsernameResultOk': {\r\n                    hasError = false;\r\n                    usernameLabel = 'Username is available';\r\n                    break;\r\n                }\r\n                case 'checkChatUsernameResultPublicChatsTooMuch':\r\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\r\n                case 'checkChatUsernameResultUsernameInvalid': {\r\n                    hasError = true;\r\n                    usernameLabel = 'Invalid username';\r\n                    break;\r\n                }\r\n                case 'checkChatUsernameResultUsernameOccupied': {\r\n                    hasError = true;\r\n                    usernameLabel = 'Username is already taken';\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { photo } = chat;\r\n\r\n        const src = getSrc(photo ? photo.small : null);\r\n        const entities = [];\r\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\r\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('EditProfile')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\r\n                    <div className='edit-profile-name'>\r\n                        <TextField\r\n                            inputRef={this.firstNameRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('FirstName')}\r\n                            defaultValue={firstName}\r\n                        />\r\n                        <TextField\r\n                            inputRef={this.lastNameRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('LastName')}\r\n                            defaultValue={lastName}\r\n                        />\r\n                        <TextField\r\n                            inputRef={this.bioRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('Bio')}\r\n                            defaultValue={bio}\r\n                        />\r\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='edit-profile-username'>\r\n                        <TextField\r\n                            inputRef={this.usernameRef}\r\n                            error={hasError}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={usernameLabel}\r\n                            defaultValue={username}\r\n                            onChange={this.handleUsernameChange}\r\n                        />\r\n                        <div className='edit-profile-hint'>\r\n                            {formattedText}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(EditProfile);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\r\n    'Add'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\r\n    'NewPrivate'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\r\n    'NonContacts'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\r\n    'NewGroup'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\r\n    'NewChannel'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\r\n    'ReadChats'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\r\n    'Bots'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\r\n    'Done'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport ChatTile from './ChatTile';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\r\nimport './FilterChat.css';\r\n\r\nclass FilterChat extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0,\r\n        checked: false\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        const { onDelete } = this.props;\r\n        if (!onDelete) return;\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({\r\n            contextMenu: true,\r\n            left: event.clientX,\r\n            top: event.clientY\r\n        });\r\n    };\r\n\r\n    handleCloseContextMenu = () => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { chatId, onDelete } = this.props;\r\n\r\n        onDelete && onDelete(chatId);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t, type, checked, onClick } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const title = getChatTitle(chatId, true, t);\r\n\r\n        return (\r\n            <>\r\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='filter-chat-tile'>\r\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\r\n                    </div>\r\n                    <div className='filter-chat-content'>\r\n                        <div className='filter-chat-title'>\r\n                            {title}\r\n                        </div>\r\n                        { type && (\r\n                            <div className='filter-chat-subtitle'>\r\n                                {getChatType(chatId, t)}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    { checked !== undefined && (\r\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\r\n                    )}\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilterChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    type: PropTypes.bool,\r\n    onDelete: PropTypes.func,\r\n    checked: PropTypes.bool,\r\n    onChange: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(FilterChat);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport './FilterText.css';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nclass FilterText extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        const { onDelete } = this.props;\r\n        if (!onDelete) return;\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({\r\n            contextMenu: true,\r\n            left: event.clientX,\r\n            top: event.clientY\r\n        });\r\n    };\r\n\r\n    handleCloseContextMenu = () => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete && onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { t, className, icon, text, checked, onClick } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='filter-chat-tile'>\r\n                        {icon}\r\n                    </div>\r\n                    <div className='filter-chat-content'>\r\n                        {text}\r\n                    </div>\r\n                    { checked !== undefined && (\r\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\r\n                    )}\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilterText.propTypes = {\r\n    icon: PropTypes.object,\r\n    text: PropTypes.string,\r\n    checked: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    onDelete: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(FilterText);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport './Chip.css';\r\n\r\nclass Chip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    getOffset() {\r\n        const {\r\n            offsetLeft: left,\r\n            offsetTop: top,\r\n            offsetWidth: width,\r\n            offsetHeight: height\r\n        } = this.divRef.current;\r\n\r\n        return { left, top, width, height }\r\n    }\r\n\r\n    setStyleCSSText(text) {\r\n        const div = this.divRef.current;\r\n        if (!div) return;\r\n\r\n        div.style.cssText = text;\r\n    }\r\n\r\n    render() {\r\n        const { icon, text, selected, onClick } = this.props;\r\n\r\n        return (\r\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\r\n                <div className='chip-icon'>\r\n                    {icon}\r\n                </div>\r\n                <div className='chip-delete'>\r\n                    <CloseIcon className='chip-delete-icon'/>\r\n                </div>\r\n                <div className='chip-text'>{text}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nChip.propTypes = {\r\n    icon: PropTypes.object,\r\n    text: PropTypes.string,\r\n    selected: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default Chip;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './ChatChip.css';\r\n\r\nclass ChatChip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    getOffset() {\r\n        const {\r\n            offsetLeft: left,\r\n            offsetTop: top,\r\n            offsetWidth: width,\r\n            offsetHeight: height\r\n        } = this.divRef.current;\r\n\r\n        return { left, top, width, height }\r\n    }\r\n\r\n    setStyleCSSText(text) {\r\n        const div = this.divRef.current;\r\n        if (!div) return;\r\n\r\n        div.style.cssText = text;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, selected, onClick } = this.props;\r\n\r\n        return (\r\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\r\n                <ChatTile chatId={chatId} small={true}/>\r\n                <div className='chip-delete'>\r\n                    <CloseIcon className='chip-delete-icon'/>\r\n                </div>\r\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nChatChip.propTypes = {\r\n    chatId: PropTypes.number,\r\n    selected: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default ChatChip;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\r\nimport FilterChat from '../../Tile/FilterChat';\r\nimport FilterText from '../../Tile/FilterText';\r\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\r\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\r\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\r\nimport BotsIcon from '../../../Assets/Icons/Bots';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SearchInput from '../Search/SearchInput';\r\nimport MutedIcon from '../../../Assets/Icons/Mute';\r\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\r\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\r\nimport Chip from '../../Tile/Chip';\r\nimport ChatChip from '../../Tile/ChatChip';\r\nimport { loadChatsContent } from '../../../Utils/File';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './EditFilterChats.css';\r\nimport { scrollBottom } from '../../../Utils/DOM';\r\n\r\nclass EditFilterChats extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n        this.wrapPanelRef = React.createRef();\r\n        this.itemsRef = new Map();\r\n\r\n        this.state = {\r\n            focusedItem: null,\r\n            searchItems: null,\r\n            error: false\r\n        }\r\n    }\r\n\r\n    handleChatChange = (chatId, search) => {\r\n        const { mode } = this.props;\r\n\r\n        if (search) {\r\n            const input = this.searchInputRef.current;\r\n            input.focus();\r\n            input.innerText = '';\r\n            this.handleSearch('');\r\n        }\r\n\r\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\r\n    };\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { filter, mode } = this.props;\r\n        const { filter : prevFilter } = prevProps;\r\n\r\n        if (prevProps.filter === filter) {\r\n            return null;\r\n        }\r\n\r\n        const include = mode === 'include';\r\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\r\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\r\n\r\n        const isDeleting =\r\n            prevItems.length > items.length\r\n            || prevFilter.include_contacts && !filter.include_contacts\r\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\r\n            || prevFilter.include_groups && !filter.include_groups\r\n            || prevFilter.include_channels && !filter.include_channels\r\n            || prevFilter.include_bots && !filter.include_bots\r\n            || prevFilter.exclude_read && !filter.exclude_read\r\n            || prevFilter.exclude_muted && !filter.exclude_muted\r\n            || prevFilter.exclude_archived && !filter.exclude_archived;\r\n\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n        const prevHeight = wrapPanel.scrollHeight;\r\n        const prevOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const prevCSSText = wrapPanel.style.cssText;\r\n        const prevScrollTop = wrapPanel.scrollTop;\r\n        if (isDeleting) {\r\n            wrapPanel.style.cssText = null;\r\n        }\r\n\r\n        const prevMap = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const offset = el.getOffset();\r\n                prevMap.set(key, offset);\r\n            }\r\n        }\r\n\r\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.filter === this.props.filter) {\r\n            return;\r\n        }\r\n\r\n        this.animatePanel(snapshot.panel);\r\n        // this.animateItems(snapshot.items);\r\n    }\r\n\r\n    animatePanel(snapshot) {\r\n        if (!snapshot) return;\r\n\r\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\r\n\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n\r\n        const currentHeight = wrapPanel.scrollHeight;\r\n        const currentOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const expanded = currentHeight > prevHeight;\r\n        const collapsed = currentHeight < prevHeight;\r\n\r\n        const maxHeight = 123;\r\n        if (expanded) {\r\n            if (prevHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                    setTimeout(() => {\r\n                        scrollBottom(wrapPanel, 'auto');\r\n                    }, 250);\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                scrollBottom(wrapPanel, 'smooth');\r\n            }\r\n        } else if (collapsed) {\r\n            if (currentHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            }\r\n        } else {\r\n            if (isDeleting) {\r\n                wrapPanel.style.cssText = prevCSSText;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            } else {\r\n                scrollBottom(wrapPanel, 'smooth');\r\n            }\r\n        }\r\n    }\r\n\r\n    animateItems(prevOffsets) {\r\n        if (!prevOffsets) return;\r\n\r\n        const doubleTransform = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const currentOffset = el.getOffset();\r\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\r\n                if (prevOffset) {\r\n                    if (prevOffset.left < currentOffset.left) {\r\n                        doubleTransform.set(el, { prevOffset, currentOffset });\r\n                    }\r\n\r\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\r\n                    el.setStyleCSSText(transform);\r\n                }\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(() => {\r\n            for (let key of this.itemsRef.keys()) {\r\n                const el = this.itemsRef.get(key);\r\n                if (el) {\r\n                    let transition = `transition: transform 0.25s ease`;\r\n                    if (doubleTransform.has(el)) {\r\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\r\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\r\n                            + 'transition: transform 0.1s ease;'\r\n                    }\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n            }\r\n\r\n            if (!doubleTransform.size) return;\r\n\r\n            setTimeout(() => {\r\n                for (let el of doubleTransform.keys()) {\r\n                    const { currentOffset } = doubleTransform.get(el);\r\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\r\n                        + 'transition: transform 0s ease;';\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n\r\n                requestAnimationFrame(() => {\r\n                    for (let el of doubleTransform.keys()) {\r\n                        const transition = 'transition: transform 0.15s ease';\r\n\r\n                        el.setStyleCSSText(transition);\r\n                    }\r\n                });\r\n\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    handleBackspace = () => {\r\n        const { filter, mode } = this.props;\r\n        const { focusedItem } = this.state;\r\n        if (!filter) return;\r\n\r\n        if (focusedItem) {\r\n            switch (focusedItem) {\r\n                case 'include_contacts':\r\n                case 'include_non_contacts':\r\n                case 'include_bots':\r\n                case 'include_groups':\r\n                case 'include_channels':\r\n                case 'exclude_muted':\r\n                case 'exclude_read':\r\n                case 'exclude_archived': {\r\n                    this.handleChange(focusedItem);\r\n\r\n                    this.setState({\r\n                        focusedItem: null\r\n                    });\r\n                    break;\r\n                }\r\n                default: {\r\n                    this.handleChatChange(focusedItem);\r\n\r\n                    this.setState({\r\n                        focusedItem: null\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        const include = mode === 'include';\r\n        if (include) {\r\n            const {\r\n                include_contacts,\r\n                include_non_contacts,\r\n                include_bots,\r\n                include_groups,\r\n                include_channels,\r\n                included_chat_ids\r\n            } = filter;\r\n\r\n            if (included_chat_ids.length > 0) {\r\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\r\n                if (!lastItem) return;\r\n\r\n                this.setState({\r\n                    focusedItem: lastItem\r\n                });\r\n            } else if (include_bots) {\r\n                this.setState({\r\n                    focusedItem: 'include_bots'\r\n                });\r\n            } else if (include_channels) {\r\n                this.setState({\r\n                    focusedItem: 'include_channels'\r\n                });\r\n            } else if (include_groups) {\r\n                this.setState({\r\n                    focusedItem: 'include_groups'\r\n                });\r\n            } else if (include_non_contacts) {\r\n                this.setState({\r\n                    focusedItem: 'include_non_contacts'\r\n                });\r\n            } else if (include_contacts) {\r\n                this.setState({\r\n                    focusedItem: 'include_contacts'\r\n                });\r\n            }\r\n        } else {\r\n            const {\r\n                exclude_muted,\r\n                exclude_read,\r\n                exclude_archived,\r\n                excluded_chat_ids\r\n            } = filter;\r\n\r\n            if (excluded_chat_ids.length > 0) {\r\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\r\n                if (!lastItem) return;\r\n\r\n                this.setState({\r\n                    focusedItem: lastItem\r\n                });\r\n            } else if (exclude_archived) {\r\n                this.setState({\r\n                    focusedItem: 'exclude_archived'\r\n                });\r\n            } else if (exclude_read) {\r\n                this.setState({\r\n                    focusedItem: 'exclude_read'\r\n                });\r\n            } else if (exclude_muted) {\r\n                this.setState({\r\n                    focusedItem: 'exclude_muted'\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleChange = (type, value) => {\r\n        const { onChange } = this.props;\r\n\r\n        onChange(type, value);\r\n\r\n        this.setState({\r\n            focusedItem: null\r\n        });\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text.trim();\r\n        if (!query) {\r\n            this.setState({\r\n                searchItems: null,\r\n                focusedItem: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const promises = [];\r\n        promises.push(\r\n            TdLibController.send({\r\n                '@type': 'searchChats',\r\n                query,\r\n                limit: 100\r\n            })\r\n        );\r\n        const [searchItems] = await Promise.all(promises);\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, searchItems.chat_ids);\r\n\r\n        this.setState({ searchItems, focusedItem: null });\r\n    };\r\n\r\n    render() {\r\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\r\n        const { focusedItem, searchItems } = this.state;\r\n\r\n        const {\r\n            include_contacts,\r\n            include_non_contacts,\r\n            include_bots,\r\n            include_groups,\r\n            include_channels,\r\n            included_chat_ids\r\n        } = filter;\r\n\r\n        const {\r\n            exclude_muted,\r\n            exclude_read,\r\n            exclude_archived,\r\n            excluded_chat_ids\r\n        } = filter;\r\n\r\n        const include = mode === 'include';\r\n        const items = include ? included_chat_ids : excluded_chat_ids;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\r\n                    </div>\r\n                </div>\r\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\r\n                    { include && (\r\n                        <>\r\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\r\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\r\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\r\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\r\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\r\n                        </>\r\n                    )}\r\n                    { !include && (\r\n                        <>\r\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\r\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\r\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\r\n                        </>\r\n                    )}\r\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\r\n                    <SearchInput wrapperRef={this.searchRef} inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\r\n                </div>\r\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\r\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\r\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\r\n                    {include && (\r\n                        <>\r\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\r\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\r\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\r\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\r\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\r\n                        </>\r\n                    )}\r\n                    {!include && (\r\n                        <>\r\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\r\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\r\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\r\n                        </>\r\n                    )}\r\n                    { chats && chats.length > 0 && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\r\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\r\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\r\n                        </>\r\n                    )}\r\n                    { searchItems && (\r\n                        <div className='edit-filter-chats-search'>\r\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditFilterChats.propTypes = {\r\n    filter: PropTypes.object,\r\n    chats: PropTypes.array,\r\n    mode: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    onScroll: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(EditFilterChats);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AddIcon from '../../../Assets/Icons/Add';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\r\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\r\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\r\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\r\nimport MutedIcon from '../../../Assets/Icons/Mute';\r\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\r\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\r\nimport BotsIcon from '../../../Assets/Icons/Bots';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport DoneIcon from '../../../Assets/Icons/Done';\r\nimport EditFilterChats from './EditFilterChats';\r\nimport FilterChat from '../../Tile/FilterChat';\r\nimport FilterText from '../../Tile/FilterText';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SidebarPage from '../SidebarPage';\r\nimport { isFilterValid } from '../../../Utils/Filter';\r\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './CreateFilter.css';\r\n\r\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\r\n\r\nclass CreateFilter extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n        this.lottieRef = React.createRef();\r\n\r\n        this.state = {\r\n            prevFilterId: -1,\r\n            data: null,\r\n            openFilterChats: false,\r\n            mode: null,\r\n            title: '',\r\n            error: false,\r\n            shook: false,\r\n            chats: [],\r\n            limit: 0\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { filter, filterId } = props;\r\n        const { prevFilterId } = state;\r\n\r\n        if (filter && prevFilterId !== filterId){\r\n            return {\r\n                prevFilterId: filterId,\r\n                editFilter: {...filter},\r\n                title: filter.title\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAnimationData();\r\n    }\r\n\r\n    loadAnimationData = async () => {\r\n        const { closeData } = this.state;\r\n        if (closeData) return;\r\n\r\n        try {\r\n            const requests = [ fetch('data/Folders_2.json') ];\r\n\r\n            const results = await Promise.all(requests);\r\n\r\n            const [data] = await Promise.all(results.map(x => x.text()));\r\n\r\n            this.setState({ data });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { onDone } = this.props;\r\n        const { editFilter } = this.state;\r\n\r\n        const title = this.titleRef.current.value.trim();\r\n        if (!title) {\r\n            this.titleRef.current.focus();\r\n            this.setState({\r\n                error: true\r\n            })\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                error: false\r\n            })\r\n        }\r\n\r\n        editFilter.title = title;\r\n\r\n        if (!isFilterValid(editFilter)) {\r\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\r\n            return;\r\n        }\r\n\r\n        onDone && onDone(editFilter);\r\n    };\r\n\r\n    handleAnimationClick = () => {\r\n        const lottie = this.lottieRef.current;\r\n        if (!lottie) return;\r\n        if (!lottie.isPaused) return;\r\n\r\n        lottie.play();\r\n    };\r\n\r\n    handleDeleteIncludeContacts = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_contacts: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterContacts')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeNonContacts = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterNonContacts')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeGroups = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_groups: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterGroups')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeChannels = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_channels: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterChannels')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeBots = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_bots: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterBots')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludedChat = chatId => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludeMuted = () => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, exclude_muted: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludeRead = () => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, exclude_read: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludeArchived = () => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, exclude_archived: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludedChat = chatId => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleOpenFilterChats = async mode => {\r\n        const result = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListMain' },\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: 1000\r\n        });\r\n\r\n        this.setState({\r\n            openFilterChats: true,\r\n            mode,\r\n            chats: result.chat_ids,\r\n            limit: CHAT_SLICE_LIMIT\r\n        })\r\n    };\r\n\r\n    setDefaultFilterTitle() {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (!title) {\r\n            const {\r\n                include_contacts,\r\n                include_non_contacts,\r\n                include_bots,\r\n                include_groups,\r\n                include_channels,\r\n                included_chat_ids\r\n            } = editFilter;\r\n\r\n            const {\r\n                exclude_muted,\r\n                exclude_read,\r\n                exclude_archived,\r\n                excluded_chat_ids\r\n            } = editFilter;\r\n\r\n            if (!included_chat_ids.length) {\r\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterContacts')\r\n                    });\r\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterNonContacts')\r\n                    });\r\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('ChatHints')\r\n                    });\r\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterBots')\r\n                    });\r\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterGroups')\r\n                    });\r\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterChannels')\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleCloseFilterChats = () => {\r\n\r\n        this.setDefaultFilterTitle();\r\n\r\n        this.setState({\r\n            openFilterChats: false,\r\n            mode: null\r\n        })\r\n    };\r\n\r\n    handleChange = (type, value) => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        let newEditFilter = null;\r\n        switch (type) {\r\n            case 'include_contacts': {\r\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\r\n                break;\r\n            }\r\n            case 'include_non_contacts': {\r\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\r\n                break;\r\n            }\r\n            case 'include_bots': {\r\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\r\n                break;\r\n            }\r\n            case 'include_groups': {\r\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\r\n                break;\r\n            }\r\n            case 'include_channels': {\r\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\r\n                break;\r\n            }\r\n            case 'included_chat_ids': {\r\n                let included, excluded;\r\n                if (editFilter.included_chat_ids.includes(value)) {\r\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\r\n                    excluded = editFilter.excluded_chat_ids;\r\n                } else {\r\n                    included = [ ...editFilter.included_chat_ids, value ];\r\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\r\n                }\r\n\r\n                newEditFilter = {\r\n                    ...editFilter,\r\n                    included_chat_ids: included,\r\n                    excluded_chat_ids: excluded\r\n                };\r\n                break;\r\n            }\r\n            case 'exclude_muted': {\r\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\r\n                break;\r\n            }\r\n            case 'exclude_read': {\r\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\r\n                break;\r\n            }\r\n            case 'exclude_archived': {\r\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\r\n                break;\r\n            }\r\n            case 'excluded_chat_ids': {\r\n                let included, excluded;\r\n                if (editFilter.excluded_chat_ids.includes(value)) {\r\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\r\n                    included = editFilter.included_chat_ids;\r\n                } else {\r\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\r\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\r\n                }\r\n\r\n                newEditFilter = {\r\n                    ...editFilter,\r\n                    included_chat_ids: included,\r\n                    excluded_chat_ids: excluded\r\n                };\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        // console.log('[f] onChange', type, value, newEditFilter);\r\n        if (!newEditFilter) return;\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleTitleChange = () => {\r\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\r\n\r\n        this.setState({\r\n            title\r\n        });\r\n    }\r\n\r\n    handleScroll = event => {\r\n        const scroll = event.target;\r\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\r\n            this.setState({\r\n                limit: this.state.limit + CHAT_SLICE_LIMIT\r\n            })\r\n        }\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, filter, id, onClose } = this.props;\r\n        if (!filter) return null;\r\n\r\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\r\n\r\n        const {\r\n            include_contacts,\r\n            include_non_contacts,\r\n            include_bots,\r\n            include_groups,\r\n            include_channels,\r\n            included_chat_ids\r\n        } = editFilter;\r\n\r\n        const {\r\n            exclude_muted,\r\n            exclude_read,\r\n            exclude_archived,\r\n            excluded_chat_ids\r\n        } = editFilter;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\r\n                    </div>\r\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\r\n                        <DoneIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='filters-create-animation'>\r\n                        { data && (\r\n                            <React.Suspense fallback={null}>\r\n                                <RLottie\r\n                                    ref={this.lottieRef}\r\n                                    options={{\r\n                                        width: 80,\r\n                                        height: 80,\r\n                                        autoplay: true,\r\n                                        loop: false,\r\n                                        fileId: 'createFilter',\r\n                                        stringData: data\r\n                                    }}\r\n                                    onClick={this.handleAnimationClick}\r\n                                />\r\n                            </React.Suspense>\r\n                        )}\r\n                    </div>\r\n\r\n\r\n                    <div className='create-filter-title'>\r\n                        <TextField\r\n                            inputRef={this.titleRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('FilterNameHint')}\r\n                            value={title}\r\n                            error={error}\r\n                            onChange={this.handleTitleChange}\r\n                        />\r\n                    </div>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\r\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\r\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\r\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\r\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\r\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\r\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\r\n                        { included_chat_ids.map(x => (\r\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\r\n                        ))}\r\n                    </div>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\r\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\r\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\r\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\r\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\r\n                        { excluded_chat_ids.map(x => (\r\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\r\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nCreateFilter.propTypes = {\r\n    filter: PropTypes.object,\r\n    id: PropTypes.number,\r\n    onDone: PropTypes.func,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar,\r\n);\r\n\r\nexport default enhance(CreateFilter);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { getChatOrder } from './Chat';\r\n\r\nexport function isFilterValid(filter) {\r\n    if (!filter) return false;\r\n\r\n    const {\r\n        include_contacts,\r\n        include_non_contacts,\r\n        include_bots,\r\n        include_groups,\r\n        include_channels,\r\n        included_chat_ids,\r\n        title\r\n    } = filter;\r\n\r\n    if (!title) return false;\r\n\r\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\r\n}\r\n\r\nexport function getFilterSubtitle(t, filterId, chats) {\r\n    if (!chats) return ' ';\r\n\r\n    let count = 0;\r\n    for (let i = 0; i < chats.chat_ids.length; i++) {\r\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\r\n            count++;\r\n        }\r\n    }\r\n\r\n    if (!count) {\r\n        return t('FilterNoChats');\r\n    }\r\n\r\n    return count === 1 ? '1 chat' : `${count} chats`;\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport { getFilterSubtitle } from '../../Utils/Filter';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Filter.css';\r\n\r\nclass Filter extends React.Component {\r\n\r\n    state = {\r\n        dialog: false,\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleCloseContextMenu();\r\n        this.handleOpenDialog();\r\n    };\r\n\r\n    handleOpenDialog = () => {\r\n        this.setState({\r\n            dialog: true\r\n        })\r\n    };\r\n\r\n    handleCloseDialog = () => {\r\n        this.setState({\r\n            dialog: false\r\n        })\r\n    };\r\n\r\n    handleDeleteCancel = () => {\r\n        this.handleCloseDialog();\r\n    };\r\n\r\n    handleDeleteConfirm = () => {\r\n        const { info } = this.props;\r\n        if (!info) return;\r\n\r\n        this.handleCloseDialog();\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteChatFilter',\r\n            chat_filter_id: info.id\r\n        });\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({\r\n            contextMenu: true,\r\n            left: event.clientX,\r\n            top: event.clientY\r\n        });\r\n    };\r\n\r\n    handleCloseContextMenu = () => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, info, onEdit, chats } = this.props;\r\n        if (!info) return null;\r\n\r\n        const { dialog, contextMenu, top, left } = this.state;\r\n\r\n        const { title } = info;\r\n        const subtitle = getFilterSubtitle(t, info.id, chats);\r\n\r\n        return (\r\n            <>\r\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\r\n                    <ListItemText\r\n                        className='settings-list-item-text2'\r\n                        primary={title}\r\n                        secondary={subtitle}\r\n                    />\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={dialog}\r\n                    onClose={this.handleCancel}\r\n                    aria-labelledby='delete-dialog-title'>\r\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            {t('FilterDeleteAlert')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilter.propTypes = {\r\n    info: PropTypes.object.isRequired,\r\n    chats: PropTypes.object,\r\n    onEdit: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Filter);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './RecommendedFilter.css';\r\n\r\nclass RecommendedFilter extends React.Component {\r\n\r\n    handleAdd = () => {\r\n        const { filter: recommendedFilter } = this.props;\r\n        if (!recommendedFilter) return;\r\n\r\n        const { filter } = recommendedFilter;\r\n\r\n        TdLibController.send({\r\n            '@type': 'createChatFilter',\r\n            filter\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, filter: recommendedFilter } = this.props;\r\n        if (!recommendedFilter) return null;\r\n\r\n        const { filter, description } = recommendedFilter;\r\n\r\n        return (\r\n            <ListItem\r\n                className='settings-list-item2'\r\n                role={undefined}\r\n                button>\r\n                <ListItemText\r\n                    className='settings-list-item-text'\r\n                    primary={filter.title}\r\n                    secondary={description}\r\n                />\r\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\r\n                    {t('Add')}\r\n                </Button>\r\n            </ListItem>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nRecommendedFilter.propTypes = {\r\n    filter: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(RecommendedFilter);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '../../../Assets/Icons/Add';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport CreateFilter from './CreateFilter';\r\nimport Filter from '../../Tile/Filter';\r\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SidebarPage from '../SidebarPage';\r\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\r\nimport FilterStore from '../../../Stores/FilterStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Filters.css';\r\n\r\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\r\n\r\nclass Filters extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.lottieRef = React.createRef();\r\n\r\n        this.state = {\r\n            openFilter: false,\r\n            filterId: -1,\r\n            filter: null,\r\n            editFilter: null,\r\n            recommendedFilters: null,\r\n            chats: null,\r\n            filtersMap: new Map()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAnimationData();\r\n        this.loadData();\r\n\r\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    onUpdateChatFilters = update => {\r\n        setTimeout(() => {\r\n            this.loadData();\r\n        }, 100);\r\n    };\r\n\r\n    async loadData() {\r\n        const chats = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListMain' },\r\n            offset_chat_id: 0,\r\n            offset_order: '9223372036854775807',\r\n            limit: 1000\r\n        });\r\n\r\n        const { filters: filterInfo } = FilterStore;\r\n        const promises = [];\r\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\r\n            promises.push(TdLibController.send({\r\n                '@type': 'getChatFilter',\r\n                chat_filter_id: filterInfo[i].id\r\n            }).catch(e => null));\r\n        }\r\n        const filters = await Promise.all(promises);\r\n\r\n        const filtersMap = new Map();\r\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\r\n            filtersMap.set(filterInfo[i].id, filters[i]);\r\n        }\r\n\r\n        const recommendedFilters = await TdLibController.send({\r\n            '@type': 'getRecommendedChatFilters'\r\n        });\r\n\r\n        this.setState({\r\n            chats,\r\n            filtersMap,\r\n            recommendedFilters\r\n        });\r\n    }\r\n\r\n    loadAnimationData = async () => {\r\n        const { closeData } = this.state;\r\n        if (closeData) return;\r\n\r\n        try {\r\n            const requests = [\r\n                fetch('data/Folders_1.json'),\r\n                fetch('data/Folders_2.json'),\r\n            ];\r\n\r\n            const results = await Promise.all(requests);\r\n\r\n            const [data] = await Promise.all(results.map(x => x.text()));\r\n\r\n            this.setState({ data });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    handleCreateFilter = () => {\r\n        const { t } = this.props;\r\n        const { filters } = FilterStore;\r\n        if (filters.length >= FILTER_COUNT_MAX) {\r\n            this.handleScheduledAction(t('FilterCreateError'));\r\n            return;\r\n        }\r\n\r\n        const filter = {\r\n            '@type': 'chatFiler',\r\n            title: '',\r\n            icon_name: '',\r\n            pinned_chat_ids: [],\r\n            included_chat_ids: [],\r\n            excluded_chat_ids: [],\r\n            exclude_muted: false,\r\n            exclude_read: false,\r\n            exclude_archived: false,\r\n            include_contacts: false,\r\n            include_non_contacts: false,\r\n            include_bots: false,\r\n            include_groups: false,\r\n            include_channels: false\r\n        };\r\n\r\n        this.setState({\r\n            openFilter: true,\r\n            filterId: -1,\r\n            filter\r\n        });\r\n    };\r\n\r\n    handleCloseFilter = () => {\r\n        this.setState({\r\n            openFilter: false,\r\n            filterId: -1,\r\n            filter: null\r\n        })\r\n    };\r\n\r\n    handleEditFilter = async info => {\r\n        const filter = await TdLibController.send({\r\n            '@type': 'getChatFilter',\r\n            chat_filter_id: info.id\r\n        });\r\n\r\n        if (!filter) return;\r\n\r\n        this.setState({\r\n            openFilter: true,\r\n            filterId: info.id,\r\n            filter\r\n        })\r\n    };\r\n\r\n    handleDone = filter => {\r\n        const { filterId } = this.state;\r\n\r\n        this.handleCloseFilter();\r\n        if (!filter) return;\r\n\r\n        if (filterId !== -1) {\r\n            TdLibController.send({\r\n                '@type': 'editChatFilter',\r\n                chat_filter_id: filterId,\r\n                filter\r\n            });\r\n        } else {\r\n            TdLibController.send({\r\n                '@type': 'createChatFilter',\r\n                filter\r\n            });\r\n        }\r\n    };\r\n\r\n    handleAnimationClick = () => {\r\n        const lottie = this.lottieRef.current;\r\n        if (!lottie) return;\r\n        if (!lottie.isPaused) return;\r\n\r\n        lottie.play();\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\r\n        const { filters } = FilterStore;\r\n\r\n        const hasFilters = filters && filters.length > 0;\r\n        const hasRecommendedFilters = recommendedFilters\r\n            && recommendedFilters.chat_filters.length > 0\r\n            && (!filters || filters.length < FILTER_COUNT_MAX);\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section filters-create'>\r\n                        <div className='filters-create-animation'>\r\n                            { data && (\r\n                                <React.Suspense fallback={null}>\r\n                                    <RLottie\r\n                                        ref={this.lottieRef}\r\n                                        options={{\r\n                                            width: 80,\r\n                                            height: 80,\r\n                                            autoplay: true,\r\n                                            loop: false,\r\n                                            fileId: 'filters',\r\n                                            stringData: data\r\n                                        }}\r\n                                        onClick={this.handleAnimationClick}\r\n                                    />\r\n                                </React.Suspense>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\r\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\r\n                            {t('CreateNewFilter')}\r\n                        </Button>\r\n                    </div>\r\n                    { hasFilters && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' />\r\n                            <div className='sidebar-page-section'>\r\n                                <SectionHeader>{t('Filters')}</SectionHeader>\r\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                    { hasRecommendedFilters && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' />\r\n                            <div className='sidebar-page-section'>\r\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\r\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\r\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilters.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar,\r\n);\r\n\r\nexport default enhance(Filters);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\r\n    'Colorize'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getSrc } from '../../Utils/File';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './Wallpaper.css';\r\nimport FileProgress from '../Viewer/FileProgress';\r\n\r\nclass Wallpaper extends React.Component {\r\n    state = {\r\n        loaded: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    onClientUpdateDocumentThumbnailBlob = update => {\r\n        const { wallpaper } = this.props;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail } = document;\r\n        if (!thumbnail) return;\r\n\r\n        const { file } = thumbnail;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleLoad = () => {\r\n        this.setState({ loaded: true });\r\n    };\r\n\r\n    handleClick = () => {\r\n        const { wallpaper, onClick } = this.props;\r\n\r\n        if (onClick) {\r\n            onClick(wallpaper);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { wallpaper, isSelected } = this.props;\r\n        const { loaded  } = this.state;\r\n\r\n        const { document } = wallpaper;\r\n        const { minithumbnail, thumbnail } = document;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\r\n        const tileLoaded = thumbSrc && loaded;\r\n        const src = thumbSrc || miniSrc;\r\n\r\n        return (\r\n            <div className='shared-photo' onClick={this.handleClick}>\r\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\r\n                    {src !== thumbSrc && (\r\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\r\n                    )}\r\n                </div>\r\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\r\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nWallpaper.propTypes = {\r\n    wallpaper: PropTypes.object.isRequired,\r\n    isSelected: PropTypes.bool\r\n};\r\n\r\nexport default Wallpaper;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport Wallpaper from '../../Tile/Wallpaper';\r\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './ChatBackground.css';\r\n\r\nclass ChatBackground extends React.Component {\r\n    state = {\r\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent() {\r\n        const { backgrounds } = this.props;\r\n        if (!backgrounds) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadBackgroundsContent(store, backgrounds.backgrounds);\r\n    }\r\n\r\n    handleClick = wallpaper => {\r\n        this.setState({\r\n            selectedId: wallpaper.id\r\n        });\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail, document: file } = document;\r\n        if (!file) return;\r\n\r\n        const src = getSrc(file);\r\n        if (!src) {\r\n            const store = FileStore.getStore();\r\n            loadBackgroundContent(store, wallpaper, true);\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateChatBackground',\r\n            wallpaper\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, backgrounds, onClose } = this.props;\r\n        const { selectedId } = this.state;\r\n\r\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\r\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nChatBackground.propTypes = {\r\n    backgrounds: PropTypes.object\r\n};\r\n\r\nexport default withTranslation()(ChatBackground);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport withTheme from '@material-ui/core/styles/withTheme';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport red from '@material-ui/core/colors/red';\r\nimport orange from '@material-ui/core/colors/orange';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport green from '@material-ui/core/colors/green';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport deepPurple from '@material-ui/core/colors/deepPurple';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport './ThemePicker.css';\r\n\r\nclass ThemePicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let { type, primary } = { type: 'light', primary: { main: '#50A2E9' } };\r\n        try {\r\n            const themeOptions = JSON.parse(localStorage.getItem('themeOptions'));\r\n            type = themeOptions.type;\r\n            primary = themeOptions.primary;\r\n        } catch {}\r\n\r\n        this.state = {\r\n            open: false,\r\n            type,\r\n            color: this.getColorString(this.props.theme.palette.primary.main)\r\n        };\r\n    }\r\n\r\n    handleChange = event => {\r\n        const type = event.target.value;\r\n\r\n        this.setState({ type });\r\n\r\n        ApplicationStore.emit('clientUpdateThemeChanging', {\r\n            type: event.target.value,\r\n            primary: this.getColor(this.state.color)\r\n        });\r\n    };\r\n\r\n    handleAccentChange = event => {\r\n        this.setState({ color: event.target.value });\r\n\r\n        ApplicationStore.emit('clientUpdateThemeChanging', {\r\n            type: this.state.type,\r\n            primary: this.getColor(event.target.value)\r\n        });\r\n    };\r\n\r\n    getColorString = value => {\r\n        switch (value) {\r\n            case red['500']:\r\n                return 'red';\r\n            case orange['500']:\r\n                return 'orange';\r\n            case amber['500']:\r\n                return 'amber';\r\n            case green['500']:\r\n                return 'green';\r\n            case '#50A2E9':\r\n                return 'blue';\r\n            case indigo['500']:\r\n                return 'indigo';\r\n            case deepPurple['500']:\r\n                return 'deepPurple';\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    getColor = value => {\r\n        switch (value) {\r\n            case 'red':\r\n                return red;\r\n            case 'orange':\r\n                return orange;\r\n            case 'amber':\r\n                return amber;\r\n            case 'green':\r\n                return green;\r\n            case 'blue':\r\n                return { main: '#50A2E9' };\r\n            case 'indigo':\r\n                return indigo;\r\n            case 'deepPurple':\r\n                return deepPurple;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    open = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { type, color, open } = this.state;\r\n\r\n        return (\r\n            <Dialog\r\n                disableEnforceFocus={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={open}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='alert-dialog-title'\r\n                aria-describedby='alert-dialog-description'>\r\n                <DialogTitle id='alert-dialog-title'>{t('Theme')}</DialogTitle>\r\n                <DialogContent>\r\n                    <FormControl component='fieldset' className='theme-picker-form'>\r\n                        <FormLabel focused component='legend'>\r\n                            {t('Theme')}\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                            aria-label='theme'\r\n                            name='theme1'\r\n                            className='theme-picker-group'\r\n                            value={type}\r\n                            onChange={this.handleChange}>\r\n                            <FormControlLabel value='default' control={<Radio color='primary' />} label='System Default' />\r\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\r\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <FormControl component='fieldset' className='theme-picker-form'>\r\n                        <FormLabel focused component='legend'>\r\n                            {t('Accent')}\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                            aria-label='accent'\r\n                            name='accent1'\r\n                            className='theme-picker-group'\r\n                            value={color}\r\n                            onChange={this.handleAccentChange}>\r\n                            <FormControlLabel\r\n                                value='red'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-red'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Red'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='orange'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-orange'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Orange'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='amber'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-amber'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Amber'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='green'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-green'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Green'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='blue'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-blue'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Blue'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='indigo'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-indigo'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Indigo'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='deepPurple'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-deep-purple'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Deep Purple'\r\n                            />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nThemePicker.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTheme,\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ThemePicker);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\r\nimport ChatBackground from './ChatBackground';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SidebarPage from '../SidebarPage';\r\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\r\nimport ThemePicker from '../ThemePicker';\r\nimport { isMacOS } from '../../../Utils/Common';\r\nimport { SEND_BY_CTRL_ENTER_KEY } from '../../../Constants';\r\nimport OptionStore from '../../../Stores/OptionStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './General.css';\r\n\r\nclass General extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const sendByCtrlEnterOption = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\r\n\r\n        this.state = {\r\n            backgrounds: null,\r\n            openChatBackground: false,\r\n            sendByCtrlEnter: Boolean(sendByCtrlEnterOption && sendByCtrlEnterOption.value)\r\n        };\r\n\r\n        this.themePickerRef = React.createRef();\r\n    }\r\n\r\n    handleAppearance = () => {\r\n        this.themePickerRef.current.open();\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent = () => {\r\n        TdLibController.send({\r\n            '@type': 'getBackgrounds',\r\n            for_dark_theme: false\r\n        }).then(backgrounds => this.setState({ backgrounds }));\r\n    };\r\n\r\n    openChatBackground = () => {\r\n        if (!this.state.backgrounds) return;\r\n\r\n        this.setState({\r\n            openChatBackground: true\r\n        });\r\n    };\r\n\r\n    closeChatBackground = () => {\r\n        this.setState({\r\n            openChatBackground: false\r\n        });\r\n    };\r\n\r\n    async handleSetOption(command) {\r\n        let value = false;\r\n        switch (command) {\r\n            case 'sendByCtrlEnter': {\r\n                value = true;\r\n                break;\r\n            }\r\n            case 'sendByEnter': {\r\n                value = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        await TdLibController.send({\r\n            '@type': 'setOption',\r\n            name: SEND_BY_CTRL_ENTER_KEY,\r\n            value: { '@type': 'optionValueBoolean', value }\r\n        });\r\n\r\n        this.setState({\r\n            sendByCtrlEnter: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { backgrounds, openChatBackground, sendByCtrlEnter } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\r\n                        {/*    <ListItemIcon>*/}\r\n                        {/*        <SharedMediaIcon />*/}\r\n                        {/*    </ListItemIcon>*/}\r\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\r\n                        {/*</ListItem>*/}\r\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\r\n                            <ListItemIcon>\r\n                                <ColorizeIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Theme')} />\r\n                        </ListItem>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('Keyboard')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByEnter')}>\r\n                            <Radio\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={!sendByCtrlEnter}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('SendByEnter')}\r\n                                secondary={t('NewLineByShiftEnter')}\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByCtrlEnter')}>\r\n                            <Radio\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={sendByCtrlEnter}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={isMacOS() ? t('SendByCommandEnter') : t('SendByControlEnter')}\r\n                                secondary={t('NewLineByEnter')}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\r\n                    <ChatBackground backgrounds={backgrounds} />\r\n                </SidebarPage>\r\n                <ThemePicker ref={this.themePickerRef} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nGeneral.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(General);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Language.css';\r\n\r\nclass Language extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { i18n } = props;\r\n        const language = i18n ? i18n.language : null;\r\n\r\n        this.state = {\r\n            language: language || 'en'\r\n        };\r\n    }\r\n\r\n    handleChange = language => {\r\n        this.setState({ language });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { language } = this.state;\r\n        const info = LocalizationStore.info || { language_packs: [] };\r\n\r\n        const languages = info.language_packs.map(x => (\r\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\r\n                <Radio\r\n                    color='primary'\r\n                    className='settings-item-control'\r\n                    checked={language === x.id}\r\n                    tabIndex={-1}\r\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                />\r\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Language')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>{languages}</div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nLanguage.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Language);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport SectionHeader from '../SectionHeader';\r\nimport NotificationStore from '../../../Stores/NotificationStore';\r\nimport OptionStore from '../../../Stores/OptionStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Notifications.css';\r\n\r\nclass Notifications extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\r\n\r\n        this.state = {\r\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\r\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\r\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\r\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\r\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\r\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\r\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\r\n        this.setContactJoinedOption(contactJoined);\r\n    }\r\n\r\n    setContactJoinedOption() {\r\n        const { contactJoined } = this.state;\r\n\r\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\r\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\r\n        if (oldContactJoined === contactJoined) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setOption',\r\n            name: 'disable_contact_registered_notifications',\r\n            value: {\r\n                '@type': 'optionValueBoolean',\r\n                value: !contactJoined\r\n            }\r\n        });\r\n    }\r\n\r\n    setScopeNotificationSettings(scope, settings) {\r\n        if (!scope) return;\r\n        if (!settings) return;\r\n        const oldSettings = NotificationStore.settings.get(scope);\r\n        if (!oldSettings) return;\r\n\r\n        const { mute_for, show_preview } = settings;\r\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\r\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setScopeNotificationSettings',\r\n            scope: { '@type': scope },\r\n            notification_settings: settings\r\n        });\r\n    }\r\n\r\n    handleMuteFor = property => {\r\n        const settings = this.state[property];\r\n        if (!settings) return;\r\n\r\n        const { mute_for } = settings;\r\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\r\n\r\n        this.setState({ [property]: newSettings });\r\n    };\r\n\r\n    handleShowPreview = property => {\r\n        const settings = this.state[property];\r\n        if (!settings) return;\r\n\r\n        const { show_preview } = settings;\r\n        const newSettings = { ...settings, show_preview: !show_preview };\r\n\r\n        this.setState({ [property]: newSettings });\r\n    };\r\n\r\n    handleContactJoined = () => {\r\n        this.setState({ contactJoined: !this.state.contactJoined });\r\n    };\r\n\r\n    isEnabled(settings) {\r\n        if (!settings) return false;\r\n\r\n        const { mute_for } = settings;\r\n\r\n        return mute_for === 0;\r\n    }\r\n\r\n    showPreview(settings) {\r\n        if (!settings) return false;\r\n\r\n        const { show_preview } = settings;\r\n\r\n        return show_preview;\r\n    }\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Notifications')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(privateChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForPrivateChats')}\r\n                                secondary={\r\n                                    this.isEnabled(privateChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(privateChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(groupChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForGroups')}\r\n                                secondary={\r\n                                    this.isEnabled(groupChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(groupChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(channelChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForChannels')}\r\n                                secondary={\r\n                                    this.isEnabled(channelChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(channelChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\r\n                        <div className='settings-item' onClick={this.handleContactJoined}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={contactJoined}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('ContactJoined')}\r\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNotifications.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Notifications);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\r\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\r\n    </g>,\r\n    'Stop'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport StopIcon from '../../Assets/Icons/Stop';\r\nimport { getMessageDate } from '../../Utils/Chat';\r\nimport './Session.css';\r\n\r\nclass Session extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { session } = this.props;\r\n        if (!session) return;\r\n        if (session.is_current) return;\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    handleTerminate = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { onTerminate, session } = this.props;\r\n\r\n        onTerminate(session);\r\n    };\r\n\r\n    render() {\r\n        const { session, t } = this.props;\r\n        if (!session) return null;\r\n\r\n        const { left, top, contextMenu } = this.state;\r\n        const {\r\n            is_current,\r\n            application_name,\r\n            application_version,\r\n            device_model,\r\n            platform,\r\n            system_version,\r\n            ip,\r\n            region,\r\n            country,\r\n            last_active_date\r\n        } = session;\r\n        const showDate = !is_current;\r\n\r\n        return (\r\n            <>\r\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\r\n                    <div className='session'>\r\n                        <div className='session-title'>\r\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\r\n                            {showDate && (\r\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\r\n                            )}\r\n                        </div>\r\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\r\n                        <div className='session-subtitle2'>\r\n                            {`${ip} - `}\r\n                            {region && `${region}, `}\r\n                            {country && `${country}`}\r\n                        </div>\r\n                    </div>\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleTerminate}>\r\n                            <ListItemIcon>\r\n                                <StopIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Terminate')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSession.propTypes = {\r\n    session: PropTypes.object.isRequired,\r\n    onTerminate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Session);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport Session from '../../Tile/Session';\r\nimport StopIcon from '../../../Assets/Icons/Stop';\r\nimport SectionHeader from '../SectionHeader';\r\nimport { modalManager } from '../../../Utils/Modal';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './ActiveSessions.css';\r\n\r\nclass ActiveSessions extends React.Component {\r\n    state = {\r\n        open: false,\r\n        openAll: false,\r\n        session: null\r\n    };\r\n\r\n    handleTerminate = session => {\r\n        this.setState({\r\n            open: true,\r\n            session\r\n        });\r\n    };\r\n\r\n    handleTerminateAllOther = () => {\r\n        this.setState({\r\n            openAll: true\r\n        });\r\n    };\r\n\r\n    handleCloseConfirmation = () => {\r\n        this.setState({\r\n            open: false,\r\n            session: null\r\n        });\r\n    };\r\n\r\n    handleDoneConfirmation = async () => {\r\n        const { sessions, t } = this.props;\r\n        const { session } = this.state;\r\n        if (!session) return;\r\n\r\n        this.setState({\r\n            open: false,\r\n            session: null\r\n        });\r\n\r\n        await TdLibController.send({\r\n            '@type': 'terminateSession',\r\n            session_id: session.id\r\n        });\r\n\r\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleCloseAllConfirmation = () => {\r\n        this.setState({\r\n            openAll: false\r\n        });\r\n    };\r\n\r\n    handleDoneAllConfirmation = async () => {\r\n        const { sessions } = this.props;\r\n\r\n        this.setState({\r\n            openAll: false\r\n        });\r\n\r\n        await TdLibController.send({\r\n            '@type': 'terminateAllOtherSessions'\r\n        });\r\n\r\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { t, sessions, onClose } = this.props;\r\n        const { open, openAll } = this.state;\r\n\r\n        const current = sessions.sessions.find(x => x.is_current);\r\n        const other = sessions.sessions.filter(x => !x.is_current);\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    {Boolean(current) && (\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\r\n                            <Session session={current} onTerminate={this.handleTerminate} />\r\n                            {other.length > 0 && (\r\n                                <ListItem\r\n                                    className='settings-list-item'\r\n                                    button\r\n                                    disableRipple\r\n                                    onClick={this.handleTerminateAllOther}>\r\n                                    <ListItemIcon>\r\n                                        <StopIcon color='secondary' />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primaryTypographyProps={{ color: 'secondary' }}\r\n                                        primary={t('TerminateAllSessions')}\r\n                                    />\r\n                                </ListItem>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                    {other.length > 0 && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' />\r\n                            <div className='sidebar-page-section'>\r\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\r\n                                {other.map(x => (\r\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\r\n                                ))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={open}\r\n                    onClose={this.handleCloseConfirmation}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('TerminateSessionText')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={openAll}\r\n                    onClose={this.handleCloseAllConfirmation}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('AreYouSureSessions')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nActiveSessions.propTypes = {\r\n    sessions: PropTypes.object.isRequired,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ActiveSessions);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\r\n    'Unblock'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation, withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport SectionHeader from '../SectionHeader';\r\nimport User from '../../Tile/User';\r\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\r\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\r\nimport { openUser } from '../../../Actions/Client';\r\nimport { unblockSender } from '../../../Actions/Message';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './BlockedUsers.css';\r\n\r\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\r\n    const [contextMenu, setContextMenu] = React.useState(false);\r\n    const [top, setTop] = React.useState(0);\r\n    const [left, setLeft] = React.useState(0);\r\n    const { t } = useTranslation();\r\n\r\n    const handleContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        if (contextMenu) {\r\n            setContextMenu(false);\r\n        } else {\r\n            const { clientX, clientY } = event;\r\n\r\n            setContextMenu(true);\r\n            setLeft(clientX);\r\n            setTop(clientY);\r\n        }\r\n    };\r\n\r\n    const handleCloseContextMenu = () => {\r\n        setContextMenu(false);\r\n        setLeft(0);\r\n        setTop(0);\r\n    };\r\n\r\n    const handleClick = () => {\r\n        onClick(userId);\r\n    };\r\n\r\n    const handleUnblock = () => {\r\n        handleCloseContextMenu();\r\n        onUnblock(userId);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n            <Popover\r\n                open={contextMenu}\r\n                onClose={handleCloseContextMenu}\r\n                anchorReference='anchorPosition'\r\n                anchorPosition={{ top, left }}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right'\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left'\r\n                }}\r\n                onMouseDown={e => e.stopPropagation()}>\r\n                <MenuList onClick={e => e.stopPropagation()}>\r\n                    <MenuItem onClick={handleUnblock}>\r\n                        <ListItemIcon>\r\n                            <UnblockIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Unblock')} />\r\n                    </MenuItem>\r\n                </MenuList>\r\n            </Popover>\r\n        </>\r\n    );\r\n});\r\n\r\nBlockedUser.propTypes = {\r\n    userId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    onUnblock: PropTypes.func.isRequired\r\n};\r\n\r\nclass BlockedUsers extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent() {\r\n        const { users } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\r\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\r\n    }\r\n\r\n    handleUnblockUser = async userId => {\r\n        unblockSender({ '@type': 'messageSenderUser', user_id: userId });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, users, t } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        { users.senders.length > 0 ? (\r\n                            <>\r\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\r\n                                {\r\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\r\n                                }\r\n                            </>\r\n                        ) : (\r\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nBlockedUsers.propTypes = {\r\n    users: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(BlockedUsers);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\r\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\r\n    </g>,\r\n    'Device'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\r\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\r\n    </g>,\r\n    'RemoveMember'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport SectionHeader from '../SectionHeader';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './PrivacyCalls.css';\r\n\r\nclass PrivacyCalls extends React.Component {\r\n    state = {\r\n        prevAllowCalls: null,\r\n        prevAllowP2PCalls: null\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { allowCalls, allowP2PCalls } = props;\r\n        const { prevAllowCalls, prevAllowP2PCalls } = state;\r\n        if (allowCalls !== prevAllowCalls || allowP2PCalls !== prevAllowP2PCalls) {\r\n            const allowCallsValue = allowCalls.rules.find(x =>\r\n                x['@type'] === 'userPrivacySettingRuleAllowAll' ||\r\n                x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\r\n                x['@type'] === 'userPrivacySettingRuleRestrictAll');\r\n\r\n            const allowP2PCallsValue = allowP2PCalls.rules.find(x =>\r\n                x['@type'] === 'userPrivacySettingRuleAllowAll' ||\r\n                x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\r\n                x['@type'] === 'userPrivacySettingRuleRestrictAll');\r\n\r\n            return {\r\n                prevAllowCalls: allowCalls,\r\n                prevAllowP2PCalls: allowP2PCalls,\r\n                allowCallsValue: allowCallsValue ? allowCallsValue['@type'] : 'userPrivacySettingRuleRestrictAll',\r\n                allowP2PCallsValue: allowP2PCallsValue ? allowP2PCallsValue['@type'] : 'userPrivacySettingRuleRestrictAll'\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setSettings();\r\n    }\r\n\r\n    setSettings() {\r\n        const { allowCalls, allowP2PCalls } = this.props;\r\n        const { allowCallsValue, allowP2PCallsValue } = this.state;\r\n\r\n        const prevAllowCallsValue = allowCalls.rules.find(x =>\r\n            x['@type'] === 'userPrivacySettingRuleAllowAll' ||\r\n            x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\r\n            x['@type'] === 'userPrivacySettingRuleRestrictAll');\r\n        if (!prevAllowCallsValue || allowCallsValue !== prevAllowCallsValue['@type']) {\r\n            let added = false;\r\n            const rules = {\r\n                '@type': 'userPrivacySettingRules',\r\n                rules: allowCalls.rules.map(x => {\r\n                    if (x['@type'] === prevAllowCallsValue['@type']) {\r\n                        added = true;\r\n                        return { '@type': allowCallsValue }\r\n                    } else {\r\n                        return x;\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (!added) {\r\n                rules.rules.push({ '@type': allowCallsValue });\r\n            }\r\n\r\n            TdLibController.send({\r\n                '@type': 'setUserPrivacySettingRules',\r\n                setting: { '@type': 'userPrivacySettingAllowCalls' },\r\n                rules\r\n            });\r\n        }\r\n\r\n        const prevAllowP2PCallsValue = allowP2PCalls.rules.find(x =>\r\n            x['@type'] === 'userPrivacySettingRuleAllowAll' ||\r\n            x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\r\n            x['@type'] === 'userPrivacySettingRuleRestrictAll');\r\n        if (!prevAllowP2PCallsValue || allowP2PCallsValue !== prevAllowP2PCallsValue['@type']) {\r\n            let added = false;\r\n            const rules = {\r\n                '@type': 'userPrivacySettingRules',\r\n                rules: allowP2PCalls.rules.map(x => {\r\n                    if (x['@type'] === prevAllowP2PCallsValue['@type']) {\r\n                        added = true;\r\n                        return { '@type': allowP2PCallsValue }\r\n                    } else {\r\n                        return x;\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (!added) {\r\n                rules.rules.push({ '@type': allowP2PCallsValue });\r\n            }\r\n\r\n            TdLibController.send({\r\n                '@type': 'setUserPrivacySettingRules',\r\n                setting: { '@type': 'userPrivacySettingAllowPeerToPeerCalls' },\r\n                rules\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChangeAllowCalls = event => {\r\n        this.setState({\r\n            allowCallsValue: event.currentTarget.value\r\n        });\r\n    };\r\n\r\n    handleChangeAllowP2PCalls = event => {\r\n        this.setState({\r\n            allowP2PCallsValue: event.currentTarget.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, t } = this.props;\r\n        const { allowCallsValue, allowP2PCallsValue } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Calls')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('WhoCanCallMe')}</SectionHeader>\r\n                        <RadioGroup aria-label='' name='' value={allowCallsValue} onChange={this.handleChangeAllowCalls}>\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowAll' control={<Radio color='primary'/>} label={t('P2PEverybody')} />\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowContacts' control={<Radio color='primary'/>} label={t('P2PContacts')} />\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleRestrictAll' control={<Radio color='primary'/>} label={t('P2PNobody')} />\r\n                        </RadioGroup>\r\n\r\n                        <SectionHeader>{t('PrivacyP2P')}</SectionHeader>\r\n                        <RadioGroup aria-label='' name='' value={allowP2PCallsValue} onChange={this.handleChangeAllowP2PCalls}>\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowAll' control={<Radio color='primary'/>} label={t('P2PEverybody')} />\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowContacts' control={<Radio color='primary'/>} label={t('P2PContacts')} />\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleRestrictAll' control={<Radio color='primary'/>} label={t('P2PNobody')} />\r\n                        </RadioGroup>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nPrivacyCalls.propTypes = {\r\n    allowCalls: PropTypes.object.isRequired,\r\n    allowP2PCalls: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withTranslation()(PrivacyCalls);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\r\nimport ActiveSessions from './ActiveSessions';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport BlockedUsers from './BlockedUsers';\r\nimport DeviceIcon from '../../../Assets/Icons/Device';\r\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\r\nimport SidebarPage from '../SidebarPage';\r\nimport SectionHeader from '../SectionHeader';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './PrivacySecurity.css';\r\nimport PrivacyCalls from './PrivacyCalls';\r\nimport { CallOutlined } from '@material-ui/icons';\r\n\r\nclass PrivacySecurity extends React.Component {\r\n    state = {\r\n        sessions: null,\r\n        openActiveSessions: false,\r\n\r\n        users: null,\r\n        openBlockedUsers: false,\r\n\r\n        allowCalls: null,\r\n        allowP2PCalls: null,\r\n        openCalls: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n    }\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { user_id, user_full_info } = update;\r\n        const { users } = this.state;\r\n        if (!users) return;\r\n\r\n        const { total_count, senders } = users;\r\n        const { is_blocked } = user_full_info;\r\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\r\n        if (is_blocked === prevIsBlocked) return;\r\n\r\n        if (is_blocked) {\r\n            this.setState({\r\n                users: {\r\n                    ...users,\r\n                    total_count: total_count + 1,\r\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({\r\n                users: {\r\n                    ...users,\r\n                    total_count: total_count - 1,\r\n                    senders: senders.filter(x => x.user_id !== user_id)\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        const promises = [];\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getActiveSessions'\r\n        }).catch(() => null));\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getBlockedMessageSenders',\r\n            offset: 0,\r\n            limit: 100\r\n        }).catch(() => null));\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getUserPrivacySettingRules',\r\n            setting: { '@type': 'userPrivacySettingAllowCalls' }\r\n        }).catch(() => null));\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getUserPrivacySettingRules',\r\n            setting: { '@type': 'userPrivacySettingAllowPeerToPeerCalls' }\r\n        }).catch(() => null));\r\n\r\n        const [ sessions, users, allowCalls, allowP2PCalls ] = await Promise.all(promises);\r\n\r\n        this.setState({\r\n            sessions,\r\n            users,\r\n            allowCalls,\r\n            allowP2PCalls\r\n        });\r\n    }\r\n\r\n    openActiveSessions = () => {\r\n        if (!this.state.sessions) return;\r\n\r\n        this.setState({\r\n            openActiveSessions: true\r\n        });\r\n    };\r\n\r\n    closeActiveSessions = () => {\r\n        this.setState({\r\n            openActiveSessions: false\r\n        });\r\n    };\r\n\r\n    openBlockedUsers = () => {\r\n        if (!this.state.users) return;\r\n\r\n        this.setState({\r\n            openBlockedUsers: true\r\n        });\r\n    };\r\n\r\n    closeBlockedUsers = () => {\r\n        this.setState({\r\n            openBlockedUsers: false\r\n        });\r\n    };\r\n\r\n    openCalls = () => {\r\n        const { allowCalls, allowP2PCalls } = this.state;\r\n        if (!allowCalls || !allowP2PCalls) return;\r\n\r\n        this.setState({\r\n            openCalls: true\r\n        });\r\n    };\r\n\r\n    closeCalls = () => {\r\n        this.setState({\r\n            openCalls: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const {\r\n            openBlockedUsers, users,\r\n            openActiveSessions, sessions,\r\n            openCalls, allowCalls, allowP2PCalls\r\n        } = this.state;\r\n\r\n        const sessionsCount =\r\n            sessions && sessions.sessions.length > 0\r\n                ? sessions.sessions.length === 1\r\n                    ? '1 session'\r\n                    : `${sessions.sessions.length} sessions`\r\n                : '1 session';\r\n\r\n        const usersCount =\r\n            users && users.total_count > 0\r\n                ? users.total_count === 1\r\n                    ? '1 user'\r\n                    : `${users.total_count} users`\r\n                : 'no users';\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        <ListItem\r\n                            className='settings-list-item2'\r\n                            role={undefined}\r\n                            button\r\n                            onClick={this.openBlockedUsers}>\r\n                            <ListItemIcon className='settings-list-item-icon'>\r\n                                <RemoveMemberIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                className='settings-list-item-text'\r\n                                primary={t('BlockedUsers')}\r\n                                secondary={usersCount}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            className='settings-list-item2'\r\n                            role={undefined}\r\n                            button\r\n                            onClick={this.openActiveSessions}>\r\n                            <ListItemIcon className='settings-list-item-icon'>\r\n                                <DeviceIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                className='settings-list-item-text'\r\n                                primary={t('SessionsTitle')}\r\n                                secondary={sessionsCount}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            className='settings-list-item2'\r\n                            role={undefined}\r\n                            button\r\n                            onClick={this.openCalls}>\r\n                            <ListItemIcon className='settings-list-item-icon'>\r\n                                <CallOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                className='settings-list-item-text'\r\n                                primary={t('Calls')}\r\n                                secondary={''}\r\n                            />\r\n                        </ListItem>\r\n                    </div>\r\n                    {/*<div className='sidebar-page-section-divider' />*/}\r\n                    {/*<div className='sidebar-page-section'>*/}\r\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\r\n                    {/*            secondary={t('LastSeenContacts')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('LastSeenTitle')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('WhoCanAddMe')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*</div>*/}\r\n                </div>\r\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\r\n                    <BlockedUsers users={users} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\r\n                    <ActiveSessions sessions={sessions} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openCalls} onClose={this.closeCalls}>\r\n                    <PrivacyCalls allowCalls={allowCalls} allowP2PCalls={allowP2PCalls} />\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nPrivacySecurity.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(PrivacySecurity);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Main from './Main';\r\nimport EditProfile from './EditProfile';\r\nimport Filters from './Filters';\r\nimport General from './General';\r\nimport Language from '../Language';\r\nimport Notifications from './Notifications';\r\nimport PrivacySecurity from './PrivacySecurity';\r\nimport SidebarPage from '../SidebarPage';\r\nimport { loadChatContent } from '../../../Utils/File';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Settings.css';\r\n\r\nclass Settings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            openEditProfile: false,\r\n            openGeneral: false,\r\n            openNotifications: false,\r\n            openPrivacySecurity: false,\r\n            openLanguage: false,\r\n            openFilters: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\r\n    }\r\n\r\n    onUpdateChatPhoto = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id, photo } = update;\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (!photo) return;\r\n\r\n        const store = FileStore.get();\r\n        loadChatContent(store, chatId, true);\r\n    };\r\n\r\n    async loadContent() {\r\n        const { chatId } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadChatContent(store, chatId, true);\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getUserFullInfo',\r\n            user_id: UserStore.getMyId()\r\n        });\r\n\r\n        UserStore.setFullInfo(UserStore.getMyId(), result);\r\n    }\r\n\r\n    openEditProfile = () => {\r\n        this.setState({\r\n            openEditProfile: true\r\n        });\r\n    };\r\n\r\n    closeEditProfile = () => {\r\n        this.setState({\r\n            openEditProfile: false\r\n        });\r\n    };\r\n\r\n    openGeneral = () => {\r\n        this.setState({\r\n            openGeneral: true\r\n        });\r\n    };\r\n\r\n    closeGeneral = () => {\r\n        this.setState({\r\n            openGeneral: false\r\n        });\r\n    };\r\n\r\n    openNotifications = () => {\r\n        this.setState({\r\n            openNotifications: true\r\n        });\r\n    };\r\n\r\n    closeNotifications = () => {\r\n        this.setState({\r\n            openNotifications: false\r\n        });\r\n    };\r\n\r\n    openPrivacySecurity = () => {\r\n        this.setState({\r\n            openPrivacySecurity: true\r\n        });\r\n    };\r\n\r\n    closePrivacySecurity = () => {\r\n        this.setState({\r\n            openPrivacySecurity: false\r\n        });\r\n    };\r\n\r\n    openLanguage = () => {\r\n        this.setState({\r\n            openLanguage: true\r\n        });\r\n    };\r\n\r\n    closeLanguage = () => {\r\n        this.setState({\r\n            openLanguage: false\r\n        });\r\n    };\r\n\r\n    openFilters = () => {\r\n        this.setState({\r\n            openFilters: true\r\n        });\r\n    };\r\n\r\n    closeFilters = () => {\r\n        this.setState({\r\n            openFilters: false\r\n        });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSettings',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, popup } = this.props;\r\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Main\r\n                    chatId={chatId}\r\n                    popup={popup}\r\n                    onClose={this.handleCloseSettings}\r\n                    onEditProfile={this.openEditProfile}\r\n                    onGeneral={this.openGeneral}\r\n                    onNotifications={this.openNotifications}\r\n                    onPrivacySecurity={this.openPrivacySecurity}\r\n                    onLanguage={this.openLanguage}\r\n                    onFilters={this.openFilters}\r\n                />\r\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\r\n                    <EditProfile chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\r\n                    <General chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\r\n                    <Notifications chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\r\n                    <PrivacySecurity />\r\n                </SidebarPage>\r\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\r\n                    <Filters />\r\n                </SidebarPage>\r\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\r\n                    <Language />\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSettings.propTypes = {\r\n    chatId: PropTypes.number,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Settings);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport User from '../Tile/User';\r\nimport SearchInput from './Search/SearchInput';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { debounce, throttle } from '../../Utils/Common';\r\nimport { openUser } from '../../Actions/Client';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Contacts.css';\r\n\r\nclass UserListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { userId, style } = this.props;\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { userId, onClick, style } = this.props;\r\n\r\n        return (\r\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nclass Contacts extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n\r\n        this.state = {\r\n            items: null,\r\n            searchItems: null\r\n        };\r\n\r\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\r\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { current } = this.searchInputRef;\r\n        if (current) {\r\n            setTimeout(() => current.focus(), 50);\r\n        }\r\n\r\n        this.loadContent();\r\n    }\r\n\r\n    handleScroll = event => {\r\n        this.handleDebounceScroll();\r\n        this.handleThrottleScroll();\r\n    };\r\n\r\n    handleDebounceScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    handleThrottleScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    loadRenderIdsContent = () => {\r\n        const { items, searchItems } = this.state;\r\n\r\n        const currentItems = searchItems || items;\r\n\r\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\r\n        if (!current) return;\r\n\r\n        const renderIds = current.getListRenderIds();\r\n        if (renderIds.size > 0) {\r\n            const userIds = [];\r\n            [...renderIds.keys()].forEach(key => {\r\n                userIds.push(currentItems.user_ids[key]);\r\n            });\r\n\r\n            const store = FileStore.getStore();\r\n            loadUsersContent(store, userIds);\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        let contacts = CacheStore.contacts;\r\n        if (!contacts) {\r\n            contacts = await TdLibController.send({\r\n                '@type': 'getContacts'\r\n            });\r\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\r\n            CacheStore.contacts = contacts;\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\r\n\r\n        this.setState({\r\n            items: contacts\r\n        });\r\n    }\r\n\r\n    handleOpenUser = userId => {\r\n        openUser(userId, false);\r\n        this.handleClose();\r\n    };\r\n\r\n    renderItem = ({ index, style }, items) => {\r\n        const userId = items.user_ids[index];\r\n\r\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text.trim();\r\n        if (!query) {\r\n            this.setState({\r\n                searchItems: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const searchItems = await TdLibController.send({\r\n            '@type': 'searchContacts',\r\n            query,\r\n            limit: 1000\r\n        });\r\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\r\n            getUserFullName(x).localeCompare(getUserFullName(y))\r\n        );\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\r\n\r\n        this.setState({ searchItems });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateContacts',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { popup } = this.props;\r\n        const { items, searchItems } = this.state;\r\n\r\n        const style = popup ? { minHeight: 800 } : null;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\r\n                </div>\r\n                <div className='contacts-content' style={style}>\r\n                    {items && (\r\n                        <VirtualizedList\r\n                            ref={this.listRef}\r\n                            className='contacts-list'\r\n                            source={items.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, items)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                    {searchItems && (\r\n                        <VirtualizedList\r\n                            ref={this.searchListRef}\r\n                            className='contacts-list contacts-search-list'\r\n                            source={searchItems.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, searchItems)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nContacts.propTypes = {\r\n    popup: PropTypes.bool\r\n};\r\n\r\nexport default Contacts;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport DownloadIcon from '../../Assets/Icons/Download';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './UpdatePanel.css';\r\n\r\nclass UpdatePanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { isSmallWidth } = AppStore;\r\n\r\n        this.state = {\r\n            newContentAvailable: false,\r\n            isSmallWidth\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        this.setState({ isSmallWidth });\r\n    };\r\n\r\n    onClientUpdateNewContentAvailable = () => {\r\n        this.setState({ newContentAvailable: true });\r\n    };\r\n\r\n    handleUpdate = () => {\r\n        if (this.handled) return;\r\n\r\n        this.handled = true;\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 250);\r\n    };\r\n\r\n    render() {\r\n        const { newContentAvailable, isSmallWidth } = this.state;\r\n        const { t } = this.props;\r\n\r\n        if (!newContentAvailable) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\r\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(UpdatePanel);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NextIcon from '../../Assets/Icons/Back';\r\nimport NewChatPhoto from './NewChatPhoto';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './NewGroup.css';\r\n\r\nclass NewChannel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n        this.descriptionRef = React.createRef();\r\n\r\n        this.state = {\r\n            error: false,\r\n            defaultPhoto: null,\r\n            defaultPhotoURL: null,\r\n            defaultPhotoFile: null\r\n        };\r\n    }\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewChannel',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    handleDone = async () => {\r\n        const { error } = this.state;\r\n        const { defaultPhoto, defaultPhotoFile } = this.state;\r\n\r\n        const title = this.titleRef.current.value.trim();\r\n        if (!title) {\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({\r\n                error: false\r\n            });\r\n        }\r\n\r\n        this.handleClose();\r\n\r\n        const description = this.descriptionRef.current.value;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createNewSupergroupChat',\r\n            title,\r\n            description,\r\n            is_channel: true,\r\n            location: null\r\n        });\r\n\r\n        if (defaultPhotoFile || defaultPhoto) {\r\n            const photo = defaultPhotoFile\r\n                ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\r\n                : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\r\n\r\n            TdLibController.send({\r\n                '@type': 'setChatPhoto',\r\n                chat_id: chat.id,\r\n                photo: { '@type': 'inputChatPhotoStatic', photo }\r\n            });\r\n        }\r\n\r\n        openChat(chat.id);\r\n    };\r\n\r\n    handleChoosePhoto = async (blob, blobURL) => {\r\n        this.setState({\r\n            defaultPhoto: blob,\r\n            defaultPhotoURL: blobURL\r\n        });\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'uploadFile',\r\n            file: {\r\n                '@type': 'inputFileBlob',\r\n                name: 'photo.jpg',\r\n                data: blob\r\n            },\r\n            file_type: { '@type': 'fileTypePhoto' },\r\n            priority: THUMBNAIL_PRIORITY\r\n        });\r\n\r\n        this.setState({\r\n            defaultPhotoFile: result\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { popup, t } = this.props;\r\n        const { error } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('NewChannel')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='new-chat-content'>\r\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\r\n                        <div className='new-chat-title'>\r\n                            <TextField\r\n                                inputRef={this.titleRef}\r\n                                error={error}\r\n                                className='new-chat-input'\r\n                                variant='outlined'\r\n                                fullWidth\r\n                                label={t('EnterChannelName')}\r\n                                defaultValue={''}\r\n                            />\r\n                            <TextField\r\n                                inputRef={this.descriptionRef}\r\n                                className='new-chat-input'\r\n                                variant='outlined'\r\n                                fullWidth\r\n                                label={t('DescriptionOptionalPlaceholder')}\r\n                                defaultValue={''}\r\n                            />\r\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\r\n                    <NextIcon/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewChannel.propTypes = {\r\n    popup: PropTypes.bool,\r\n    userIds: PropTypes.array\r\n};\r\n\r\nexport default withTranslation()(NewChannel);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport UserTile from './UserTile';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { getUserShortName } from '../../Utils/User';\r\nimport './UserChip.css';\r\n\r\nclass UserChip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    getOffset() {\r\n        const {\r\n            offsetLeft: left,\r\n            offsetTop: top,\r\n            offsetWidth: width,\r\n            offsetHeight: height\r\n        } = this.divRef.current;\r\n\r\n        return { left, top, width, height }\r\n    }\r\n\r\n    setStyleCSSText(text) {\r\n        const div = this.divRef.current;\r\n        if (!div) return;\r\n\r\n        div.style.cssText = text;\r\n    }\r\n\r\n    render() {\r\n        const { userId, selected, onClick } = this.props;\r\n\r\n        return (\r\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\r\n                <UserTile userId={userId} small={true}/>\r\n                <div className='chip-delete'>\r\n                    <CloseIcon className='chip-delete-icon'/>\r\n                </div>\r\n                <div className='chip-text'>{getUserShortName(userId)}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUserChip.propTypes = {\r\n    userId: PropTypes.number,\r\n    selected: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default UserChip;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport User from '../Tile/User';\r\nimport UserChip from '../Tile/UserChip';\r\nimport SearchInput from './Search/SearchInput';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { debounce, throttle } from '../../Utils/Common';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Contacts.css';\r\nimport { scrollBottom } from '../../Utils/DOM';\r\n\r\nclass UserListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { userId, selected, style } = this.props;\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.selected !== selected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { userId, selected, onClick, style } = this.props;\r\n\r\n        return (\r\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\r\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\r\n                <User userId={userId} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nclass AddParticipants extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n        this.searchInputRef = React.createRef();\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n        this.wrapPanelRef = React.createRef();\r\n        this.itemsRef = new Map();\r\n\r\n        this.state = {\r\n            items: null,\r\n            searchItems: null,\r\n            selectedItems: {\r\n                array: [],\r\n                map: new Map()\r\n            },\r\n            focusedItem: null\r\n        };\r\n\r\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\r\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\r\n    }\r\n\r\n    getUserIds() {\r\n        return this.state.selectedItems.array;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { current } = this.searchInputRef;\r\n        if (current) {\r\n            setTimeout(() => current.focus(), 50);\r\n        }\r\n\r\n        this.loadContent();\r\n    }\r\n\r\n    handleScroll = event => {\r\n        this.handleDebounceScroll();\r\n        this.handleThrottleScroll();\r\n    };\r\n\r\n    handleDebounceScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    handleThrottleScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    loadRenderIdsContent = () => {\r\n        const { items, searchItems } = this.state;\r\n\r\n        const currentItems = searchItems || items;\r\n\r\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\r\n        if (!current) return;\r\n\r\n        const renderIds = current.getListRenderIds();\r\n        if (renderIds.size > 0) {\r\n            const userIds = [];\r\n            [...renderIds.keys()].forEach(key => {\r\n                userIds.push(currentItems.user_ids[key]);\r\n            });\r\n\r\n            const store = FileStore.getStore();\r\n            loadUsersContent(store, userIds);\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        let contacts = CacheStore.contacts;\r\n        if (!contacts) {\r\n            contacts = await TdLibController.send({\r\n                '@type': 'getContacts'\r\n            });\r\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\r\n            CacheStore.contacts = contacts;\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\r\n\r\n        this.setState({\r\n            items: contacts\r\n        });\r\n    }\r\n\r\n    handleOpenUser = userId => {\r\n        const { selectedItems, focusedItem } = this.state;\r\n        const { map, array } = selectedItems;\r\n\r\n        const newMap = new Map(map);\r\n        let newArray;\r\n        let newFocusedItem = null;\r\n        let isDeleting = false;\r\n        if (map.has(userId)) {\r\n            newMap.delete(userId);\r\n            newArray = array.filter(x => x !== userId);\r\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\r\n            isDeleting = true;\r\n        } else {\r\n            newMap.set(userId, userId);\r\n            newArray = array.concat([userId]);\r\n            newFocusedItem = null;\r\n        }\r\n\r\n        const input = this.searchInputRef.current;\r\n        input.focus();\r\n        if (!isDeleting) {\r\n            input.innerText = '';\r\n            this.handleSearch('');\r\n        }\r\n\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n        const prevHeight = wrapPanel.scrollHeight;\r\n        const prevOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const prevMap = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const offset = el.getOffset();\r\n                prevMap.set(key, offset);\r\n            }\r\n        }\r\n\r\n        const prevCSSText = wrapPanel.style.cssText;\r\n        const prevScrollTop = wrapPanel.scrollTop;\r\n        if (isDeleting) {\r\n            wrapPanel.style.cssText = null;\r\n        }\r\n\r\n        this.setState({\r\n            focusedItem: newFocusedItem,\r\n            selectedItems: {\r\n                array: newArray,\r\n                map: newMap\r\n            }\r\n        }, () => {\r\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\r\n            this.animateItems(prevMap);\r\n        });\r\n    };\r\n\r\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n\r\n        const currentHeight = wrapPanel.scrollHeight;\r\n        const currentOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const expanded = currentHeight > prevHeight;\r\n        const collapsed = currentHeight < prevHeight;\r\n\r\n        const maxHeight = 123;\r\n        if (expanded) {\r\n            if (prevHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                    setTimeout(() => {\r\n                        scrollBottom(wrapPanel, 'auto');\r\n                    }, 250);\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                scrollBottom(wrapPanel, 'smooth');\r\n            }\r\n        } else if (collapsed) {\r\n            if (currentHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            }\r\n        } else {\r\n            if (isDeleting) {\r\n                wrapPanel.style.cssText = prevCSSText;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            } else {\r\n                scrollBottom(wrapPanel, 'smooth');\r\n            }\r\n        }\r\n    }\r\n\r\n    animateItems(prevOffsets) {\r\n        const doubleTransform = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const currentOffset = el.getOffset();\r\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\r\n                if (prevOffset) {\r\n                    if (prevOffset.left < currentOffset.left) {\r\n                        doubleTransform.set(el, { prevOffset, currentOffset });\r\n                    }\r\n\r\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\r\n                    el.setStyleCSSText(transform);\r\n                }\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(() => {\r\n            for (let key of this.itemsRef.keys()) {\r\n                const el = this.itemsRef.get(key);\r\n                if (el) {\r\n                    let transition = `transition: transform 0.25s ease`;\r\n                    if (doubleTransform.has(el)) {\r\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\r\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\r\n                                   + 'transition: transform 0.1s ease;'\r\n                    }\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n            }\r\n\r\n            if (!doubleTransform.size) return;\r\n\r\n            setTimeout(() => {\r\n                for (let el of doubleTransform.keys()) {\r\n                    const { currentOffset } = doubleTransform.get(el);\r\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\r\n                                     + 'transition: transform 0s ease;';\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n\r\n                requestAnimationFrame(() => {\r\n                    for (let el of doubleTransform.keys()) {\r\n                        const transition = 'transition: transform 0.15s ease';\r\n\r\n                        el.setStyleCSSText(transition);\r\n                    }\r\n                });\r\n\r\n            }, 101);\r\n        });\r\n    }\r\n\r\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\r\n        const userId = items[index];\r\n        const isSelected = selectedItemsMap.has(userId);\r\n\r\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text.trim();\r\n        if (!query) {\r\n            this.setState({\r\n                searchItems: null,\r\n                publicItems: null,\r\n                focusedItem: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const promises = [];\r\n        promises.push(\r\n            TdLibController.send({\r\n                '@type': 'searchContacts',\r\n                query,\r\n                limit: 20\r\n            })\r\n        );\r\n        promises.push(\r\n            TdLibController.send({\r\n                '@type': 'searchPublicChats',\r\n                query\r\n            })\r\n        );\r\n        const [searchItems, publicChats] = await Promise.all(promises);\r\n\r\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\r\n            getUserFullName(x).localeCompare(getUserFullName(y))\r\n        );\r\n\r\n        const publicItems = { '@type': 'users', user_ids: [] };\r\n        publicChats.chat_ids.reduce((array, chatId) => {\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\r\n                array.push(chat.type.user_id);\r\n            }\r\n            return array;\r\n        }, publicItems.user_ids);\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, searchItems.user_ids);\r\n        loadUsersContent(store, publicItems.user_ids);\r\n\r\n        this.setState({ searchItems, publicItems, focusedItem: null });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewGroup',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    handleSearchClose = event => {\r\n        const { selectedItems, focusedItem } = this.state;\r\n        if (!selectedItems) return;\r\n\r\n        const { map } = selectedItems;\r\n        if (!map.has(focusedItem)) return;\r\n\r\n        event.stopPropagation();\r\n        event.nativeEvent.stopImmediatePropagation();\r\n\r\n        this.setState({\r\n            focusedItem: null\r\n        })\r\n    };\r\n\r\n    handleBackspace = () => {\r\n        const { selectedItems, focusedItem } = this.state;\r\n        if (!selectedItems) return;\r\n\r\n        const { array, map } = selectedItems;\r\n        if (!array) return;\r\n        if (!array.length) return;\r\n\r\n        if (map.has(focusedItem)) {\r\n            this.handleOpenUser(focusedItem);\r\n            return;\r\n        }\r\n\r\n        const lastItem = array[array.length - 1];\r\n        if (!lastItem) return;\r\n\r\n        this.setState({\r\n            focusedItem: lastItem\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { popup, t } = this.props;\r\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\r\n\r\n        const style = popup ? { minHeight: 800 } : null;\r\n\r\n        this.itemsRef.clear();\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\r\n                    </div>\r\n                </div>\r\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\r\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\r\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\r\n                </div>\r\n                <div className='contacts-border'/>\r\n                <div className='contacts-content' style={style}>\r\n                    {items && (\r\n                        <VirtualizedList\r\n                            ref={this.listRef}\r\n                            className='contacts-list'\r\n                            source={items.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                    {searchItems && publicItems && (\r\n                        <VirtualizedList\r\n                            ref={this.searchListRef}\r\n                            className='contacts-list contacts-search-list'\r\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAddParticipants.propTypes = {\r\n    popup: PropTypes.bool,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(AddParticipants);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport SectionHeader from './SectionHeader';\r\nimport User from '../Tile/User';\r\nimport NewChatPhoto from './NewChatPhoto';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './NewGroupParams.css';\r\n\r\nclass UserListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { userId } = this.props;\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { userId, style } = this.props;\r\n\r\n        return (\r\n            <ListItem className='user-list-item' button style={style}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nclass NewGroupParams extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n\r\n        this.state = {\r\n            error: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { userIds } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, userIds);\r\n    }\r\n\r\n    getTitle() {\r\n        const { error } = this.state;\r\n\r\n        const title = this.titleRef.current.value.trim();\r\n        if (!title) {\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return title;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({\r\n                error: false\r\n            })\r\n        }\r\n\r\n        return title;\r\n    }\r\n\r\n    handleClose = () => {\r\n        const { onClose } = this.props;\r\n        if (!onClose) return;\r\n\r\n        onClose();\r\n    };\r\n\r\n    render() {\r\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\r\n        const { error } = this.state;\r\n\r\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\r\n\r\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('NewGroup')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='new-chat-content'>\r\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\r\n                        <div className='new-chat-title'>\r\n                            <TextField\r\n                                inputRef={this.titleRef}\r\n                                error={error}\r\n                                className='new-chat-input'\r\n                                variant='outlined'\r\n                                fullWidth\r\n                                label={t('GroupName')}\r\n                                defaultValue={''}\r\n                            />\r\n                        </div>\r\n                        <SectionHeader>{itemsCaption}</SectionHeader>\r\n                        {items}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewGroupParams.propTypes = {\r\n    userIds: PropTypes.array,\r\n    defaultPhotoURL: PropTypes.string,\r\n    onChoosePhoto: PropTypes.func,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(NewGroupParams);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AddParticipants from './AddParticipants';\r\nimport NewGroupParams from './NewGroupParams';\r\nimport SidebarPage from './SidebarPage';\r\nimport NextIcon from '../../Assets/Icons/Back';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './NewGroup.css';\r\n\r\nclass NewGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addParticipantsRef = React.createRef();\r\n        this.newGroupParamsRef = React.createRef();\r\n\r\n        this.state = {\r\n            openParams: false,\r\n            userIds: [],\r\n            defaultPhoto: null,\r\n            defaultPhotoURL: null,\r\n            defaultPhotoFile: null\r\n        };\r\n    }\r\n\r\n    handleDone = async () => {\r\n        const { openParams } = this.state;\r\n        if (!openParams) {\r\n            const userIds = this.addParticipantsRef.current.getUserIds();\r\n            if (!userIds.length) return;\r\n\r\n            this.setState({\r\n                openParams: true,\r\n                userIds\r\n            })\r\n        } else {\r\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\r\n\r\n            const title = this.newGroupParamsRef.current.getTitle();\r\n            if (!title) {\r\n                return;\r\n            }\r\n\r\n            this.handleClose();\r\n\r\n            const chat = await TdLibController.send({\r\n                '@type': 'createNewSupergroupChat',\r\n                title,\r\n                is_channel: false,\r\n                description: '',\r\n                location: null\r\n            });\r\n\r\n            if (defaultPhotoFile || defaultPhoto) {\r\n                const photo = defaultPhotoFile\r\n                     ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\r\n                     : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\r\n\r\n                TdLibController.send({\r\n                    '@type': 'setChatPhoto',\r\n                    chat_id: chat.id,\r\n                    photo: { '@type': 'inputChatPhotoStatic', photo }\r\n                });\r\n            }\r\n\r\n            if (userIds.length > 0) {\r\n                TdLibController.send({\r\n                    '@type': 'addChatMembers',\r\n                    chat_id: chat.id,\r\n                    user_ids: userIds\r\n                });\r\n            }\r\n\r\n            openChat(chat.id);\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewGroup',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    handleCloseParams = () => {\r\n        this.setState({\r\n            openParams: false,\r\n            userIds: []\r\n        })\r\n    };\r\n\r\n    handleChoosePhoto = async (blob, blobURL) => {\r\n        this.setState({\r\n            defaultPhoto: blob,\r\n            defaultPhotoURL: blobURL\r\n        });\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'uploadFile',\r\n            file: {\r\n                '@type': 'inputFileBlob',\r\n                name: 'photo.jpg',\r\n                data: blob\r\n            },\r\n            file_type: { '@type': 'fileTypePhoto' },\r\n            priority: THUMBNAIL_PRIORITY\r\n        });\r\n\r\n        this.setState({\r\n            defaultPhotoFile: result\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { popup } = this.props;\r\n        const { openParams, userIds, defaultPhotoURL } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\r\n\r\n                <SidebarPage open={openParams}>\r\n                    <NewGroupParams\r\n                        ref={this.newGroupParamsRef}\r\n                        defaultPhotoURL={defaultPhotoURL}\r\n                        userIds={userIds}\r\n                        onChoosePhoto={this.handleChoosePhoto}\r\n                        onClose={this.handleCloseParams}\r\n                    />\r\n                </SidebarPage>\r\n\r\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\r\n                    <NextIcon/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewGroup.propTypes = {\r\n    popup: PropTypes.bool,\r\n    userIds: PropTypes.array\r\n};\r\n\r\nexport default withTranslation()(NewGroup);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Contacts from '../ColumnLeft/Contacts';\r\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\r\nimport Search from '../ColumnLeft/Search/Search';\r\nimport Settings from '../ColumnLeft/Settings/Settings';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './ChatInfoDialog.css';\r\nimport { openChat } from '../../Actions/Client';\r\nimport NewChannel from '../ColumnLeft/NewChannel';\r\nimport NewGroup from '../ColumnLeft/NewGroup';\r\n\r\nclass SidebarDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.headerRef = React.createRef();\r\n\r\n        this.state = {\r\n            openSearch: false,\r\n            openSettings: false,\r\n            openContacts: false,\r\n            openNewGroup: false,\r\n            openNewChannel: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\r\n\r\n        if (nextState.openSearch !== openSearch) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchText !== searchText) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSettings !== openSettings) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openContacts !== openContacts) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewGroup !== openNewGroup) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewChannel !== openNewChannel) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n    }\r\n\r\n    onClientUpdateSearchChat = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { chatId, query } = update;\r\n        const { openSearch, searchChatId, searchText } = this.state;\r\n\r\n        if (openSearch && chatId === searchChatId && query === searchText) {\r\n            return;\r\n        }\r\n\r\n        this.query = query;\r\n        this.setState(\r\n            {\r\n                openSearch: true,\r\n                searchChatId: chatId,\r\n                searchText: null\r\n            }\r\n        );\r\n    };\r\n\r\n    handleDialogEnter = () => {\r\n        if (!this.query) return;\r\n\r\n        const header = this.headerRef.current;\r\n        if (header) {\r\n            header.setInitQuery(this.query);\r\n        }\r\n\r\n        this.query = null;\r\n    };\r\n\r\n    onClientUpdateSettings = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open, chatId } = update;\r\n\r\n        this.setState({ openSettings: open, meChatId: chatId });\r\n    };\r\n\r\n    onClientUpdateContacts = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openContacts: open });\r\n    };\r\n\r\n    onClientUpdateNewGroup = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewGroup: open });\r\n    };\r\n\r\n    onClientUpdateNewChannel = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewChannel: open });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            openSettings: false,\r\n            openContacts: false,\r\n            openNewGroup: false,\r\n            openNewChannel: false,\r\n            openSearch: false\r\n        });\r\n    };\r\n\r\n    handleSearch = visible => {\r\n        this.setState({\r\n            openSearch: visible,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSearchTextChange = text => {\r\n        this.setState({\r\n            searchText: text,\r\n            query: null\r\n        });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, openSearch) => {\r\n        openChat(chatId, messageId);\r\n\r\n        this.handleCloseSearch();\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.setState({\r\n            openSearch: false,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\r\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                open\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                classes={{\r\n                    root: 'chat-info-dialog-root',\r\n                    container: 'chat-info-dialog-container',\r\n                    paper: 'chat-info-dialog-paper'\r\n                }}\r\n                onEnter={this.handleDialogEnter}\r\n                >\r\n                {openSettings && <Settings chatId={meChatId} popup/>}\r\n                {openContacts && <Contacts popup />}\r\n                {openNewGroup && <NewGroup popup/>}\r\n                {openNewChannel && <NewChannel popup />}\r\n                {openSearch && (\r\n                    <>\r\n                        <DialogsHeader\r\n                            ref={this.headerRef}\r\n                            openSearch={true}\r\n                            timeout={false}\r\n                            onClick={this.handleHeaderClick}\r\n                            onSearch={this.handleSearch}\r\n                            onSearchTextChange={this.handleSearchTextChange}\r\n                            popup\r\n                        />\r\n                        <div className='search-content'>\r\n                            <Search\r\n                                chatId={searchChatId}\r\n                                text={searchText}\r\n                                onSelectMessage={this.handleSelectMessage}\r\n                                onClose={this.handleCloseSearch}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nSidebarDialog.propTypes = {};\r\n\r\nexport default SidebarDialog;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport { orderCompare } from './Common';\r\nimport { getChatOrder } from './Chat';\r\nimport ChatStore from '../Stores/ChatStore';\r\n\r\nexport function getArchiveTitle() {\r\n    const archive = ChatStore.chatList.get('chatListArchive');\r\n    const chats = [];\r\n    const chatsOrder = [];\r\n    if (archive) {\r\n        for (const chatId of archive.keys()) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat) {\r\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\r\n                if (order !== '0') chats.push(chat);\r\n                chatsOrder.push({ order, id: chatId, title: chat.title });\r\n            }\r\n        }\r\n    }\r\n\r\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\r\n\r\n    return orderedChats.map(x => x.title).join(', ');\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport CSSTransition from 'react-transition-group/CSSTransition';\r\nimport Archive from './Archive';\r\nimport Search from './Search/Search';\r\nimport Filters from './Filters';\r\nimport DialogsHeader from './DialogsHeader';\r\nimport DialogsList from './DialogsList';\r\nimport SidebarPage from './SidebarPage';\r\nimport Settings from './Settings/Settings';\r\nimport Contacts from './Contacts';\r\nimport UpdatePanel from './UpdatePanel';\r\nimport SidebarDialog from '../Popup/SidebarDialog';\r\nimport NewGroup from './NewGroup';\r\nimport NewChannel from './NewChannel';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { getArchiveTitle } from '../../Utils/Archive';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { duration } from '@material-ui/core/styles/transitions';\r\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport FilterStore from '../../Stores/FilterStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Dialogs.css';\r\n\r\nconst defaultTimeout = {\r\n    enter: duration.enteringScreen,\r\n    exit: duration.leavingScreen\r\n};\r\n\r\nclass Dialogs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialogListRef = React.createRef();\r\n        this.archiveListRef = React.createRef();\r\n        this.dialogsHeaderRef = React.createRef();\r\n\r\n        this.state = {\r\n            cache: null,\r\n\r\n            showArchive: false,\r\n            archiveTitle: null,\r\n\r\n            archiveItems: [],\r\n\r\n            timeout: defaultTimeout,\r\n            openSearch: false,\r\n            openArchive: false,\r\n            openContacts: false,\r\n            openSettings: false,\r\n            openNewGroup: false,\r\n            openNewChannel: false,\r\n\r\n            searchChatId: 0,\r\n            searchText: null,\r\n            query: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const {\r\n            cache,\r\n            showArchive,\r\n            archiveTitle,\r\n            archiveItems,\r\n            openSearch,\r\n            openArchive,\r\n            openSettings,\r\n            openContacts,\r\n            openNewGroup,\r\n            openNewChannel,\r\n            searchChatId,\r\n            searchText\r\n        } = this.state;\r\n\r\n        if (nextState.cache !== cache) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.showArchive !== showArchive) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.archiveTitle !== archiveTitle) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.archiveItems !== archiveItems) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSearch !== openSearch) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openArchive !== openArchive) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSettings !== openSettings) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openContacts !== openContacts) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewGroup !== openNewGroup) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewChannel !== openNewChannel) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchChatId !== searchChatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchText !== searchText) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCache();\r\n\r\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\r\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\r\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\r\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\r\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    onUpdateChatFilters = update => {\r\n        this.handleSaveCache();\r\n    };\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        if (!isSmallWidth) return;\r\n\r\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\r\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\r\n            this.setState({\r\n                    openContacts: false,\r\n                    openSettings: false,\r\n                    openSearch: false,\r\n                    openNewGroup: false,\r\n                    openNewChannel: false,\r\n                    timeout: 0\r\n                }, () => {\r\n                    this.setState({\r\n                        timeout: defaultTimeout\r\n                    });\r\n            });\r\n        }\r\n    };\r\n\r\n    async loadCache() {\r\n        const cache = (await CacheStore.load()) || {};\r\n\r\n        const { chats, archiveChats } = cache;\r\n\r\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\r\n        this.setState({\r\n            cache,\r\n\r\n            showArchive: archiveChats && archiveChats.length > 0,\r\n            archiveTitle: getArchiveTitle()\r\n        });\r\n\r\n        this.loadChatContents((chats || []).map(x => x.id));\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateCacheLoaded'\r\n        });\r\n    }\r\n\r\n    async saveCache() {\r\n        const promises = [];\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListMain' },\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: CHAT_SLICE_LIMIT\r\n        }));\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListArchive' },\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: CHAT_SLICE_LIMIT\r\n        }));\r\n        const [mainChats, archiveChats] = await Promise.all(promises);\r\n\r\n        const { filters } = FilterStore;\r\n\r\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\r\n    }\r\n\r\n    onUpdateChatOrder = update => {\r\n        const { showArchive: prevShowArchive } = this.state;\r\n\r\n        const { current: mainCurrent } = this.dialogListRef;\r\n        if (mainCurrent && mainCurrent.loading) {\r\n            return;\r\n        }\r\n\r\n        const { current: archiveCurrent } = this.archiveListRef;\r\n        if (archiveCurrent && archiveCurrent.loading) {\r\n            return;\r\n        }\r\n\r\n        const archiveList = ChatStore.chatList.get('chatListArchive');\r\n        const showArchive = archiveList && archiveList.size > 0;\r\n\r\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\r\n            if (!prevShowArchive && showArchive) {\r\n                const { current } = this.dialogListRef;\r\n                if (current.listRef) {\r\n                    const { current: listCurrent } = current.listRef;\r\n                    if (listCurrent && listCurrent.scrollTop > 0) {\r\n                        current.scrollTop += 68;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (prevShowArchive && !showArchive) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateCloseArchive'\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateContacts = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openContacts: open });\r\n    };\r\n\r\n    onClientUpdateSettings = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open, chatId } = update;\r\n\r\n        this.setState({ openSettings: open, meChatId: chatId });\r\n    };\r\n\r\n    onClientUpdateNewGroup = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewGroup: open });\r\n    };\r\n\r\n    onClientUpdateNewChannel = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewChannel: open });\r\n    };\r\n\r\n    onClientUpdateArchive = update => {\r\n        const { open } = update;\r\n\r\n        this.setState({ openArchive: open });\r\n    };\r\n\r\n    onClientUpdateThemeChange = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateSearchChat = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { chatId, query } = update;\r\n        const { openSearch, searchChatId, searchText } = this.state;\r\n\r\n        if (openSearch && chatId === searchChatId && query === searchText) {\r\n            return;\r\n        }\r\n\r\n        const header = this.dialogsHeaderRef.current;\r\n        this.setState(\r\n            {\r\n                openSearch: true,\r\n                searchChatId: chatId,\r\n                searchText: null,\r\n                openArchive: false,\r\n                openContacts: false,\r\n                openSettings: false,\r\n                openNewGroup: false,\r\n                openNewChannel: false,\r\n            },\r\n            () => {\r\n                if (header) {\r\n                    header.setInitQuery(query);\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        const { openArchive } = this.state;\r\n        if (openArchive) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateCloseArchive'\r\n            });\r\n        } else {\r\n            this.dialogListRef.current.scrollToTop();\r\n        }\r\n    };\r\n\r\n    handleSearch = visible => {\r\n        this.setState({\r\n            openSearch: visible,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, openSearch) => {\r\n        openChat(chatId, messageId);\r\n\r\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\r\n        const searchText = openSearch ? this.state.searchText : null;\r\n\r\n        this.setState({\r\n            openSearch,\r\n            searchChatId,\r\n            searchText\r\n        });\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.setState({\r\n            openSearch: false,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSearchTextChange = text => {\r\n        this.setState({\r\n            searchText: text,\r\n            query: null\r\n        });\r\n    };\r\n\r\n    handleSaveCache = () => {\r\n        this.saveCache();\r\n    };\r\n\r\n    loadChatContents(chatIds) {\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chatIds);\r\n    }\r\n\r\n    handleCloseArchive = () => {\r\n        this.setState({ openArchive: false });\r\n    };\r\n\r\n    handleCloseContacts = () => {\r\n        this.setState({ openContacts: false });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        this.setState({ openSettings: false });\r\n    };\r\n\r\n    handleCloseNewGroup = () => {\r\n        this.setState({ openNewGroup: false });\r\n    };\r\n\r\n    handleCloseNewChannel = () => {\r\n        this.setState({ openNewChannel: false });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            cache,\r\n            showArchive,\r\n            archiveTitle,\r\n            archiveItems,\r\n            meChatId,\r\n            openSettings,\r\n            openContacts,\r\n            openArchive,\r\n            openSearch,\r\n            openNewGroup,\r\n            openNewChannel,\r\n            timeout,\r\n            searchChatId,\r\n            searchText\r\n        } = this.state;\r\n\r\n        const mainCacheItems = cache && cache.chats ? cache.chats : null;\r\n        const archiveCacheItems = cache && cache.archiveChats ? cache.archiveChats : null;\r\n\r\n        return (\r\n            <>\r\n                <div className='dialogs'>\r\n                    <div className='sidebar-page'>\r\n                        <DialogsHeader\r\n                            ref={this.dialogsHeaderRef}\r\n                            openSearch={openSearch}\r\n                            timeout={timeout !== 0}\r\n                            onClick={this.handleHeaderClick}\r\n                            onSearch={this.handleSearch}\r\n                            onSearchTextChange={this.handleSearchTextChange}\r\n                        />\r\n                        <div className='dialogs-content'>\r\n                            <div className='dialogs-content-internal'>\r\n                                <Filters/>\r\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\r\n                                <DialogsList\r\n                                    type='chatListMain'\r\n                                    ref={this.dialogListRef}\r\n                                    cacheItems={mainCacheItems}\r\n                                    onSaveCache={this.handleSaveCache}\r\n                                />\r\n                            </div>\r\n                            <CSSTransition\r\n                                classNames='search'\r\n                                timeout={timeout}\r\n                                in={openSearch}\r\n                                mountOnEnter={true}\r\n                                unmountOnExit={true}>\r\n                                <Search\r\n                                    chatId={searchChatId}\r\n                                    text={searchText}\r\n                                    onSelectMessage={this.handleSelectMessage}\r\n                                    onClose={this.handleCloseSearch}\r\n                                />\r\n                            </CSSTransition>\r\n                        </div>\r\n                        {/*<UpdatePanel />*/}\r\n                    </div>\r\n\r\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\r\n                        <Archive\r\n                            innerListRef={this.archiveListRef}\r\n                            items={archiveItems}\r\n                            cacheItems={archiveCacheItems}\r\n                        />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\r\n                        <Contacts />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\r\n                        <Settings chatId={meChatId} />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\r\n                        <NewGroup />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\r\n                        <NewChannel />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarDialog/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dialogs;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ChatInfo from '../ColumnRight/ChatInfo';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ChatInfoDialog.css';\r\n\r\nclass ChatInfoDialog extends React.Component {\r\n    state = {\r\n        chatId: ApplicationStore.dialogChatId\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId } = this.state;\r\n\r\n        return nextState.chatId !== chatId;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\r\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\r\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n    }\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        if (ApplicationStore.mediaViewerContent) {\r\n            this.handleClose();\r\n        }\r\n    };\r\n\r\n    onClientUpdateDialogChatId = update => {\r\n        const { chatId } = update;\r\n\r\n        this.setState({ chatId });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDialogChatId',\r\n            chatId: 0\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId } = this.state;\r\n        if (!chatId) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                open\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                classes={{\r\n                    root: 'chat-info-dialog-root',\r\n                    container: 'chat-info-dialog-container',\r\n                    paper: 'chat-info-dialog-paper'\r\n                }}>\r\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nChatInfoDialog.propTypes = {};\r\n\r\nexport default ChatInfoDialog;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\r\n    'Send'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\r\n    'Microphone'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\r\n    'Attach'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AttachFileIcon from '../../Assets/Icons/Attach';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\r\nimport PollIcon from '@material-ui/icons/PollOutlined';\r\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\r\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\r\nimport './AttachButton.css';\r\n\r\nclass AttachButton extends React.Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleMenuClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleAttachPhoto = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachPhoto } = this.props;\r\n        if (!onAttachPhoto) return;\r\n\r\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\r\n    };\r\n\r\n    handleAttachDocument = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachDocument } = this.props;\r\n        if (!onAttachDocument) return;\r\n\r\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\r\n    };\r\n\r\n    handleAttachPoll = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachPoll } = this.props;\r\n        if (!onAttachPoll) return;\r\n\r\n        onAttachPoll();\r\n    };\r\n\r\n    render() {\r\n        const { classes, t, chatId } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    className='inputbox-icon-button'\r\n                    aria-label='Attach'\r\n                    open={Boolean(anchorEl)}\r\n                    onClick={this.handleMenuClick}>\r\n                    <AttachFileIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='attach-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    classes={{\r\n                        paper: 'attach-button-paper'\r\n                    }}\r\n                    onClose={this.handleMenuClose}>\r\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\r\n                        <ListItemIcon>\r\n                            <PhotoIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('AttachPhoto')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\r\n                        <ListItemIcon>\r\n                            <InsertDriveFileIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('AttachDocument')} />\r\n                    </MenuItem>\r\n                    {!isPrivateChat(chatId) && (\r\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\r\n                            <ListItemIcon>\r\n                                <PollIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Poll')} />\r\n                        </MenuItem>\r\n                    )}\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAttachButton.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onAttachDocument: PropTypes.func.isRequired,\r\n    onAttachPhoto: PropTypes.func.isRequired,\r\n    onAttachPoll: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(AttachButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nexport function focusNode(node, toEnd = false) {\r\n    if (!node) return;\r\n\r\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\r\n        const lastNode = node.childNodes[node.childNodes.length - 1];\r\n        const range = document.createRange();\r\n        range.setStart(lastNode, lastNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        node.scrollTop = node.scrollHeight;\r\n    }\r\n\r\n    node.focus();\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nconst keys = {\r\n    backspace: 8,\r\n    shift: 16,\r\n    ctrl: 17,\r\n    alt: 18,\r\n    delete: 46,\r\n    cmd: 91,\r\n    leftArrow: 37,\r\n    upArrow: 38,\r\n    rightArrow: 39,\r\n    downArrow: 40\r\n};\r\n\r\nexport const utils = {\r\n    special: {},\r\n    navigational: {},\r\n    isSpecial(e) {\r\n        return typeof this.special[e.keyCode] !== 'undefined';\r\n    },\r\n    isNavigational(e) {\r\n        return typeof this.navigational[e.keyCode] !== 'undefined';\r\n    }\r\n};\r\n\r\nutils.special[keys['backspace']] = true;\r\nutils.special[keys['shift']] = true;\r\nutils.special[keys['ctrl']] = true;\r\nutils.special[keys['alt']] = true;\r\nutils.special[keys['delete']] = true;\r\n\r\nutils.navigational[keys['upArrow']] = true;\r\nutils.navigational[keys['downArrow']] = true;\r\nutils.navigational[keys['leftArrow']] = true;\r\nutils.navigational[keys['rightArrow']] = true;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport { focusNode } from '../../Utils/Component';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport { utils } from '../../Utils/Key';\r\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './CreatePollOption.css';\r\n\r\nclass CreatePollOption extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.optionTextRef = React.createRef();\r\n\r\n        this.state = {\r\n            remainLength: POLL_OPTION_MAX_LENGTH\r\n        };\r\n    }\r\n\r\n    getText = () => {\r\n        return this.optionTextRef.current.innerText;\r\n    };\r\n\r\n    focus = (toEnd = false) => {\r\n        const node = this.optionTextRef.current;\r\n\r\n        focusNode(node, toEnd);\r\n    };\r\n\r\n    handleDelete = () => {\r\n        const { option, onDelete } = this.props;\r\n        if (!option) return;\r\n        if (!onDelete) return;\r\n\r\n        onDelete(option.id);\r\n    };\r\n\r\n    handleInput = event => {\r\n        const { option } = this.props;\r\n\r\n        event.preventDefault();\r\n\r\n        const node = this.optionTextRef.current;\r\n        const length = node.dataset.length;\r\n        const maxLength = node.dataset.maxLength;\r\n        const text = this.getText();\r\n\r\n        this.setState({\r\n            remainLength: length - text.length\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollOption',\r\n            id: option.id,\r\n            text\r\n        });\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const node = this.optionTextRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n        const innerText = this.getText();\r\n        const length = innerText.length;\r\n\r\n        let hasSelection = false;\r\n        const selection = window.getSelection();\r\n        const isSpecial = utils.isSpecial(event);\r\n        const isNavigational = utils.isNavigational(event);\r\n\r\n        if (selection) {\r\n            hasSelection = !!selection.toString();\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Backspace': {\r\n                const text = this.getText();\r\n                if (!text) {\r\n                    const { option, onDelete } = this.props;\r\n                    if (onDelete) {\r\n                        onDelete(option.id, true);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'Enter': {\r\n                const { option, onFocusNext } = this.props;\r\n                if (option && onFocusNext) {\r\n                    onFocusNext(option.id);\r\n                }\r\n\r\n                event.preventDefault();\r\n                return false;\r\n            }\r\n            case 'ArrowUp': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\r\n\r\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\r\n                    const { option, onFocusPrev } = this.props;\r\n                    if (onFocusPrev) {\r\n                        onFocusPrev(option.id);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const lastChild =\r\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\r\n\r\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\r\n                    const { option, onFocusNext } = this.props;\r\n                    if (onFocusNext) {\r\n                        onFocusNext(option.id);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isSpecial || isNavigational) {\r\n            return true;\r\n        }\r\n\r\n        if (length >= maxLength && !hasSelection) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handlePaste = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.optionTextRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n\r\n        const selection = window.getSelection();\r\n        const selectionString = selection ? selection.toString() : '';\r\n\r\n        const innerText = this.getText();\r\n        if (innerText.length - selection.length >= maxLength) return;\r\n\r\n        let pasteText = event.clipboardData.getData('text/plain');\r\n        if (!pasteText) return;\r\n\r\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\r\n\r\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\r\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\r\n        }\r\n        document.execCommand('insertText', false, pasteText);\r\n    };\r\n\r\n    handleChange = () => {\r\n        const { option } = this.props;\r\n        if (!option) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChooseOption',\r\n            id: option.id\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, option } = this.props;\r\n        const { remainLength } = this.state;\r\n\r\n        const { is_chosen } = option;\r\n\r\n        return (\r\n            <div className='create-poll-option'>\r\n                <div className='create-poll-option-wrapper'>\r\n                    <Radio\r\n                        key={Date.now()}\r\n                        classes={{ root: 'create-poll-radio-root' }}\r\n                        color='primary'\r\n                        checked={is_chosen}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <div\r\n                        ref={this.optionTextRef}\r\n                        className='create-poll-option-text'\r\n                        contentEditable\r\n                        suppressContentEditableWarning\r\n                        placeholder={t('Option')}\r\n                        data-length={POLL_OPTION_LENGTH}\r\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\r\n                        onInput={this.handleInput}\r\n                        onKeyDown={this.handleKeyDown}\r\n                        onPaste={this.handlePaste}\r\n                    />\r\n                </div>\r\n                <div className='create-poll-option-delete-button'>\r\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\r\n                        <CloseIcon fontSize='small' />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='create-poll-option-bottom-border' />\r\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\r\n                    <Typography\r\n                        align='center'\r\n                        className='create-poll-option-subtitle'\r\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\r\n                        variant='subtitle1'>\r\n                        {remainLength}\r\n                    </Typography>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCreatePollOption.propTypes = {\r\n    option: PropTypes.object.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    onFocusPrev: PropTypes.func.isRequired,\r\n    onFocusNext: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(CreatePollOption);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreatePollOption from './CreatePollOption';\r\nimport { focusNode } from '../../Utils/Component';\r\nimport { utils } from '../../Utils/Key';\r\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport {\r\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n    POLL_OPTIONS_MAX_COUNT,\r\n    POLL_QUESTION_HINT_LENGTH,\r\n    POLL_QUESTION_LENGTH,\r\n    POLL_QUESTION_MAX_LENGTH\r\n} from '../../Constants';\r\nimport PollStore from '../../Stores/PollStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './CreatePollDialog.css';\r\n\r\nclass CreatePollDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.questionRef = React.createRef();\r\n        this.optionsRefMap = new Map();\r\n\r\n        this.state = {\r\n            poll: null,\r\n            confirm: false,\r\n            remainLength: POLL_QUESTION_MAX_LENGTH\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\r\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\r\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\r\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\r\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\r\n    }\r\n\r\n    handleClientUpdateNewPoll = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({\r\n            confirm: false,\r\n            remainLength: POLL_QUESTION_MAX_LENGTH,\r\n            poll\r\n        });\r\n    };\r\n\r\n    handleClientUpdatePollQuestion = update => {\r\n        const { poll } = PollStore;\r\n\r\n        const node = this.questionRef.current;\r\n        const length = node.dataset.length;\r\n        const innerText = node.innerText;\r\n\r\n        this.setState({\r\n            remainLength: length - innerText.length,\r\n            poll\r\n        });\r\n    };\r\n\r\n    handleClientUpdatePoll = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({ poll });\r\n    };\r\n\r\n    handleClientUpdateNewPollOption = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({ poll }, () => {\r\n            setTimeout(() => {\r\n                const node = this.optionsRefMap.get(poll.options.length - 1);\r\n\r\n                node.focus(true);\r\n            });\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { poll } = this.state;\r\n\r\n        if (poll && !prevState.poll) {\r\n            setTimeout(() => {\r\n                focusNode(this.questionRef.current, true);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        const node = this.questionRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n        const innerText = node.innerText;\r\n        const length = innerText.length;\r\n\r\n        let hasSelection = false;\r\n        const selection = window.getSelection();\r\n        const isSpecial = utils.isSpecial(event);\r\n        const isNavigational = utils.isNavigational(event);\r\n\r\n        if (selection) {\r\n            hasSelection = !!selection.toString();\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Enter': {\r\n                if (!event.shiftKey) {\r\n                    this.handleFocusNextOption(0);\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const lastChild =\r\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\r\n\r\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\r\n                    this.handleFocusNextOption(0);\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isSpecial || isNavigational) {\r\n            return true;\r\n        }\r\n\r\n        if (length >= maxLength && !hasSelection) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handlePaste = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.questionRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n\r\n        const selection = window.getSelection();\r\n        const selectionString = selection ? selection.toString() : '';\r\n\r\n        const innerText = node.innerText;\r\n        if (innerText.length - selection.length >= maxLength) return;\r\n\r\n        let pasteText = event.clipboardData.getData('text/plain');\r\n        if (!pasteText) return;\r\n\r\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\r\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\r\n        }\r\n        document.execCommand('insertText', false, pasteText);\r\n    };\r\n\r\n    handleInput = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.questionRef.current;\r\n        //const length = node.dataset.length;\r\n\r\n        const innerText = node.innerText;\r\n        const innerHtml = node.innerHTML;\r\n\r\n        if (innerHtml === '<br>') {\r\n            node.innerText = '';\r\n        }\r\n\r\n        // this.setState({\r\n        //     remainLength: length - innerText.length\r\n        // });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollQuestion',\r\n            question: innerText\r\n        });\r\n    };\r\n\r\n    handleAddOption = () => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\r\n\r\n        const option = {\r\n            id: Date.now(),\r\n            text: ''\r\n        };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewPollOption',\r\n            option\r\n        });\r\n    };\r\n\r\n    handleDeleteOption = (id, backspace = false) => {\r\n        if (backspace) {\r\n            this.handleDeleteByBackspace(id);\r\n        } else {\r\n            this.handleDelete(id);\r\n        }\r\n    };\r\n\r\n    handleDelete = id => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDeletePollOption',\r\n            id\r\n        });\r\n    };\r\n\r\n    handleDeleteByBackspace = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const prevIndex = index - 1;\r\n        let deleteOption = true;\r\n        for (let i = index; i < options.length; i++) {\r\n            const { text } = options[i];\r\n            if (text) {\r\n                deleteOption = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (deleteOption) {\r\n            this.handleDeleteOption(id);\r\n        }\r\n\r\n        const prevNode = this.optionsRefMap.get(prevIndex);\r\n        if (!prevNode) {\r\n            const element = this.questionRef.current;\r\n\r\n            focusNode(element, true);\r\n            return;\r\n        }\r\n\r\n        prevNode.focus(true);\r\n    };\r\n\r\n    handleFocusPrevOption = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const prevIndex = index - 1;\r\n\r\n        const prevNode = this.optionsRefMap.get(prevIndex);\r\n        if (!prevNode) {\r\n            const element = this.questionRef.current;\r\n\r\n            focusNode(element, false);\r\n            return;\r\n        }\r\n\r\n        prevNode.focus(false);\r\n    };\r\n\r\n    handleFocusNextOption = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const nextIndex = index + 1;\r\n\r\n        const nextNode = this.optionsRefMap.get(nextIndex);\r\n        if (!nextNode) {\r\n            const text = index >= 0 && index < options.length ? options[index].text : '';\r\n            if (options.length && !text) {\r\n                return;\r\n            }\r\n\r\n            this.handleAddOption();\r\n            return;\r\n        }\r\n\r\n        nextNode.focus(nextNode, true);\r\n    };\r\n\r\n    getHint = () => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\r\n\r\n        if (addCount <= 0) {\r\n            return 'You have added the maximum number of options.';\r\n        }\r\n        if (addCount === 1) {\r\n            return 'You can add 1 more option.';\r\n        }\r\n\r\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { poll } = this.state;\r\n\r\n        if (hasPollData(poll)) {\r\n            this.setState({ confirm: true });\r\n        } else {\r\n            this.handleConfirmationDone();\r\n        }\r\n    };\r\n\r\n    handleSend = () => {\r\n        const { onSend } = this.props;\r\n\r\n        const inputMessagePoll = PollStore.getInputMessagePoll();\r\n        if (!inputMessagePoll) return;\r\n\r\n        onSend(inputMessagePoll);\r\n\r\n        this.handleConfirmationDone();\r\n    };\r\n\r\n    handleConfirmationClose = () => {\r\n        this.setState({ confirm: false });\r\n    };\r\n\r\n    handleConfirmationDone = () => {\r\n        this.handleConfirmationClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDeletePoll'\r\n        });\r\n    };\r\n\r\n    handleChangeAnonymous = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeAnonymous'\r\n        });\r\n    };\r\n\r\n    handleChangeAllowMultipleAnswers = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\r\n        });\r\n    };\r\n\r\n    handleChangeType = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeType'\r\n        });\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleAllowMultipleAnswersClick = event => {\r\n        const { t } = this.props;\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\r\n        if (quizPoll) {\r\n            event.stopPropagation();\r\n\r\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { remainLength, confirm, poll } = this.state;\r\n        if (!poll) return null;\r\n\r\n        const { is_anonymous } = poll;\r\n\r\n        const options = poll ? poll.options : [];\r\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\r\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\r\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\r\n\r\n        this.optionsRefMap.clear();\r\n        const items = options.map((x, i) => (\r\n            <CreatePollOption\r\n                ref={el => this.optionsRefMap.set(i, el)}\r\n                key={x.id}\r\n                option={x}\r\n                onDelete={this.handleDeleteOption}\r\n                onFocusPrev={this.handleFocusPrevOption}\r\n                onFocusNext={this.handleFocusNextOption}\r\n            />\r\n        ));\r\n\r\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\r\n        const hint = this.getHint();\r\n\r\n        return (\r\n            <>\r\n                <Dialog\r\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\r\n                    open\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby='dialog-title'>\r\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\r\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\r\n                        <div className='create-poll-dialog-question-title'>\r\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\r\n                                {t('Question')}\r\n                            </Typography>\r\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\r\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\r\n                                    {remainLength}\r\n                                </Typography>\r\n                            )}\r\n                        </div>\r\n                        <div\r\n                            ref={this.questionRef}\r\n                            id='create-poll-dialog-question'\r\n                            contentEditable\r\n                            suppressContentEditableWarning\r\n                            placeholder={t('QuestionHint')}\r\n                            data-length={POLL_QUESTION_LENGTH}\r\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\r\n                            onPaste={this.handlePaste}\r\n                            onKeyDown={this.handleKeyDown}\r\n                            onInput={this.handleInput}\r\n                        />\r\n                        <Divider className='divider' />\r\n                        <Typography color='primary' variant='subtitle1'>\r\n                            {t('PollOptions')}\r\n                        </Typography>\r\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\r\n                            {items}\r\n                            {canAddOption && (\r\n                                <ListItem\r\n                                    selected={false}\r\n                                    className='create-poll-add-option'\r\n                                    button\r\n                                    onClick={this.handleAddOption}>\r\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\r\n                                </ListItem>\r\n                            )}\r\n                        </List>\r\n                        <Typography>{hint}</Typography>\r\n                        <Divider className='divider' />\r\n                        <Typography color='primary' variant='subtitle1'>\r\n                            {t('Settings')}\r\n                        </Typography>\r\n                        <FormGroup>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        color='primary'\r\n                                        checked={is_anonymous}\r\n                                        onChange={this.handleChangeAnonymous}\r\n                                    />\r\n                                }\r\n                                label={t('PollAnonymous')}\r\n                            />\r\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            color='primary'\r\n                                            disabled={allowMultipleAnswersDisabled}\r\n                                            checked={allowMultipleAnswers}\r\n                                            onChange={this.handleChangeAllowMultipleAnswers}\r\n                                        />\r\n                                    }\r\n                                    label={t('PollMultiple')}\r\n                                />\r\n                            </div>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\r\n                                }\r\n                                label={t('PollQuiz')}\r\n                            />\r\n                        </FormGroup>\r\n                        <Typography>{t('QuizInfo')}</Typography>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color='primary' onClick={this.handleClose}>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        {isValidPoll(poll) && (\r\n                            <Button color='primary' onClick={this.handleSend}>\r\n                                {t('Create')}\r\n                            </Button>\r\n                        )}\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    className='create-poll-dialog-root'\r\n                    open={confirm}\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    onClose={this.handleConfirmationClose}\r\n                    aria-labelledby='dialog-title'>\r\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\r\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\r\n                        {t('CancelPollAlertText')}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nCreatePollDialog.propTypes = {\r\n    onSend: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withSnackbar,\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(CreatePollDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { validateUrl } from '../../Utils/Url';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './EditUrlDialog.css';\r\n\r\nclass EditUrlDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.textRef = React.createRef();\r\n        this.textInputRef = React.createRef();\r\n        this.urlRef = React.createRef();\r\n        this.urlInputRef = React.createRef();\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { defaultText, defaultUrl, open } = this.props;\r\n\r\n        if (open && prevProps.open !== open) {\r\n            setTimeout(() => {\r\n                const text = this.textInputRef.current;\r\n                const url = this.urlInputRef.current;\r\n\r\n                if (!text) return;\r\n                if (!url) return;\r\n\r\n                if (!defaultText) {\r\n                    text.focus();\r\n                } else if (!defaultUrl) {\r\n                    url.focus();\r\n                } else {\r\n                    text.focus();\r\n                    text.select();\r\n                }\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // const { defaultText, defaultUrl } = this.props;\r\n        //\r\n        // const text = this.textInputRef.current;\r\n        // const url = this.urlInputRef.current;\r\n        //\r\n        // if (!text) return;\r\n        // if (!url) return;\r\n        //\r\n        // setTimeout(() => {\r\n        //     if (!defaultText) {\r\n        //         text.focus();\r\n        //     } else if (!defaultUrl) {\r\n        //         url.focus();\r\n        //     } else {\r\n        //         text.focus();\r\n        //         // text.select();\r\n        //     }\r\n        // }, 0);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\r\n        const { textError, urlError } = this.state;\r\n\r\n        if (nextProps.defaultText !== defaultText) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.defaultUrl !== defaultUrl) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.textError !== textError) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.urlError !== urlError) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.onDone !== onDone) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.onCancel !== onCancel) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.open !== open) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (state.prevOpen !== props.open) {\r\n            return {\r\n                prevOpen: true,\r\n                textError: false,\r\n                urlError: false,\r\n                text: null,\r\n                url: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleTextKeyDown = event => {\r\n        if (event.key === 'Enter') {\r\n            this.urlInputRef.current.focus();\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    };\r\n\r\n    handleUrlKeyDown = event => {\r\n        if (event.key === 'Enter') {\r\n            this.handleDone();\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    };\r\n\r\n    handleTextChange = event => {\r\n        this.setState({\r\n            text: event.target.value\r\n        });\r\n    };\r\n\r\n    handleUrlChange = event => {\r\n        this.setState({\r\n            url: event.target.value\r\n        });\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { defaultText, defaultUrl } = this.props;\r\n        let { text, url } = this.state;\r\n\r\n        text = text !== null ? text : defaultText;\r\n        url = url !== null ? url : defaultUrl;\r\n\r\n        if (!text && !url) {\r\n            this.textInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        if (!text) {\r\n            this.setState({ textError: true });\r\n            this.textInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        url = validateUrl(url);\r\n        if (!url) {\r\n            this.setState({ urlError: true });\r\n            this.urlInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        const { onDone } = this.props;\r\n\r\n        onDone(text, url);\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { onCancel } = this.props;\r\n\r\n        onCancel();\r\n    };\r\n\r\n    render() {\r\n        const { open, defaultUrl, defaultText, t } = this.props;\r\n        const { textError, urlError } = this.state;\r\n        if (!open) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='edit-url-dialog-title'>\r\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\r\n                <DialogContent>\r\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\r\n                        <TextField\r\n                            ref={this.textRef}\r\n                            inputRef={this.textInputRef}\r\n                            label={t('Text')}\r\n                            margin='normal'\r\n                            autoComplete='off'\r\n                            defaultValue={defaultText}\r\n                            error={textError}\r\n                            onChange={this.handleTextChange}\r\n                            onKeyDown={this.handleTextKeyDown}\r\n                        />\r\n                        <TextField\r\n                            ref={this.urlRef}\r\n                            inputRef={this.urlInputRef}\r\n                            label={t('URL')}\r\n                            margin='normal'\r\n                            autoComplete='off'\r\n                            defaultValue={defaultUrl}\r\n                            error={urlError}\r\n                            onChange={this.handleUrlChange}\r\n                            onKeyDown={this.handleUrlKeyDown}\r\n                        />\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Create')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nEditUrlDialog.propTypes = {\r\n    open: PropTypes.bool,\r\n    defaultText: PropTypes.string,\r\n    defaultUrl: PropTypes.string,\r\n    onDone: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(EditUrlDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getSrc } from '../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../Utils/Media';\r\nimport { hasVideoNote } from '../../Utils/Message';\r\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './ReplyTile.css';\r\n\r\nclass ReplyTile extends React.Component {\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\r\n    }\r\n\r\n    onClientUpdateBlob = update => {\r\n        const { chatId, messageId, thumbnail } = this.props;\r\n        if (!thumbnail) return;\r\n\r\n        const file = thumbnail.photo || thumbnail.file;\r\n        if (!file) return;\r\n\r\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\r\n        if (!thumbnail) return null;\r\n\r\n        const file = thumbnail.photo || thumbnail.file;\r\n        if (!file) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const src = getSrc(file);\r\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\r\n        const isVideoNote = hasVideoNote(chatId, messageId);\r\n\r\n        return (\r\n            <div className='reply-tile' onClick={onClick}>\r\n                {miniSrc && (\r\n                    <img\r\n                        className={classNames(\r\n                            'reply-tile-photo',\r\n                            { 'reply-tile-photo-round': isVideoNote },\r\n                            { 'media-mini-blurred': true }\r\n                        )}\r\n                        draggable={false}\r\n                        src={miniSrc}\r\n                        alt=''\r\n                    />\r\n                )}\r\n                {src && (\r\n                    <img\r\n                        className={classNames(\r\n                            'reply-tile-photo',\r\n                            { 'reply-tile-photo-round': isVideoNote },\r\n                            { 'media-blurred': src && isBlurred }\r\n                        )}\r\n                        draggable={false}\r\n                        src={src}\r\n                        alt=''\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReplyTile.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    minithumbnail: PropTypes.object,\r\n    thumbnail: PropTypes.object,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default ReplyTile;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ReplyTile from '../Tile/ReplyTile';\r\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\r\nimport { closePinned, openChat } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Reply.css';\r\n\r\nclass Reply extends React.Component {\r\n    componentDidMount() {\r\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\r\n    }\r\n\r\n    onGetMessageResult = result => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === result.chat_id && messageId === result.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleOpen = event => {\r\n        if (event.button !== 0) return;\r\n\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId, onClick } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n        if (isDeletedMessage(message)) return null;\r\n\r\n        openChat(chatId, messageId, false);\r\n        closePinned();\r\n        if (onClick) onClick();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId } = this.props;\r\n        let { title } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n\r\n        title = title || getTitle(message, t);\r\n        let content = !message ? t('Loading') : getContent(message, t);\r\n        const thumbnail = getReplyThumbnail(chatId, messageId);\r\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\r\n\r\n        if (isDeletedMessage(message)) {\r\n            title = null;\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        return (\r\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\r\n                <div className='reply-wrapper'>\r\n                    <div className='border reply-border' />\r\n                    {thumbnail && (\r\n                        <ReplyTile\r\n                            chatId={chatId}\r\n                            messageId={messageId}\r\n                            minithumbnail={minithumbnail}\r\n                            thumbnail={thumbnail}\r\n                        />\r\n                    )}\r\n                    <div className='reply-content'>\r\n                        {title && <div className='reply-content-title'>{title}</div>}\r\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReply.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    title: PropTypes.string,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Reply);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Reply from '../Message/Reply';\r\nimport { editMessage, replyMessage } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InputBoxHeader.css';\r\n\r\nclass InputBoxHeader extends React.Component {\r\n    componentDidMount() {\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, messageId, editMessageId } = this.props;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id && editMessageId !== message_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { chatId, editMessageId } = this.props;\r\n\r\n        if (editMessageId) {\r\n            editMessage(chatId, 0);\r\n        } else {\r\n            replyMessage(chatId, 0);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\r\n        if (!chatId) return null;\r\n        if (!messageId && !editMessageId) return null;\r\n\r\n        return (\r\n            <div className='inputbox-header'>\r\n                <div className='inputbox-header-left-column'>\r\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='inputbox-header-middle-column'>\r\n                    <Reply\r\n                        chatId={chatId}\r\n                        messageId={editMessageId || messageId}\r\n                        title={editMessageId ? t('EditMessage') : null}\r\n                        onClick={onClick}\r\n                    />\r\n                </div>\r\n                <div className='inputbox-header-right-column' />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInputBoxHeader.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    editMessageId: PropTypes.number,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(InputBoxHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './PasteFilesDialog.css';\r\n\r\nclass PasteFilesDialog extends React.Component {\r\n    handleDone = () => {\r\n        const { onConfirm } = this.props;\r\n        onConfirm();\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { onCancel } = this.props;\r\n        onCancel();\r\n    };\r\n\r\n    render() {\r\n        const { files, t } = this.props;\r\n        if (!files) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nPasteFilesDialog.propTypes = {\r\n    files: PropTypes.array,\r\n    onConfirm: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(withTranslation());\r\n\r\nexport default enhance(PasteFilesDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './RecordTimer.css';\r\n\r\nclass RecordTimer extends React.Component {\r\n    state = { };\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\r\n    }\r\n\r\n    onClientUpdateRecordStart = () => {\r\n        this.timer = setInterval(() => {\r\n            const now = new Date();\r\n            const diff = now - this.startTime;\r\n\r\n            // console.log('[recordTimer] ');\r\n            this.setState({\r\n                time: diff\r\n            });\r\n        }, 25);\r\n        this.startTime = new Date();\r\n    }\r\n\r\n    onClientUpdateRecordStop = () => {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n\r\n        this.setState({\r\n            time: null\r\n        });\r\n    }\r\n\r\n    onClientUpdateRecordError = () => {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n\r\n        this.setState({\r\n            time: null\r\n        });\r\n    }\r\n\r\n    normalizeM(n) {\r\n        let msStr = n.toString();\r\n        if (msStr.length === 1) {\r\n            msStr += '0'\r\n        } else if (msStr.length > 2) {\r\n            msStr = msStr.substr(0, 2);\r\n        }\r\n\r\n        return msStr;\r\n    }\r\n\r\n    normalizeS(n) {\r\n        let msStr = n.toString();\r\n        if (msStr.length === 1) {\r\n            msStr = '0' + msStr;\r\n        }\r\n\r\n        return msStr;\r\n    }\r\n\r\n    msToTime(s) {\r\n        let ms = (s % 1000);\r\n        s = (s - ms) / 1000;\r\n        let secs = s % 60;\r\n        s = (s - secs) / 60;\r\n        let mins = s % 60;\r\n        let hrs = (s - mins) / 60;\r\n\r\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\r\n        if (hrs > 0) {\r\n            result = hrs + ':' + result;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        const { time } = this.state;\r\n        if (!time) return null;\r\n\r\n        return (\r\n            <div className='record-timer'>\r\n                {this.msToTime(time)}\r\n                <div className='record-timer-icon'/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nRecordTimer.propTypes = {};\r\n\r\nexport default RecordTimer;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport EditUrlDialog from './EditUrlDialog';\r\nimport { focusInput } from '../../Utils/DOM';\r\nimport { editMessage as editMessageAction } from '../../Actions/Client';\r\nimport { getEntities, getNodes } from '../../Utils/Message';\r\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './EditMediaDialog.css';\r\n\r\nclass EditMediaDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.captionRef = React.createRef();\r\n        this.editMediaRef = React.createRef();\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevOpen } = state;\r\n        const { open, chatId, messageId, newItem } = props;\r\n\r\n        if (prevOpen !== open) {\r\n            if (open) {\r\n                const editMessage = MessageStore.get(chatId, messageId);\r\n                let sendAsPhoto = false;\r\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\r\n                    sendAsPhoto = true;\r\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\r\n                    sendAsPhoto = true;\r\n                }\r\n\r\n                return {\r\n                    prevOpen: true,\r\n                    sendAsPhoto,\r\n                    editMessage,\r\n                    editMedia: null,\r\n                    editFile: null\r\n                }\r\n            } else {\r\n                return {\r\n                    prevOpen: false,\r\n                    sendAsPhoto: false,\r\n                    editMessage: null,\r\n                    editMedia: null,\r\n                    editFile: null\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\r\n    }\r\n\r\n    handleSelectionChange = () => {\r\n        if (document.activeElement === this.captionRef.current) {\r\n            this.saveSelection();\r\n        }\r\n    };\r\n\r\n    handleEnter = () => {\r\n        const { chatId, messageId, open, newItem } = this.props;\r\n        if (!open) return;\r\n\r\n        let text = null;\r\n        let caption = null;\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (message) {\r\n            const { content } = message;\r\n            if (content) {\r\n                text = content.text;\r\n                caption = content.caption;\r\n            }\r\n        }\r\n\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        if (text) {\r\n            this.setFormattedText(text);\r\n        } else if (caption) {\r\n            this.setFormattedText(caption);\r\n        } else if (newItem && newItem.caption) {\r\n            element.innerHTML = newItem.caption;\r\n        } else {\r\n            element.innerText = null;\r\n        }\r\n\r\n        focusInput(element);\r\n    };\r\n\r\n    setFormattedText(formattedText) {\r\n        const { t } = this.props;\r\n        const element = this.captionRef.current;\r\n\r\n        if (!formattedText) {\r\n            element.innerText = null;\r\n            return;\r\n        }\r\n\r\n        const { text, entities } = formattedText;\r\n        try {\r\n            const nodes = getNodes(text, entities, t);\r\n            element.innerHTML = null;\r\n            nodes.forEach(x => {\r\n                element.appendChild(x);\r\n            });\r\n        } catch (e) {\r\n            element.innerText = text;\r\n        }\r\n    }\r\n\r\n    handleDone = () => {\r\n        const { chatId, newItem, onSend, onEdit } = this.props;\r\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\r\n\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n\r\n        element.innerText = null;\r\n\r\n        const { text, entities } = getEntities(innerHTML);\r\n\r\n        const caption = {\r\n            '@type': 'formattedText',\r\n            text,\r\n            entities\r\n        };\r\n\r\n        const isEditing = Boolean(editMessage);\r\n        if (isEditing) {\r\n            if (editMedia) {\r\n                const { photo } = editMedia;\r\n                if (!photo) return;\r\n\r\n                const { sizes } = photo;\r\n                if (!sizes) return;\r\n\r\n                const size = sizes[sizes.length - 1];\r\n\r\n                const { width, height } = size;\r\n\r\n                const content = {\r\n                    '@type': 'inputMessagePhoto',\r\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\r\n                    width,\r\n                    height,\r\n                    caption\r\n                };\r\n\r\n                onEdit(null, content);\r\n            } else {\r\n                onEdit(caption, null);\r\n            }\r\n\r\n            editMessageAction(chatId, 0);\r\n        } else {\r\n            const { media, file } = newItem;\r\n            const { audio, photo, document } = media;\r\n\r\n            let content = null;\r\n            if (photo) {\r\n                const { sizes } = photo;\r\n                if (!sizes) return;\r\n\r\n                const size = sizes[sizes.length - 1];\r\n\r\n                const { width, height } = size;\r\n\r\n                content = sendAsPhoto\r\n                    ? {\r\n                        '@type': 'inputMessagePhoto',\r\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                        width,\r\n                        height,\r\n                        caption\r\n                    }\r\n                    : {\r\n                        '@type': 'inputMessageDocument',\r\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                        thumbnail: null,\r\n                        caption\r\n                    };\r\n            } else if (document) {\r\n                content = {\r\n                    '@type': 'inputMessageDocument',\r\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                    thumbnail: null,\r\n                    caption\r\n                };\r\n            } else if (audio) {\r\n                const { duration, title, performer } = audio;\r\n\r\n                content = {\r\n                    '@type': 'inputMessageAudio',\r\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                    thumbnail: null,\r\n                    duration,\r\n                    title,\r\n                    performer,\r\n                    caption\r\n                };\r\n            }\r\n            if (!content) return;\r\n\r\n            onSend(content, file);\r\n        }\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { chatId, messageId, onCancel } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const isEditing = Boolean(message);\r\n\r\n        if (isEditing) {\r\n            editMessageAction(chatId, 0);\r\n        }\r\n\r\n        onCancel();\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\r\n\r\n        // fix CJK input\r\n        const { isComposing } = nativeEvent;\r\n        if (isComposing) {\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        switch (nativeEvent.code) {\r\n            case 'Enter':\r\n            case 'NumpadEnter': {\r\n                // enter+cmd, enter+ctrl, enter+shift\r\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\r\n                    document.execCommand('insertLineBreak');\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // enter\r\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\r\n                    this.handleDone();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + b\r\n            case 'KeyB': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleBold();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + i\r\n            case 'KeyI': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleItalic();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyK': {\r\n                // cmd + k\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleUrl();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // alt + cmd + k\r\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleMono();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // alt + cmd + n\r\n            case 'KeyN': {\r\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleClear();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClear = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n    };\r\n\r\n    handleBold = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('bold', false, null);\r\n    };\r\n\r\n    handleItalic = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('italic', false, null);\r\n    };\r\n\r\n    handleMono = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        let text = '';\r\n        const { selection } = this;\r\n        if (selection && !selection.isCollapsed) {\r\n            text = selection.toString();\r\n        }\r\n\r\n        if (!text) return;\r\n        text = `<code>${text}</code>`;\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('insertHTML', false, text);\r\n    };\r\n\r\n    handleUnderline = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('underline', false, null);\r\n    };\r\n\r\n    handleStrikeThrough = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('strikeThrough', false, null);\r\n    };\r\n\r\n    handleUrl = () => {\r\n        this.openEditUrlDialog();\r\n    };\r\n\r\n    openEditUrlDialog = () => {\r\n        let defaultText = '';\r\n        let defaultUrl = '';\r\n\r\n        const { selection, range } = this;\r\n        if (range) {\r\n            let { startContainer, endContainer } = range;\r\n            if (startContainer === endContainer) {\r\n                const { parentElement } = startContainer;\r\n                if (parentElement && parentElement.nodeName === 'A') {\r\n                    defaultText = parentElement.innerText;\r\n                    defaultUrl = parentElement.href;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!defaultText && selection && !selection.isCollapsed) {\r\n            defaultText = selection.toString();\r\n        }\r\n\r\n        this.setState({\r\n            openEditUrl: true,\r\n            defaultUrl,\r\n            defaultText\r\n        });\r\n    };\r\n\r\n    closeEditUrlDialog = () => {\r\n        this.setState(\r\n            {\r\n                openEditUrl: false\r\n            },\r\n            () => {\r\n                this.restoreSelection();\r\n            }\r\n        );\r\n    };\r\n\r\n    saveSelection() {\r\n        this.selection = document.getSelection();\r\n        if (!this.selection) return;\r\n        if (!this.selection.rangeCount) return;\r\n\r\n        this.range = this.selection.getRangeAt(0);\r\n    }\r\n\r\n    restoreSelection() {\r\n        const { range } = this;\r\n\r\n        if (!range) {\r\n            focusInput();\r\n            return;\r\n        }\r\n\r\n        const selection = document.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        this.captionRef.current.focus();\r\n    }\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleInput = () => {\r\n        this.clearInnerHtml();\r\n    };\r\n\r\n    clearInnerHtml() {\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    }\r\n\r\n    handleCancelEditUrl = () => {\r\n        this.closeEditUrlDialog();\r\n    };\r\n\r\n    handleDoneEditUrl = (text, url) => {\r\n        this.closeEditUrlDialog();\r\n        setTimeout(() => {\r\n            // edit current link node\r\n            const { range } = this;\r\n            if (range) {\r\n                const { startContainer, endContainer } = range;\r\n                if (startContainer && startContainer === endContainer) {\r\n                    const { parentNode } = startContainer;\r\n                    if (parentNode && parentNode.nodeName === 'A') {\r\n                        parentNode.href = url;\r\n                        parentNode.title = url;\r\n                        parentNode.innerText = text;\r\n\r\n                        // move cursor to end of editing node\r\n                        const { lastChild } = parentNode;\r\n                        if (lastChild) {\r\n                            const range = document.createRange();\r\n                            range.setStart(lastChild, lastChild.textContent.length);\r\n                            range.setEnd(lastChild, lastChild.textContent.length);\r\n\r\n                            const selection = document.getSelection();\r\n                            selection.removeAllRanges();\r\n                            selection.addRange(range);\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // replace selected text with new link node\r\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\r\n            document.execCommand('removeFormat', false, null);\r\n            document.execCommand('insertHTML', false, link);\r\n        }, 0);\r\n    };\r\n\r\n    handleEditMedia = event => {\r\n        const element = this.editMediaRef.current;\r\n        if (!element) return;\r\n\r\n        element.click();\r\n    };\r\n\r\n    handleEditMediaComplete = async () => {\r\n        const element = this.editMediaRef.current;\r\n        if (!element) return;\r\n\r\n        const { files } = element;\r\n        if (files.length === 0) return;\r\n\r\n        const [file, ...rest] = Array.from(files);\r\n        if (!file) return;\r\n\r\n        const editMedia = await getMediaPhotoFromFile(file);\r\n\r\n        this.setState({\r\n            editFile: file,\r\n            editMedia\r\n        });\r\n\r\n        element.value = '';\r\n    };\r\n\r\n    handleSendAsPhoto = () => {\r\n        const { sendAsPhoto } = this.state;\r\n\r\n        this.setState({\r\n            sendAsPhoto: !sendAsPhoto\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, newItem, open, t } = this.props;\r\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\r\n        if (!open) return null;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const isEditing = Boolean(message);\r\n        let isPhoto = false;\r\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\r\n            isPhoto = true;\r\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\r\n            isPhoto = true;\r\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\r\n            isPhoto = true;\r\n        }\r\n\r\n        let media = null;\r\n        if (isEditing) {\r\n            media =\r\n            editMedia\r\n                ? getMedia({ content: editMedia })\r\n                : getMedia(message, null);\r\n        } else if (newItem) {\r\n            media = getMedia({ content: newItem.media });\r\n        }\r\n        const doneLabel = isEditing ? t('Save') : t('Send');\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='edit-media-dialog-title'\r\n                onEnter={this.handleEnter}>\r\n                <div className='edit-media-dialog-content'>\r\n                    <div style={{ margin: 24 }}>{media}</div>\r\n                    { isEditing && (\r\n                        <>\r\n                            <IconButton\r\n                                disableRipple={true}\r\n                                aria-label={t('Edit')}\r\n                                className='edit-media-dialog-edit-button'\r\n                                size='small'\r\n                                onClick={this.handleEditMedia}>\r\n                                <EditIcon fontSize='inherit' />\r\n                            </IconButton>\r\n                            <input\r\n                                ref={this.editMediaRef}\r\n                                className='inputbox-attach-button'\r\n                                type='file'\r\n                                accept='image/*'\r\n                                onChange={this.handleEditMediaComplete}\r\n                            />\r\n                        </>\r\n                    )}\r\n                    { !isEditing && isPhoto && (\r\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\r\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\r\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\r\n                        </RadioGroup>\r\n                    )}\r\n                </div>\r\n                <div\r\n                    ref={this.captionRef}\r\n                    id='edit-media-dialog-caption'\r\n                    className='scrollbars-hidden'\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    placeholder={t('Caption')}\r\n                    onKeyDown={this.handleKeyDown}\r\n                    onPaste={this.handlePaste}\r\n                    onInput={this.handleInput}\r\n                />\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {doneLabel}\r\n                    </Button>\r\n                </DialogActions>\r\n                <EditUrlDialog\r\n                    open={openEditUrl}\r\n                    defaultText={defaultText}\r\n                    defaultUrl={defaultUrl}\r\n                    onDone={this.handleDoneEditUrl}\r\n                    onCancel={this.handleCancelEditUrl}\r\n                />\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nEditMediaDialog.propTypes = {\r\n    open: PropTypes.bool,\r\n\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    newItem: PropTypes.object,\r\n\r\n    onSend: PropTypes.func,\r\n    onEdit: PropTypes.func,\r\n    onCancel: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(EditMediaDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass OutputTypingManager {\r\n    constructor(chatId) {\r\n        this.chatId = chatId;\r\n        this.lastAction = null;\r\n    }\r\n\r\n    setTyping(action) {\r\n        if (!this.chatId) return;\r\n\r\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\r\n            let now = new Date();\r\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\r\n            if (this.lastTypingDate && this.lastTypingDate > now) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.lastAction = action;\r\n        this.lastTypingDate = new Date();\r\n\r\n        TdLibController.send({\r\n            '@type': 'sendChatAction',\r\n            chat_id: this.chatId,\r\n            action: action\r\n        });\r\n    }\r\n}\r\n\r\nexport default OutputTypingManager;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport emojiRegex from 'emoji-regex';\r\nimport MediaRecorder from 'opus-media-recorder';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport DoneIcon from '../../Assets/Icons/Done';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\r\nimport SendIcon from '../../Assets/Icons/Send';\r\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport AttachButton from './../ColumnMiddle/AttachButton';\r\nimport CreatePollDialog from '../Popup/CreatePollDialog';\r\nimport EditUrlDialog from '../Popup/EditUrlDialog';\r\nimport InputBoxHeader from './InputBoxHeader';\r\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\r\nimport RecordTimer from './RecordTimer';\r\nimport EditMediaDialog from '../Popup/EditMediaDialog';\r\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\r\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, getChatFullInfo, isMeChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\r\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\r\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\r\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\r\nimport { getSize, readImageSize } from '../../Utils/Common';\r\nimport { editMessage, replyMessage } from '../../Actions/Client';\r\nimport { isDeletedUser, isMeUser } from '../../Utils/User';\r\nimport { PHOTO_SIZE, SEND_BY_CTRL_ENTER_KEY, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\r\nimport AnimationStore from '../../Stores/AnimationStore';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InputBox.css';\r\n\r\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\r\n\r\nclass InputBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.attachDocumentRef = React.createRef();\r\n        this.attachPhotoRef = React.createRef();\r\n        this.newMessageRef = React.createRef();\r\n\r\n        const chatId = AppStore.getChatId();\r\n\r\n        this.state = {\r\n            chatId,\r\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\r\n            editMessageId: 0,\r\n            recordingReady: true,\r\n            recordingTime: null,\r\n            recordPermissionDenied: false,\r\n            sendFile: null\r\n        };\r\n\r\n        document.execCommand('defaultParagraphSeparator', false, 'br');\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { t } = this.props;\r\n        const {\r\n            chatId,\r\n            newDraft,\r\n            files,\r\n            replyToMessageId,\r\n            editMessageId,\r\n            openEditMedia,\r\n            openEditUrl,\r\n            sendFile,\r\n            recordingReady,\r\n            recordingTime,\r\n            recordPermissionDenied,\r\n            shook\r\n        } = this.state;\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.newDraft !== newDraft) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.files !== files) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.replyToMessageId !== replyToMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.editMessageId !== editMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.sendFile !== sendFile) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openEditUrl !== openEditUrl) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openEditMedia !== openEditMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.recordingTime !== recordingTime) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.recordingReady !== recordingReady) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.shook !== shook) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    loadDraft() {\r\n        this.setDraft();\r\n        this.setInputFocus();\r\n        this.handleInput();\r\n    }\r\n\r\n    saveDraft() {\r\n        const { chatId, editMessageId, replyToMessageId } = this.state;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        let innerHTML = null;\r\n        if (editMessageId) {\r\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\r\n        } else {\r\n            innerHTML = element.innerHTML;\r\n        }\r\n\r\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\r\n        this.setChatDraftMessage(draftMessage);\r\n    }\r\n\r\n    selectionChangeListener = () => {\r\n        // console.log('[ed] selectionchange', document.activeElement);\r\n        if (document.activeElement === this.newMessageRef.current) {\r\n            this.saveSelection();\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\r\n\r\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\r\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\r\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\r\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\r\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\r\n        MessageStore.on('clientUpdateSendText', this.onClientUpdateSendText);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\r\n\r\n        this.loadDraft();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.saveDraft();\r\n\r\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\r\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\r\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\r\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\r\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('clientUpdateSendText', this.onClientUpdateSendText);\r\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\r\n\r\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\r\n\r\n        this.handleCancelRecord();\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chatId) return;\r\n    };\r\n\r\n    onClientUpdateSendText = update => {\r\n        const { text } = update;\r\n\r\n        if (!text) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        element.innerText = text;\r\n        focusInput(element);\r\n    }\r\n\r\n    onClientUpdateInputShake = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { shook } = this.state;\r\n\r\n        if (shook) {\r\n            this.setState({ shook: false }, () => {\r\n                setTimeout(() => {\r\n                    this.setState({ shook: true });\r\n                }, 0);\r\n            });\r\n        } else {\r\n            this.setState({ shook: true });\r\n        }\r\n    };\r\n\r\n    onClientUpdateSendFiles = update => {\r\n        const { files } = update;\r\n        if (!files) return;\r\n\r\n        this.handleSendFiles(Array.from(files));\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId, editMessageId } = this.state;\r\n        const { chat_id, message_ids, is_permanent } = update;\r\n\r\n        if (!editMessageId) return;\r\n        if (!is_permanent) return;\r\n        if (chatId !== chat_id) return;\r\n        if (message_ids.indexOf(editMessageId) === -1) return;\r\n\r\n        this.handleCancel();\r\n    };\r\n\r\n    onClientUpdateEditMessage = update => {\r\n        const { chatId, messageId } = update;\r\n        const { recordingTime } = this.state;\r\n        if (recordingTime) return;\r\n        if (this.state.chatId !== chatId) return;\r\n\r\n        if (!messageId) {\r\n            this.restoreDraftAndSelection();\r\n        } else {\r\n            this.saveDraftAndSelection();\r\n        }\r\n\r\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\r\n        this.setState(\r\n            {\r\n                editMessageId: messageId,\r\n                openEditMedia\r\n            },\r\n            () => {\r\n                if (!this.state.openEditMedia) {\r\n                    this.setEditMessage();\r\n                    this.handleInput();\r\n                    setTimeout(() => {\r\n                        this.focusInput();\r\n                    }, 0);\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    restoreDraftAndSelection() {\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        const { beforeEditText } = this;\r\n\r\n        if (beforeEditText) {\r\n            element.innerHTML = beforeEditText.innerHTML;\r\n\r\n            if (!beforeEditText.range) {\r\n                this.focusInput();\r\n                return;\r\n            }\r\n\r\n            const selection = document.getSelection();\r\n            selection.removeAllRanges();\r\n            selection.addRange(beforeEditText.range);\r\n\r\n            element.focus();\r\n        } else {\r\n            element.innerHTML = null;\r\n            this.focusInput();\r\n        }\r\n\r\n        this.handleInput();\r\n    }\r\n\r\n    saveDraftAndSelection() {\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        this.beforeEditText = {\r\n            innerHTML: element.innerHTML,\r\n            range: this.range\r\n        };\r\n    }\r\n\r\n    onClientUpdateFocusWindow = update => {\r\n        const { focused } = update;\r\n        if (focused) return;\r\n\r\n        this.saveDraft();\r\n    };\r\n\r\n    onUpdateChatDraftMessage = update => {\r\n        const { chat_id } = update;\r\n        const { chatId, recordingTime } = this.state;\r\n\r\n        if (recordingTime) return;\r\n        if (chatId !== chat_id) return;\r\n\r\n        this.loadDraft();\r\n    };\r\n\r\n    onClientUpdateAnimationSend = update => {\r\n        const { animation: item } = update;\r\n        if (!item) return;\r\n\r\n        const { animation, thumbnail, width, height, duration } = item;\r\n        if (!animation) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        element.innerText = null;\r\n\r\n        this.restoreSelection();\r\n\r\n        const content = {\r\n            '@type': 'inputMessageAnimation',\r\n            animation: {\r\n                '@type': 'inputFileId',\r\n                id: animation.id\r\n            },\r\n            width,\r\n            height,\r\n            duration\r\n        };\r\n\r\n        if (thumbnail) {\r\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\r\n\r\n            content.thumbnail = {\r\n                '@type': 'inputThumbnail',\r\n                thumbnail: {\r\n                    '@type': 'inputFileId',\r\n                    id: file.id\r\n                },\r\n                width: thumbnailWidth,\r\n                height: thumbnailHeight\r\n            };\r\n        }\r\n\r\n        this.sendMessage(content, false, result => {});\r\n    };\r\n\r\n    onClientUpdateStickerSend = update => {\r\n        const { sticker: item } = update;\r\n        if (!item) return;\r\n\r\n        const { sticker, thumbnail, width, height } = item;\r\n        if (!sticker) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        element.innerText = null;\r\n\r\n        this.restoreSelection();\r\n\r\n        const content = {\r\n            '@type': 'inputMessageSticker',\r\n            sticker: {\r\n                '@type': 'inputFileId',\r\n                id: sticker.id\r\n            },\r\n            width,\r\n            height\r\n        };\r\n\r\n        if (thumbnail) {\r\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\r\n\r\n            content.thumbnail = {\r\n                '@type': 'inputThumbnail',\r\n                thumbnail: {\r\n                    '@type': 'inputFileId',\r\n                    id: file.id\r\n                },\r\n                width: thumbnailWidth,\r\n                height: thumbnailHeight\r\n            };\r\n        }\r\n\r\n        this.sendMessage(content, false, result => {});\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateLocalStickersHint',\r\n            hint: null\r\n        });\r\n    };\r\n\r\n    onClientUpdateReply = update => {\r\n        const { chatId: currentChatId, recordingTime } = this.state;\r\n        const { chatId, messageId } = update;\r\n\r\n        if (currentChatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ replyToMessageId: messageId });\r\n\r\n        if (messageId && !recordingTime) {\r\n            this.setInputFocus();\r\n        }\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatId } = this.state;\r\n        if (chatId === update.nextChatId) return;\r\n\r\n        this.saveDraft();\r\n        this.beforeEditText = null;\r\n        this.setState(\r\n            {\r\n                chatId: update.nextChatId,\r\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\r\n                editMessageId: 0,\r\n                openEditUrl: false\r\n            },\r\n            () => {\r\n                this.loadDraft();\r\n            }\r\n        );\r\n\r\n        this.handleCancelRecord();\r\n    };\r\n\r\n    setDraft = () => {\r\n        const { chatId } = this.state;\r\n\r\n        const element = this.newMessageRef.current;\r\n\r\n        const { chatSelectOptions } = AppStore;\r\n        if (chatSelectOptions && chatSelectOptions.switchInline) {\r\n            this.setFormattedText({ '@type': 'formattedText', text: chatSelectOptions.switchInline, entities: [] });\r\n            return;\r\n        }\r\n\r\n        const formattedText = getChatDraft(chatId);\r\n        if (formattedText) {\r\n            this.setFormattedText(formattedText);\r\n            this.setState({\r\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\r\n            });\r\n        } else {\r\n            element.innerText = null;\r\n        }\r\n    };\r\n\r\n    setEditMessage() {\r\n        const { chatId, editMessageId } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, editMessageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        const { text, caption } = content;\r\n        if (!text && !caption) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n\r\n        if (text) {\r\n            this.setFormattedText(text);\r\n        } else if (caption) {\r\n            this.setFormattedText(caption);\r\n        } else {\r\n            element.innerText = null;\r\n        }\r\n    }\r\n\r\n    setFormattedText(formattedText) {\r\n        const { t } = this.props;\r\n        const element = this.newMessageRef.current;\r\n\r\n        if (!formattedText) {\r\n            element.innerText = null;\r\n            return;\r\n        }\r\n\r\n        const { text, entities } = formattedText;\r\n        try {\r\n            const nodes = getNodes(text, entities, t);\r\n            element.innerHTML = null;\r\n            nodes.forEach(x => {\r\n                element.appendChild(x);\r\n            });\r\n        } catch (e) {\r\n            element.innerText = text;\r\n        }\r\n    }\r\n\r\n    setInputFocus = () => {\r\n        const { recordingTime } = this.state;\r\n        if (recordingTime) return;\r\n\r\n        setTimeout(() => {\r\n            const element = this.newMessageRef.current;\r\n\r\n            focusInput(element);\r\n        }, 100);\r\n    };\r\n\r\n    setChatDraftMessage = chatDraftMessage => {\r\n        if (!chatDraftMessage) return;\r\n\r\n        const { chatId, draftMessage } = chatDraftMessage;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setChatDraftMessage',\r\n            chat_id: chatId,\r\n            draft_message: draftMessage\r\n        });\r\n    };\r\n\r\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { draft_message } = chat;\r\n        const { text, entities } = getEntities(innerHTML);\r\n        const draftMessage =\r\n            (text && text.length > 0) || entities.length > 0\r\n                ? {\r\n                      '@type': 'draftMessage',\r\n                      reply_to_message_id: replyToMessageId,\r\n                      input_message_text: {\r\n                          '@type': 'inputMessageText',\r\n                          text: {\r\n                              '@type': 'formattedText',\r\n                              text,\r\n                              entities\r\n                          },\r\n                          disable_web_page_preview: false,\r\n                          clear_draft: false\r\n                      }\r\n                  }\r\n                : null;\r\n\r\n        if (draftEquals(draft_message, draftMessage)) {\r\n            return null;\r\n        }\r\n\r\n        return { chatId, draftMessage };\r\n    };\r\n\r\n    handleSubmit = (startRecord = true) => {\r\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\r\n\r\n        if (recordingTime) {\r\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\r\n                return;\r\n            }\r\n\r\n            this.handleStopRecord();\r\n            return;\r\n        } else if (recordingReady) {\r\n            if (startRecord) this.handleRecord();\r\n            return;\r\n        }\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        let { innerHTML } = element;\r\n\r\n        element.innerText = null;\r\n        this.handleInput();\r\n\r\n        if (!innerHTML) return;\r\n        if (!innerHTML.trim()) return;\r\n\r\n        const { text, entities } = getEntities(innerHTML);\r\n\r\n        const formattedText = {\r\n            '@type': 'formattedText',\r\n            text,\r\n            entities\r\n        };\r\n        const inputContent = {\r\n            '@type': 'inputMessageText',\r\n            text: formattedText,\r\n            disable_web_page_preview: false,\r\n            clear_draft: true\r\n        };\r\n\r\n        if (editMessageId) {\r\n            const editedMessage = MessageStore.get(chatId, editMessageId);\r\n            if (!editedMessage) return;\r\n\r\n            const { content } = editedMessage;\r\n            if (!content) return;\r\n\r\n            const { text, caption } = content;\r\n            if (text) {\r\n                this.editMessageText(inputContent, result => {});\r\n            } else if (caption) {\r\n                this.editMessageCaption(formattedText);\r\n            }\r\n            editMessage(chatId, 0);\r\n        } else {\r\n            this.sendMessage(inputContent, false, result => {});\r\n        }\r\n    };\r\n\r\n    handleAttachPoll = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewPoll'\r\n        });\r\n    };\r\n\r\n    handleAttachPhoto = () => {\r\n        if (!this.attachPhotoRef) return;\r\n\r\n        this.attachPhotoRef.current.click();\r\n    };\r\n\r\n    async getNewItem(file, sendAsFile) {\r\n        if (!file) return null;\r\n\r\n        const caption = this.newMessageRef.current.innerHTML;\r\n        if (caption) {\r\n            this.newMessageRef.current.innerHTML = null;\r\n            this.handleInput();\r\n        }\r\n\r\n        const media = sendAsFile\r\n            ? await getMediaPhotoFromFile(file)\r\n            : await getMediaDocumentFromFile(file);\r\n\r\n        return {\r\n            file,\r\n            media,\r\n            caption\r\n        }\r\n    };\r\n\r\n    handleAttachPhotoComplete = async () => {\r\n        const { files } = this.attachPhotoRef.current;\r\n        if (files.length === 0) return;\r\n\r\n        if (files.length === 1) {\r\n            const [ newFile, ...rest ] = Array.from(files);\r\n            if (!newFile) return;\r\n\r\n            const newItem = await this.getNewItem(newFile, true);\r\n\r\n            this.setState({\r\n                openEditMedia: true,\r\n                newItem\r\n            });\r\n        } else {\r\n            Array.from(files).forEach(async file => {\r\n                const [width, height] = await readImageSize(file);\r\n\r\n                const content = {\r\n                    '@type': 'inputMessagePhoto',\r\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\r\n                    width,\r\n                    height\r\n                };\r\n\r\n                this.handleSendPhoto(content, file);\r\n            });\r\n        }\r\n\r\n        this.attachPhotoRef.current.value = '';\r\n    };\r\n\r\n    handleAttachDocument = () => {\r\n        if (!this.attachDocumentRef) return;\r\n\r\n        this.attachDocumentRef.current.click();\r\n    };\r\n\r\n    handleAttachDocumentComplete = async () => {\r\n        const { files } = this.attachDocumentRef.current;\r\n        if (files.length === 0) return;\r\n\r\n        if (files.length === 1) {\r\n            const [ newFile, ...rest ] = Array.from(files);\r\n            if (!newFile) return;\r\n\r\n            const newItem = await this.getNewItem(newFile, false);\r\n\r\n            this.setState({\r\n                openEditMedia: true,\r\n                newItem\r\n            });\r\n        } else {\r\n            Array.from(files).forEach(file => {\r\n                const content = {\r\n                    '@type': 'inputMessageDocument',\r\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\r\n                };\r\n\r\n                this.handleSendDocument(content, file);\r\n            });\r\n        }\r\n\r\n        this.attachDocumentRef.current.value = '';\r\n    };\r\n\r\n    setTyping() {\r\n        const { chatId, editMessageId } = this.state;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        if (!innerText) return;\r\n        if (isMeChat(chatId)) return;\r\n        if (editMessageId) return;\r\n\r\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\r\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\r\n    }\r\n\r\n    setHints() {\r\n        const { editMessageId } = this.state;\r\n        const innerText = this.newMessageRef.current.innerText;\r\n        if (!innerText || innerText.length > 11 || editMessageId) {\r\n            const { hint } = StickerStore;\r\n            if (hint) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateLocalStickersHint',\r\n                    hint: null\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        const t0 = performance.now();\r\n        const regex = emojiRegex();\r\n        let match = regex.exec(innerText);\r\n        const t1 = performance.now();\r\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\r\n        if (!match || innerText !== match[0]) {\r\n            const { hint } = StickerStore;\r\n            if (hint) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateLocalStickersHint',\r\n                    hint: null\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        const timestamp = Date.now();\r\n        TdLibController.send({\r\n            '@type': 'getStickers',\r\n            emoji: match[0],\r\n            limit: 100\r\n        }).then(stickers => {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateLocalStickersHint',\r\n                hint: {\r\n                    timestamp,\r\n                    emoji: match[0],\r\n                    stickers\r\n                }\r\n            });\r\n        });\r\n\r\n        TdLibController.send({\r\n            '@type': 'searchStickers',\r\n            emoji: match[0],\r\n            limit: 100\r\n        }).then(stickers => {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateRemoteStickersHint',\r\n                hint: {\r\n                    timestamp,\r\n                    emoji: match[0],\r\n                    stickers\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    handleClear = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n    };\r\n\r\n    handleBold = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('bold', false, null);\r\n    };\r\n\r\n    handleItalic = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('italic', false, null);\r\n    };\r\n\r\n    handleMono = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        let text = '';\r\n        const { selection } = this;\r\n        if (selection && !selection.isCollapsed) {\r\n            text = selection.toString();\r\n        }\r\n\r\n        if (!text) return;\r\n        text = `<code>${text}</code>`;\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('insertHTML', false, text);\r\n    };\r\n\r\n    handleUnderline = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('underline', false, null);\r\n    };\r\n\r\n    handleStrikeThrough = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('strikeThrough', false, null);\r\n    };\r\n\r\n    handleUrl = () => {\r\n        this.openEditUrlDialog();\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { chatId, editMessageId, replyToMessageId } = this.state;\r\n        if (editMessageId) {\r\n            editMessage(chatId, 0);\r\n            return true;\r\n        } else if (replyToMessageId) {\r\n            replyMessage(chatId, 0);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\r\n        const { editMessageId, replyToMessageId } = this.state;\r\n\r\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\r\n        //\r\n        // setTimeout(() => {\r\n        //     const { innerText } = this.newMessageRef.current;\r\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\r\n        // }, 1000);\r\n\r\n        // fix CJK input\r\n        const { isComposing } = nativeEvent;\r\n        if (isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (nativeEvent.code) {\r\n            // ctrl+alt+0 fix\r\n            case 'Digit0': {\r\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\r\n                    if (editMessageId) return;\r\n                    if (replyToMessageId) return;\r\n\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            }\r\n            case 'Enter':\r\n            case 'NumpadEnter': {\r\n                const sendByCtrlEnter = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\r\n                if (sendByCtrlEnter && sendByCtrlEnter.value) {\r\n                    // enter+cmd, enter+ctrl, enter+shift\r\n                    if (!altKey && !ctrlKey && !metaKey && !repeat) {\r\n                        document.execCommand('insertLineBreak');\r\n\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                    // enter+cmd, enter+ctrl\r\n                    else if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                        this.handleSubmit(false);\r\n\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                } else {\r\n                    // enter+cmd, enter+ctrl, enter+shift\r\n                    if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\r\n                        document.execCommand('insertLineBreak');\r\n\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                    // enter\r\n                    else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\r\n                        this.handleSubmit(false);\r\n\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            // esc\r\n            case 'Escape': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    if (!repeat && this.handleCancel()) {\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            // arrow up\r\n            case 'ArrowUp': {\r\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    const element = this.newMessageRef.current;\r\n                    if (element && !element.innerText) {\r\n                        const { editMessageId } = this.state;\r\n                        if (editMessageId) return;\r\n\r\n                        TdLibController.clientUpdate({\r\n                            '@type': 'clientUpdateTryEditMessage'\r\n                        });\r\n\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            // cmd + b\r\n            case 'KeyB': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleBold();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + i\r\n            case 'KeyI': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleItalic();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyK': {\r\n                // cmd + k\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleUrl();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // alt + cmd + k\r\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleMono();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // alt + cmd + n\r\n            case 'KeyN': {\r\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleClear();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleSendPhoto = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => {\r\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\r\n            if (cachedMessage != null) {\r\n                this.handleSendingMessage(cachedMessage, file);\r\n            }\r\n\r\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\r\n        });\r\n    };\r\n\r\n    handleSendPoll = poll => {\r\n        this.sendMessage(poll, true, () => {});\r\n    };\r\n\r\n    handleSendDocument = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\r\n    };\r\n\r\n    handleSendAudio = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\r\n    };\r\n\r\n    handleSendVoiceNote = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\r\n    };\r\n\r\n    async handleSendFiles(files) {\r\n        if (!files) return;\r\n        if (!files.length) return;\r\n\r\n        if (files.length === 1) {\r\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\r\n            if (!newItem) return;\r\n\r\n            this.setState({\r\n                openEditMedia: true,\r\n                newItem\r\n            });\r\n        } else {\r\n            this.setState({ files });\r\n        }\r\n    }\r\n\r\n    handlePaste = async event => {\r\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\r\n        if (!items) return;\r\n\r\n        const files = [];\r\n        Array.from(items).forEach(item => {\r\n            if (item.kind.indexOf('file') === 0) {\r\n                const file = item.getAsFile();\r\n                if (file) {\r\n                    files.push(file);\r\n                }\r\n            }\r\n        });\r\n\r\n        if (files.length > 0) {\r\n            event.preventDefault();\r\n\r\n            this.handleSendFiles(files);\r\n            return;\r\n        }\r\n\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n            return;\r\n        }\r\n    };\r\n\r\n    handlePasteConfirm = () => {\r\n        const { files } = this.state;\r\n        if (!files) return;\r\n        if (!files.length) return;\r\n\r\n        files.forEach(file => {\r\n            const content = {\r\n                '@type': 'inputMessageDocument',\r\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\r\n            };\r\n\r\n            this.handleSendDocument(content, file);\r\n        });\r\n\r\n        this.handlePasteCancel();\r\n    };\r\n\r\n    handlePasteCancel = () => {\r\n        this.setState({ files: null });\r\n    };\r\n\r\n    handleUpdateDraftConfirm = () => {\r\n        const { newDraft } = this.state;\r\n        if (!newDraft) return;\r\n\r\n        this.loadDraft();\r\n        this.handleUpdateDraftCancel();\r\n    };\r\n\r\n    handleUpdateDraftCancel = () => {\r\n        this.setState({ newDraft: null });\r\n    };\r\n\r\n    handleSendingMessage = (message, blob) => {\r\n        if (!message) return;\r\n\r\n        const { sending_state, content, chat_id, id } = message;\r\n        if (!sending_state) return;\r\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\r\n        if (content['@type'] !== 'messagePhoto') return;\r\n\r\n        const { photo } = content;\r\n        if (!photo) return;\r\n\r\n        const size = getSize(photo.sizes, PHOTO_SIZE);\r\n        if (!size) return;\r\n\r\n        const { photo: file } = size;\r\n        if (!file) return;\r\n\r\n        FileStore.setBlob(file.id, blob);\r\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\r\n    };\r\n\r\n    async editMessageMedia(content) {\r\n        const { chatId, editMessageId } = this.state;\r\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\r\n\r\n        if (!chatId) return;\r\n        if (!editMessageId) return;\r\n        if (!content) return;\r\n\r\n        return TdLibController.send({\r\n            '@type': 'editMessageMedia',\r\n            chat_id: chatId,\r\n            message_id: editMessageId,\r\n            input_message_content: content\r\n        });\r\n    }\r\n\r\n    editMessageCaption(caption) {\r\n        const { chatId, editMessageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!editMessageId) return;\r\n        if (!caption) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'editMessageCaption',\r\n            chat_id: chatId,\r\n            message_id: editMessageId,\r\n            caption\r\n        });\r\n    }\r\n\r\n    async editMessageText(content, callback) {\r\n        const { chatId, editMessageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!editMessageId) return;\r\n        if (!content) return;\r\n\r\n        try {\r\n            const result = await TdLibController.send({\r\n                '@type': 'editMessageText',\r\n                chat_id: chatId,\r\n                message_id: editMessageId,\r\n                input_message_content: content\r\n            });\r\n\r\n            callback(result);\r\n        } finally {\r\n        }\r\n    }\r\n\r\n    sendMessage = async (content, clearDraft, callback) => {\r\n        const { chatId, replyToMessageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!content) return;\r\n\r\n        try {\r\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n            const result = await TdLibController.send({\r\n                '@type': 'sendMessage',\r\n                chat_id: chatId,\r\n                reply_to_message_id: replyToMessageId,\r\n                input_message_content: content\r\n            });\r\n\r\n            this.setState({ replyToMessageId: 0 }, () => {\r\n                if (clearDraft) {\r\n                    this.saveDraft();\r\n                }\r\n            });\r\n            //MessageStore.set(result);\r\n\r\n            TdLibController.send({\r\n                '@type': 'viewMessages',\r\n                chat_id: chatId,\r\n                message_ids: [result.id]\r\n            });\r\n\r\n            if (replyToMessageId) {\r\n                replyMessage(chatId, 0);\r\n            }\r\n\r\n            callback(result);\r\n        } catch (error) {\r\n            alert('sendMessage error ' + JSON.stringify(error));\r\n        }\r\n    };\r\n\r\n    handleEmojiSelect = emoji => {\r\n        if (!emoji) return;\r\n\r\n        this.restoreSelection();\r\n        document.execCommand('insertText', false, emoji.native);\r\n        this.handleInput();\r\n    };\r\n\r\n    handleInput = async event => {\r\n        this.setTyping();\r\n        this.setHints();\r\n        this.setRecordingReadyState();\r\n\r\n        // const { text, position } = this.getTextAndCaretPosition();\r\n        // this.searchUsernameOrHashtag(text, position, [], false);\r\n    };\r\n\r\n    getTextAndCaretPosition = () => {\r\n        const { current: input } = this.newMessageRef;\r\n        if (!input) return;\r\n\r\n        input.focus()\r\n        let _range = document.getSelection().getRangeAt(0);\r\n        let range = _range.cloneRange();\r\n        range.selectNodeContents(input);\r\n        range.setEnd(_range.endContainer, _range.endOffset);\r\n\r\n        return { text: input.innerText, position: range.toString().length };\r\n    };\r\n\r\n    searchUsernameOrHashtag(text, position, messages, usernameOnly) {\r\n        const { chatId } = this.state;\r\n\r\n        const searchResultUsernames = [];\r\n\r\n        if (this.cancelDelayRunnable) {\r\n            clearTimeout(this.cancelDelayRunnable);\r\n            this.cancelDelayRunnable = null;\r\n        }\r\n\r\n        const info = getChatFullInfo(chatId);\r\n        const needUsernames = true;\r\n        const needBotContext = true;\r\n\r\n        const now = Date.now();\r\n        this.now = now;\r\n\r\n        let searchPosition = position;\r\n        if (text.length > 0) {\r\n            searchPosition--;\r\n        }\r\n\r\n        this.lastText = text;\r\n        this.lastUsernameOnly = usernameOnly;\r\n\r\n        let foundType = -1;\r\n        let result = '';\r\n        let resultStartPosition;\r\n        let resultLength;\r\n\r\n        let dogPosition = -1;\r\n        if (usernameOnly) {\r\n            result += text.substring(1);\r\n            resultStartPosition = 0;\r\n            resultLength = result.length;\r\n            foundType = 0;\r\n        } else {\r\n            for (let i = searchPosition; i >= 0; i--) {\r\n                if (i >= text.length){\r\n                    continue;\r\n                }\r\n                let ch = text[i];\r\n                if (i === 0 || text[i - 1] === ' ' || text[i - 1] === '\\n' || text[i - 1] === ':') {\r\n                    if (ch === '@') {\r\n                        if (needUsernames || needBotContext && i === 0){\r\n                            if (!info && i !== 0) {\r\n                                this.lastText = text;\r\n                                this.lastPosition = position;\r\n                                this.messages = messages;\r\n                                this.closeHints(now);\r\n                                return;\r\n                            }\r\n                            dogPosition = i;\r\n                            foundType = 0;\r\n                            resultStartPosition = i;\r\n                            resultLength = result.length + 1;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                result = ch + result;\r\n            }\r\n        }\r\n\r\n        if (foundType === -1) {\r\n            this.closeHints(now);\r\n            return;\r\n        }\r\n\r\n        if (foundType === 0) {\r\n            const users = [];\r\n            const usersMap = new Map();\r\n            for (let i = 0; i < Math.min(100, messages.length); i++) {\r\n                const { sender } = messages[i];\r\n                if (sender && sender.user_id && !usersMap.has(sender.user_id)) {\r\n                    usersMap.set(sender.user_id, sender.user_id);\r\n                    users.push(sender.user_id);\r\n                }\r\n            }\r\n\r\n            let usernameString = result.substr(resultStartPosition, resultLength).toLowerCase();\r\n            const hasSpace = usernameString.indexOf(' ') >= 0;\r\n            const newResult = [];\r\n            const newResultsMap = new Map();\r\n            const newMap = new Map();\r\n\r\n            const inlineBots = [];\r\n            if (!usernameOnly && needBotContext && dogPosition === 0 && inlineBots.length > 0) {\r\n\r\n            }\r\n\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat && info && info.members) {\r\n                for (let i = -1; i < info.members.length; i++) {\r\n                    let username;\r\n                    let firstName;\r\n                    let lastName;\r\n                    let object;\r\n                    let id;\r\n                    if (i === -1) {\r\n                        if (!usernameString.length) {\r\n                            newResult.push(chat);\r\n                            continue;\r\n                        }\r\n                        firstName = chat.title;\r\n                        lastName = '';\r\n                        username = chat.username;\r\n                        object = chat;\r\n                        id = -chat.id;\r\n                    } else {\r\n                        const { user_id } = info.members[i];\r\n                        const user = UserStore.get(user_id);\r\n                        if (!user || !usernameOnly && isMeUser(user_id) || newResultsMap.has(user_id)) {\r\n                            continue;\r\n                        }\r\n                        if (!usernameString.length) {\r\n                            if (!isDeletedUser(user_id)) {\r\n                                newResult.push(user);\r\n                                continue;\r\n                            }\r\n                        }\r\n                        firstName = user.first_name;\r\n                        lastName = user.last_name;\r\n                        username = user.username;\r\n                        object = user;\r\n                        id = user.id;\r\n                    }\r\n\r\n                    if (username.length > 0 && username.toLowerCase().startsWith(usernameString)\r\n                        || firstName.length > 0 && firstName.toLowerCase().startsWith(usernameString)\r\n                        || lastName.length > 0 && lastName.toLowerCase().startsWith(usernameString)\r\n                        || hasSpace && `${firstName} ${lastName}`.toLowerCase().startsWith(usernameString)) {\r\n                        newResult.push(object);\r\n                        newMap.set(id, object);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (isSupergroup(chatId) && usernameString.length > 0) {\r\n                if (newResult.length < 5) {\r\n                    this.cancelDelayRunnable = setTimeout(() => {\r\n                        this.cancelDelayRunnable = null;\r\n                        this.showUsersResult(now, newResult, newMap, true);\r\n                    }, 0);\r\n                } else {\r\n                    this.showUsersResult(now, newResult, newMap, true);\r\n                }\r\n\r\n                setTimeout(async () => {\r\n                    if (this.now !== now) {\r\n                        return;\r\n                    }\r\n\r\n                    const result = await TdLibController.send({\r\n                        '@type': 'searchChatMembers',\r\n                        chat_id: chatId,\r\n                        query: usernameString,\r\n                        limit: 20,\r\n                        filter: { '@type': 'chatMembersFilterMention', message_thread_id: 0 }\r\n                    });\r\n\r\n                    if (this.now !== now) {\r\n                        return;\r\n                    }\r\n\r\n                    const { members } = result;\r\n                    if (members.length > 0) {\r\n                        for (let i = 0; i < members.length; i++) {\r\n                            const { user_id } = members[i];\r\n                            if (isMeUser(user_id)) {\r\n                                continue;\r\n                            }\r\n                            const user = UserStore.get(user_id);\r\n                            if (!user) {\r\n                                continue;\r\n                            }\r\n\r\n                            searchResultUsernames.push(user);\r\n                        }\r\n\r\n                        this.notifyDataSetChanged(now, searchResultUsernames);\r\n                    }\r\n\r\n\r\n                }, 200);\r\n            } else {\r\n                this.showUsersResult(now, newResult, newMap, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    notifyDataSetChanged(id, searchResultUsernames) {\r\n        console.log('[search] global', searchResultUsernames);\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateHintsGlobal',\r\n            id,\r\n            global: searchResultUsernames\r\n        });\r\n    }\r\n\r\n    showUsersResult(id, newResult, newMap, notify) {\r\n        console.log('[search] local', newResult);\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateHintsLocal',\r\n            id,\r\n            local: newResult\r\n        });\r\n    }\r\n\r\n    closeHints(id) {\r\n        console.log('[search] close');\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateHintsClose',\r\n            id\r\n        });\r\n    }\r\n\r\n    openHints() {\r\n\r\n    }\r\n\r\n    setRecordingReadyState() {\r\n        const { editMessageId } = this.state;\r\n        const innerText = this.newMessageRef.current.innerText;\r\n        if (!innerText && !editMessageId) {\r\n            this.setState({\r\n                recordingReady: true\r\n            });\r\n        } else {\r\n            this.setState({\r\n                recordingReady: false\r\n            });\r\n        }\r\n    }\r\n\r\n    openEditUrlDialog = () => {\r\n        let defaultText = '';\r\n        let defaultUrl = '';\r\n\r\n        const { selection, range } = this;\r\n        if (range) {\r\n            let { startContainer, endContainer } = range;\r\n            if (startContainer === endContainer) {\r\n                const { parentElement } = startContainer;\r\n                if (parentElement && parentElement.nodeName === 'A') {\r\n                    defaultText = parentElement.innerText;\r\n                    defaultUrl = parentElement.href;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!defaultText && selection && !selection.isCollapsed) {\r\n            defaultText = selection.toString();\r\n        }\r\n\r\n        this.setState({\r\n            openEditUrl: true,\r\n            defaultUrl,\r\n            defaultText\r\n        });\r\n    };\r\n\r\n    closeEditUrlDialog = () => {\r\n        this.setState(\r\n            {\r\n                openEditUrl: false\r\n            },\r\n            () => {\r\n                this.restoreSelection();\r\n            }\r\n        );\r\n    };\r\n\r\n    saveSelection() {\r\n        this.selection = document.getSelection();\r\n        if (!this.selection) return;\r\n        if (!this.selection.rangeCount) return;\r\n\r\n        this.range = this.selection.getRangeAt(0);\r\n    }\r\n\r\n    restoreSelection() {\r\n        const { range } = this;\r\n\r\n        if (!range) {\r\n            this.focusInput();\r\n            return;\r\n        }\r\n\r\n        const selection = document.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        this.newMessageRef.current.focus();\r\n    }\r\n\r\n    focusInput = () => {\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n        if (!element.childNodes.length) {\r\n            element.focus();\r\n            return;\r\n        }\r\n\r\n        const lastTextNode = findLastTextNode(element);\r\n        if (!lastTextNode) {\r\n            return;\r\n        }\r\n\r\n        const range = document.createRange();\r\n        range.setStart(lastTextNode, lastTextNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        element.focus();\r\n    };\r\n\r\n    handleCancelEditUrl = () => {\r\n        this.closeEditUrlDialog();\r\n    };\r\n\r\n    handleDoneEditUrl = (text, url) => {\r\n        this.closeEditUrlDialog();\r\n        setTimeout(() => {\r\n            // edit current link node\r\n            const { range } = this;\r\n            if (range) {\r\n                const { startContainer, endContainer } = range;\r\n                if (startContainer && startContainer === endContainer) {\r\n                    const { parentNode } = startContainer;\r\n                    if (parentNode && parentNode.nodeName === 'A') {\r\n                        parentNode.href = url;\r\n                        parentNode.title = url;\r\n                        parentNode.innerText = text;\r\n\r\n                        // move cursor to end of editing node\r\n                        const { lastChild } = parentNode;\r\n                        if (lastChild) {\r\n                            const range = document.createRange();\r\n                            range.setStart(lastChild, lastChild.textContent.length);\r\n                            range.setEnd(lastChild, lastChild.textContent.length);\r\n\r\n                            const selection = document.getSelection();\r\n                            selection.removeAllRanges();\r\n                            selection.addRange(range);\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // replace selected text with new link node\r\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\r\n            document.execCommand('removeFormat', false, null);\r\n            document.execCommand('insertHTML', false, link);\r\n        }, 0);\r\n    };\r\n\r\n    handleCancelEditMedia = () => {\r\n        this.closeEditMediaDialog();\r\n    };\r\n\r\n    handleEditMedia = async (caption, content) => {\r\n        if (content) {\r\n            const message = await this.editMessageMedia(content);\r\n            if (message) {\r\n                const { content: editContent } = message;\r\n                switch (editContent['@type']) {\r\n                    case 'messagePhoto': {\r\n                        const { photo: sendPhoto } = content;\r\n                        if (!sendPhoto) break;\r\n\r\n                        const { data: blob } = sendPhoto;\r\n                        if (!blob) break;\r\n\r\n                        const { photo } = editContent;\r\n                        if (!photo) break;\r\n\r\n                        const iSize = photo.sizes.find(x => x.type === 'i');\r\n                        if (!iSize) break;\r\n\r\n                        const { photo: file } = iSize;\r\n                        if (file) {\r\n                            FileStore.setBlob(file.id, blob);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.editMessageCaption(caption);\r\n    };\r\n\r\n    handleSendMedia = (content, file) => {\r\n        this.closeEditMediaDialog(false);\r\n\r\n        switch (content['@type']) {\r\n            case 'inputMessageAudio': {\r\n                this.handleSendAudio(content, file);\r\n                break;\r\n            }\r\n            case 'inputMessagePhoto': {\r\n                this.handleSendPhoto(content, file);\r\n                break;\r\n            }\r\n            case 'inputMessageDocument': {\r\n                this.handleSendDocument(content, file);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    closeEditMediaDialog(cancel = true) {\r\n        const { newItem } = this.state;\r\n\r\n        this.setState(\r\n            {\r\n                openEditMedia: false,\r\n                newItem: null\r\n            },\r\n            () => {\r\n                if (cancel && newItem && newItem.caption) {\r\n                    this.newMessageRef.current.innerHTML = newItem.caption;\r\n                    this.focusInput();\r\n                    this.handleInput();\r\n                } else {\r\n                    this.restoreSelection();\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    handleHeaderClick = () => {\r\n        setTimeout(() => this.restoreSelection(), 0);\r\n    };\r\n\r\n    handleStopRecord = (cancelled = false) => {\r\n        if (!this.recorder) return;\r\n\r\n        this.recorder.cancelled = cancelled;\r\n        this.recorder.stop();\r\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\r\n    }\r\n\r\n    handleCancelRecord = () => {\r\n        this.handleStopRecord(true);\r\n    }\r\n\r\n    handleRecord = async () => {\r\n        if (this.recorder) return;\r\n\r\n        let stream = null;\r\n        try{\r\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            if (this.recorder) return;\r\n        } catch { }\r\n\r\n        if (!stream) {\r\n            this.setState({\r\n                recordPermissionDenied: true\r\n            });\r\n            return;\r\n        }\r\n\r\n        const constraints = {\r\n            channelCount: 1,\r\n            sampleRate: 48000,\r\n        };\r\n\r\n        const track = stream.getAudioTracks()[0];\r\n        track.applyConstraints(constraints)\r\n\r\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\r\n        const workerOptions = {\r\n            encoderWorkerFactory: function () {\r\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\r\n            },\r\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\r\n        };\r\n\r\n        const recorder = new MediaRecorder(stream, options, workerOptions);\r\n\r\n        const chunks = [];\r\n\r\n        recorder.ondataavailable = e => {\r\n            chunks.push(e.data);\r\n        };\r\n        recorder.onstart = () => {\r\n\r\n        };\r\n        recorder.onstop = () => {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\r\n            this.setState({ recordingTime: null });\r\n\r\n            const { cancelled } = this.recorder;\r\n            this.recorder = null;\r\n\r\n            this.loadDraft();\r\n            if (cancelled) {\r\n                return;\r\n            }\r\n\r\n            // console.log('stop');\r\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\r\n            const audioURL = window.URL.createObjectURL(blob);\r\n\r\n            const audio = new Audio(audioURL);\r\n            audio.oncanplay = () => {\r\n                const content = {\r\n                    '@type': 'inputMessageVoiceNote',\r\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\r\n                    duration: Math.trunc(audio.duration),\r\n                    waveform: '',\r\n                    caption: null\r\n                };\r\n\r\n                this.handleSendVoiceNote(content, blob);\r\n            };\r\n        };\r\n        recorder.onerror = () => {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\r\n            this.setState({ recordingTime: null });\r\n\r\n            this.loadDraft();\r\n            // console.log('error', e);\r\n        };\r\n\r\n        this.recorder = recorder;\r\n        this.recorder.start(50);\r\n        this.startTime = new Date();\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\r\n        this.setState({ recordingTime: new Date() });\r\n    }\r\n\r\n    handleClosePermission = () => {\r\n        this.setState({\r\n            recordPermissionDenied: false\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            chatId,\r\n            editMessageId,\r\n            newItem,\r\n            replyToMessageId,\r\n            files,\r\n            newDraft,\r\n            defaultText,\r\n            defaultUrl,\r\n            openEditUrl,\r\n            openEditMedia,\r\n            recordingReady,\r\n            recordingTime,\r\n            recordPermissionDenied,\r\n            shook\r\n        } = this.state;\r\n\r\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\r\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\r\n        if (editMessageId) {\r\n            icon = <DoneIcon/>;\r\n        }\r\n\r\n        return (\r\n            <div className='inputbox-background'>\r\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\r\n                    <div className={classNames('inputbox-bubble')}>\r\n                        <InputBoxHeader\r\n                            chatId={chatId}\r\n                            messageId={replyToMessageId}\r\n                            editMessageId={openEditMedia ? 0 : editMessageId}\r\n                            onClick={this.handleHeaderClick}\r\n                        />\r\n                        <div className='inputbox-wrapper'>\r\n                            <div className='inputbox-left-column'>\r\n                                <React.Suspense\r\n                                    fallback={\r\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\r\n                                            <InsertEmoticonIcon />\r\n                                        </IconButton>\r\n                                    }>\r\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\r\n                                </React.Suspense>\r\n                            </div>\r\n                            <div className='inputbox-middle-column'>\r\n                                <div\r\n                                    id='inputbox-message'\r\n                                    className='scrollbars-hidden'\r\n                                    ref={this.newMessageRef}\r\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\r\n                                    contentEditable\r\n                                    suppressContentEditableWarning\r\n                                    onKeyDown={this.handleKeyDown}\r\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\r\n                                    onPaste={this.handlePaste}\r\n                                    onInput={this.handleInput}\r\n                                />\r\n                            </div>\r\n                            <div className='inputbox-right-column'>\r\n                                <RecordTimer/>\r\n                                <input\r\n                                    ref={this.attachDocumentRef}\r\n                                    className='inputbox-attach-button'\r\n                                    type='file'\r\n                                    multiple='multiple'\r\n                                    onChange={this.handleAttachDocumentComplete}\r\n                                />\r\n                                <input\r\n                                    ref={this.attachPhotoRef}\r\n                                    className='inputbox-attach-button'\r\n                                    type='file'\r\n                                    multiple='multiple'\r\n                                    accept='image/*'\r\n                                    onChange={this.handleAttachPhotoComplete}\r\n                                />\r\n                                {!Boolean(editMessageId) && !recordingTime && (\r\n                                    <AttachButton\r\n                                        chatId={chatId}\r\n                                        onAttachPhoto={this.handleAttachPhoto}\r\n                                        onAttachDocument={this.handleAttachDocument}\r\n                                        onAttachPoll={this.handleAttachPoll}\r\n                                    />\r\n                                )}\r\n\r\n                                {/*<IconButton>*/}\r\n                                {/*<KeyboardVoiceIcon />*/}\r\n                                {/*</IconButton>*/}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    { recordingTime && (\r\n                        <div className='inputbox-cancel-record-button-background'>\r\n                            <IconButton\r\n                                className='inputbox-cancel-record-button'\r\n                                aria-label='Delete'\r\n                                size='small'\r\n                                color='secondary'\r\n                                onClick={this.handleCancelRecord}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                    )}\r\n                    <div className='inputbox-send-button-background'>\r\n                        <IconButton\r\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\r\n                            aria-label='Send'\r\n                            size='small'\r\n                            onClick={this.handleSubmit}>\r\n                            {icon}\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\r\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\r\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\r\n                <EditUrlDialog\r\n                    open={openEditUrl}\r\n                    defaultText={defaultText}\r\n                    defaultUrl={defaultUrl}\r\n                    onDone={this.handleDoneEditUrl}\r\n                    onCancel={this.handleCancelEditUrl}\r\n                />\r\n                <EditMediaDialog\r\n                    open={openEditMedia}\r\n                    chatId={chatId}\r\n                    messageId={editMessageId}\r\n                    newItem={newItem}\r\n                    onEdit={this.handleEditMedia}\r\n                    onSend={this.handleSendMedia}\r\n                    onCancel={this.handleCancelEditMedia}\r\n                />\r\n                <Dialog\r\n                    transitionDuration={0}\r\n                    open={recordPermissionDenied}\r\n                    onClose={this.handleClosePermission}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClosePermission} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(InputBox);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button/Button';\r\nimport './FooterCommand.css';\r\n\r\nclass FooterCommand extends React.Component {\r\n    render() {\r\n        const { command, onCommand } = this.props;\r\n\r\n        return (\r\n            <div className='footer-command'>\r\n                <div className='inputbox'>\r\n                    <div className='inputbox-bubble'>\r\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\r\n                            {command}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FooterCommand;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FooterCommand from './FooterCommand';\r\nimport Notifications from './Notifications';\r\n\r\nclass NotificationsCommand extends Notifications {\r\n    render() {\r\n        const { t } = this.props;\r\n        const { isMuted } = this.state;\r\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\r\n\r\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(NotificationsCommand);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport InputBox from './InputBox';\r\nimport FooterCommand from './FooterCommand';\r\nimport NotificationsCommand from './NotificationsCommand';\r\nimport { hasBasicGroupId, hasSupergroupId, isBotChat } from '../../Utils/Chat';\r\nimport { sendBotStartMessage, unblockSender } from '../../Actions/Message';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Footer.css';\r\n\r\nclass Footer extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n        const { prevChatId } = state;\r\n\r\n        if (prevChatId !== chatId) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat) {\r\n                const { is_blocked, last_message } = chat;\r\n\r\n                return {\r\n                    prevChatId: chatId,\r\n\r\n                    isBlocked: is_blocked,\r\n                    hasLastMessage: Boolean(last_message)\r\n                };\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { t, chatId, options } = this.props;\r\n        const { hasLastMessage, isBlocked, clearHistory } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.options !== options) {\r\n            return true;\r\n        }\r\n\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasLastMessage !== hasLastMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isBlocked !== isBlocked) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clearHistory !== clearHistory) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatIsBlocked', this.onUpdateChatIsBlocked);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatIsBlocked', this.onUpdateChatIsBlocked);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chatId) return;\r\n\r\n        this.setState({\r\n            clearHistory: update.inProgress\r\n        });\r\n    };\r\n\r\n    onUpdateChatLastMessage = update => {\r\n        const { chat_id, last_message } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.setState({\r\n            hasLastMessage: Boolean(last_message)\r\n        });\r\n    };\r\n\r\n    onUpdateChatIsBlocked = update => {\r\n        const { chat_id, is_blocked } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.setState({\r\n            isBlocked: is_blocked\r\n        });\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleJoin = () => {\r\n        const { chatId } = this.props;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'joinChat',\r\n            chat_id: chatId\r\n        });\r\n    };\r\n\r\n    handleDeleteAndExit = () => {\r\n        const { chatId } = this.props;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteChatHistory',\r\n            chat_id: chatId,\r\n            remove_from_chat_list: true\r\n        });\r\n\r\n        // TdLibController\r\n        //     .send({\r\n        //         '@type': 'leaveChat',\r\n        //         chat_id: this.props.chatId\r\n        //     });\r\n    };\r\n\r\n    handleUnblock = () => {\r\n        const { chatId } = this.props;\r\n\r\n        unblockSender({ '@type': 'messageSenderChat', chat_id: chatId });\r\n    };\r\n\r\n    handleStartBot = async () => {\r\n        const { chatId, options } = this.props;\r\n\r\n        await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n        if (options && options.botStartMessage) {\r\n            const { botUserId, parameter } = options.botStartMessage;\r\n\r\n            await sendBotStartMessage(chatId, botUserId, parameter);\r\n        } else {\r\n            await TdLibController.send({\r\n                '@type': 'sendMessage',\r\n                chat_id: chatId,\r\n                reply_to_message_id: 0,\r\n                input_message_content: {\r\n                    '@type': 'inputMessageText',\r\n                    text: {\r\n                        '@type': 'formattedText',\r\n                        text: '/start',\r\n                        entities: []\r\n                    },\r\n                    disable_web_page_preview: true,\r\n                    clear_draft: true\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, options, t } = this.props;\r\n        const { hasLastMessage, clearHistory } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { type, is_blocked } = chat;\r\n        if (!type) return null;\r\n\r\n        if (is_blocked) {\r\n            return <FooterCommand command={t('Unblock')} onCommand={this.handleUnblock} />;\r\n        }\r\n\r\n        if (options && options.botStartMessage) {\r\n            const isBot = isBotChat(chatId);\r\n            if (isBot) {\r\n                return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\r\n            }\r\n        }\r\n\r\n        switch (type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n                if (!basicGroup) return null;\r\n\r\n                const { status } = basicGroup;\r\n                if (!status) return null;\r\n\r\n                const { is_member, permissions } = status;\r\n\r\n                switch (status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return null;\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        if (is_member) {\r\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\r\n                        } else {\r\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret':\r\n            case 'chatTypePrivate': {\r\n                const isBot = isBotChat(chatId);\r\n                if (isBot && (!hasLastMessage || clearHistory)) {\r\n                    return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\r\n                }\r\n\r\n                return <InputBox />;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(type.supergroup_id);\r\n                if (!supergroup) return null;\r\n\r\n                const { is_channel, status } = supergroup;\r\n                if (!status) return null;\r\n\r\n                const { is_member, permissions } = status;\r\n\r\n                switch (status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return (\r\n                            <FooterCommand\r\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\r\n                                onCommand={this.handleJoin}\r\n                            />\r\n                        );\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        if (is_channel) {\r\n                            return <NotificationsCommand chatId={chatId} />;\r\n                        } else {\r\n                            return <InputBox />;\r\n                        }\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        if (is_member) {\r\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\r\n                        } else {\r\n                            return (\r\n                                <FooterCommand\r\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\r\n                                    onCommand={this.handleJoin}\r\n                                />\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Footer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport const MAX_SPEED = 8.2;\r\nexport const MIN_SPEED = 0.8;\r\nexport const AMPLITUDE_SPEED = 0.33;\r\n\r\nexport const SCALE_BIG = 0.807;\r\nexport const SCALE_SMALL = 0.704;\r\n\r\nexport const SCALE_BIG_MIN = 0.878;\r\nexport const SCALE_SMALL_MIN = 0.926;\r\n\r\nexport const FORM_BIG_MAX = 0.6;\r\nexport const FORM_SMALL_MAX = 0.6;\r\n\r\nexport const GLOBAL_SCALE = 1;\r\n\r\nexport const FORM_BUTTON_MAX = 0;\r\n\r\nexport const GRADIENT_SPEED_MIN = 0.5;\r\nexport const GRADIENT_SPEED_MAX = 0.01;\r\n\r\nexport const LIGHT_GRADIENT_SIZE = 0.5;\r\n\r\nfunction rotateZ(x, y, angle, originX, originY) {\r\n    x -= originX;\r\n    y -= originY;\r\n\r\n    let X = x * Math.cos(angle) - y * Math.sin(angle);\r\n    let Y = y * Math.cos(angle) + x * Math.sin(angle);\r\n\r\n    x = X + originX;\r\n    y = Y + originY;\r\n\r\n    return [x, y];\r\n}\r\n\r\nexport default class BlobDrawable {\r\n    constructor(n) {\r\n        this.maxRadius = 10;\r\n        this.minRadius = 0;\r\n\r\n        this.cubicBezierK = 1.0;\r\n        this.N = n;\r\n        this.L = (4.0 / 3.0) * Math.tan(Math.PI / (2 * this.N));\r\n        this.radius = new Array(n);\r\n        this.angle = new Array(n);\r\n\r\n        this.radiusNext = new Array(n);\r\n        this.angleNext = new Array(n);\r\n        this.progress = new Array(n);\r\n        this.speed = new Array(n);\r\n\r\n        this.pointStart = new Array(4);\r\n        this.pointEnd = new Array(4);\r\n\r\n        for (let i = 0; i < this.N; i++) {\r\n            this.generateBlob(this.radius, this.angle, i);\r\n            this.generateBlob(this.radiusNext, this.angleNext, i);\r\n            this.progress[i] = 0;\r\n        }\r\n    }\r\n\r\n    generateBlob(radius, angle, i) {\r\n        const { maxRadius, minRadius, speed, N } = this;\r\n\r\n        const angleDif = 2 * Math.PI / N * 0.05;\r\n        const radDif = maxRadius - minRadius;\r\n        radius[i] = minRadius + Math.random() * radDif;\r\n        angle[i] = 2 * Math.PI / N * i + Math.random() * angleDif;\r\n        speed[i] = 0.017 + 0.003 * Math.random();\r\n    }\r\n\r\n    update(amplitude, speedScale) {\r\n        const { N, progress, speed, radius, radiusNext, angle, angleNext } = this;\r\n        for (let i = 0; i < N; i++) {\r\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\r\n            if (progress[i] >= 1.0) {\r\n                progress[i] = 0.0;\r\n                radius[i] = radiusNext[i];\r\n                angle[i] = angleNext[i];\r\n                this.generateBlob(radiusNext, angleNext, i);\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(cX, cY, canvas, paint) {\r\n        // console.log('[bd] draw', cX, cY, canvas, paint);\r\n        if (canvas.getContext) {\r\n            const ctx = canvas.getContext('2d');\r\n            // ctx.globalAlpha = 0.5;\r\n            // ctx.lineWidth = 1;\r\n\r\n            ctx.beginPath();\r\n\r\n            const { radius, radiusNext, angle, angleNext, N, L, cubicBezierK, pointStart, pointEnd } = this;\r\n\r\n            for (let i = 0; i < N; i++) {\r\n                const progress = this.progress[i];\r\n                const nextIndex = i + 1 < N ? i + 1 : 0;\r\n                const progressNext = this.progress[nextIndex];\r\n                const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\r\n                const r2 = radius[nextIndex] * (1.0 - progressNext) + radiusNext[nextIndex] * progressNext;\r\n                const angle1 = angle[i] * (1.0 - progress) + angleNext[i] * progress;\r\n                const angle2 = angle[nextIndex] * (1.0 - progressNext) + angleNext[nextIndex] * progressNext;\r\n                const l = L * (Math.min(r1, r2) + (Math.max(r1, r2) - Math.min(r1, r2)) / 2) * cubicBezierK;\r\n\r\n                pointStart[0] = cX;\r\n                pointStart[1] = cY - r1;\r\n                pointStart[2] = cX + l;\r\n                pointStart[3] = cY - r1;\r\n\r\n                this.mapPoints(pointStart, cX, cY, angle1);\r\n\r\n                pointEnd[0] = cX;\r\n                pointEnd[1] = cY - r2;\r\n                pointEnd[2] = cX - l;\r\n                pointEnd[3] = cY - r2;\r\n\r\n                this.mapPoints(pointEnd, cX, cY, angle2);\r\n\r\n                if (i === 0) {\r\n                    // console.log('[bd] moveTo', pointStart[0], pointStart[1]);\r\n                    ctx.moveTo(pointStart[0], pointStart[1]);\r\n                }\r\n                // console.log('[bd] bezierCurveTo', pointEnd[0], pointEnd[1]);\r\n                ctx.bezierCurveTo(\r\n                    pointStart[2], pointStart[3],\r\n                    pointEnd[2], pointEnd[3],\r\n                    pointEnd[0], pointEnd[1]\r\n                );\r\n            }\r\n\r\n            // ctx.scale(1.0, 1.0);\r\n            // this.fillStyleFunc(ctx);\r\n            paint(ctx);\r\n            ctx.fill();\r\n            ctx.closePath();\r\n        }\r\n    }\r\n\r\n    mapPoints(points, cX, cY, angle) {\r\n        const result1 = rotateZ(points[0], points[1], angle, cX, cY);\r\n        const result2 = rotateZ(points[2], points[3], angle, cX, cY);\r\n\r\n        points[0] = result1[0];\r\n        points[1] = result1[1];\r\n        points[2] = result2[0];\r\n        points[3] = result2[1];\r\n    }\r\n\r\n    generateInitBlob() {\r\n        const { radius, radiusNext, angle, angleNext, progress, N } = this;\r\n\r\n        for (let i = 0; i < N; i++) {\r\n            this.generateBlob(radius, angle, i);\r\n            this.generateBlob(radiusNext, angleNext, i);\r\n            progress[i] = 0;\r\n        }\r\n    }\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n// const MIN_SPEED = 0.8;\r\n// const MAX_SPEED = 8.2;\r\n\r\nimport { MIN_SPEED, MAX_SPEED } from './BlobDrawable';\r\n\r\nexport default class LineBlobDrawable {\r\n    constructor(n) {\r\n        this.maxRadius = 10;\r\n        this.minRadius = 0;\r\n\r\n        this.N = n;\r\n        this.radius = new Array(n + 1);\r\n\r\n        this.radiusNext = new Array(n + 1);\r\n        this.progress = new Array(n + 1);\r\n        this.speed = new Array(n + 1);\r\n\r\n        for (let i = 0; i <= n; i++) {\r\n            this.generateBlob(this.radius, i);\r\n            this.generateBlob(this.radiusNext, i);\r\n            this.progress[i] = 0;\r\n        }\r\n    }\r\n\r\n    generateBlob(radius, i) {\r\n        const { maxRadius, minRadius, speed } = this;\r\n\r\n        const radDif = maxRadius - minRadius;\r\n        radius[i] = minRadius + Math.random() * radDif;\r\n        speed[i] = 0.017 + 0.003 * Math.random();\r\n    }\r\n\r\n    generateNextBlob() {\r\n        const { radius, radiusNext, progress, N } = this;\r\n        for (let i = 0; i < N; i++) {\r\n            this.generateBlob(radius, i);\r\n            this.generateBlob(radiusNext, i);\r\n            progress[i] = 0.0;\r\n        }\r\n    }\r\n\r\n    update(amplitude, speedScale) {\r\n        const { N, progress, speed, radius, radiusNext } = this;\r\n        for (let i = 0; i <= N; i++) {\r\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\r\n            if (progress[i] >= 1.0) {\r\n                progress[i] = 0.0;\r\n                radius[i] = radiusNext[i];\r\n                this.generateBlob(radiusNext, i);\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(left, top, right, bottom, canvas, paint, pinnedTop, progressToPinned) {\r\n        if (canvas.getContext) {\r\n            const ctx = canvas.getContext('2d');\r\n            // ctx.globalAlpha = 0.5;\r\n            // ctx.lineWidth = 1;\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(right, bottom);\r\n            ctx.lineTo(left, bottom);\r\n\r\n            const { radius, radiusNext, N } = this;\r\n            for (let i = 0; i <= N; i++) {\r\n                if (i === 0) {\r\n                    const progress = this.progress[i];\r\n                    const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\r\n                    const y = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\r\n                    ctx.lineTo(left, y);\r\n                } else {\r\n                    const progress = this.progress[i - 1];\r\n                    const r1 = radius[i - 1] * (1.0 - progress) + radiusNext[i - 1] * progress;\r\n                    const progressNext = this.progress[i];\r\n                    const r2 = radius[i] * (1.0 - progressNext) + radiusNext[i] * progressNext;\r\n                    const x1 = (right - left) / N * (i - 1);\r\n                    const x2 = (right - left) / N * i;\r\n                    const cx = x1 + (x2 - x1) / 2;\r\n\r\n                    const y1 = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\r\n                    const y2 = (top - r2) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\r\n                    ctx.bezierCurveTo(\r\n                        cx, y1,\r\n                        cx, y2,\r\n                        x2, y2\r\n                    );\r\n                    if (i === N) {\r\n                        ctx.lineTo(right, bottom);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // ctx.scale(1.0, 1.0);\r\n            paint(ctx);\r\n            ctx.fill();\r\n            ctx.closePath();\r\n        }\r\n    }\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LineBlobDrawable from './LineBlobDrawable';\r\n\r\nexport const MUTE_BUTTON_STATE_UNMUTE = 0;\r\nexport const MUTE_BUTTON_STATE_MUTE = 1;\r\nexport const MUTE_BUTTON_STATE_CONNECTING = 2;\r\nexport const MUTE_BUTTON_STATE_MUTED_BY_ADMIN = 3;\r\n\r\nexport class WeavingState {\r\n    constructor(stateId) {\r\n        this.stateId = stateId;\r\n        this.shader = (ctx, left, top, right, bottom) => { };\r\n        this.createGradient(stateId);\r\n    }\r\n\r\n    createGradient(stateId) {\r\n        this.shader = (ctx, left, top, right, bottom) => {\r\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\r\n        };\r\n    }\r\n\r\n    // Android colors\r\n    static getGradientFromType(ctx, type, x0, y0, x1, y1) {\r\n        const gradient = ctx.createLinearGradient(x0, y0, x1, y1);\r\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\r\n            gradient.addColorStop(0, '#57A4FE');\r\n            gradient.addColorStop(.6, '#766EE9');\r\n            gradient.addColorStop(1, '#F05459');\r\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\r\n            gradient.addColorStop(0, '#00B1C0');\r\n            gradient.addColorStop(1, '#52CE5D');\r\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\r\n            gradient.addColorStop(0, '#2BCEFF');\r\n            gradient.addColorStop(1, '#0976E3');\r\n        } else {\r\n            gradient.addColorStop(0, '#8599aa');\r\n            gradient.addColorStop(1, '#8599aa');\r\n        }\r\n\r\n        return gradient;\r\n    }\r\n\r\n    update(height, width, dt, amplitude) {\r\n        // TODO: move gradient here\r\n    }\r\n}\r\n\r\nclass TopBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.focused = true;\r\n        this.resizing = false;\r\n        this.lastUpdateTime = new Date();\r\n        this.amplitude = 0.0;\r\n        this.amplitude2 = 0.0;\r\n\r\n        this.states = [\r\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\r\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\r\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\r\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\r\n        ];\r\n        this.prevState = null;\r\n        this.currentState = this.states[MUTE_BUTTON_STATE_CONNECTING];\r\n        this.progressToState = 1.0;\r\n\r\n        this.scale = window.devicePixelRatio;\r\n        this.left = 0 * this.scale;\r\n        this.top = 20 * this.scale;\r\n        this.right = 1260 * this.scale;\r\n        this.bottom = 63 * this.scale;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        window.addEventListener('blur', this.handleBlur);\r\n        window.addEventListener('focus', this.handleFocus);\r\n        window.addEventListener('resize', this.handleResize);\r\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\r\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\r\n\r\n        const topBar = document.getElementById('top-bar');\r\n        this.right = topBar.offsetWidth * this.scale;\r\n        this.forceUpdate();\r\n\r\n        this.canvas = document.getElementById('canvas');\r\n        this.lbd = new LineBlobDrawable(3);\r\n        this.lbd1 = new LineBlobDrawable(7);\r\n        this.lbd2 = new LineBlobDrawable(8);\r\n        this.setAmplitude(this.amplitude);\r\n\r\n        this.draw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        window.removeEventListener('blur', this.handleBlur);\r\n        window.removeEventListener('focus', this.handleFocus);\r\n        window.removeEventListener('resize', this.handleResize);\r\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\r\n    }\r\n\r\n    handleDevicePixelRatioChanged = e => {\r\n        this.scale = window.devicePixelRatio;\r\n        this.left = 0 * this.scale;\r\n        this.top = 20 * this.scale;\r\n        this.bottom = 63 * this.scale;\r\n\r\n        const topBar = document.getElementById('top-bar');\r\n        if (!topBar) return;\r\n\r\n        this.right = topBar.offsetWidth * this.scale;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    handleResize = () => {\r\n        if (this.resizeHandler) {\r\n            clearTimeout(this.resizeHandler);\r\n            this.resizeHandler = null;\r\n        }\r\n\r\n        this.resizing = true;\r\n        this.resizeCanvas();\r\n        this.resizeHandler = setTimeout(() => {\r\n            this.resizing = false;\r\n            this.invokeDraw();\r\n        }, 250);\r\n    }\r\n\r\n    resizeCanvas() {\r\n        const topBar = document.getElementById('top-bar');\r\n\r\n        this.scale = window.devicePixelRatio;\r\n        this.right = topBar.offsetWidth * this.scale;\r\n\r\n        this.forceUpdate();\r\n        this.invokeDraw();\r\n    }\r\n\r\n    handleFocus = () => {\r\n        this.focused = true;\r\n        this.invokeDraw();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        this.focused = false;\r\n    }\r\n\r\n    invokeDraw = () => {\r\n        if (this.raf) return;\r\n\r\n        this.draw();\r\n    }\r\n\r\n    draw = (force = false) => {\r\n        this.raf = null;\r\n        if (!this.mounted) {\r\n            return;\r\n        }\r\n        const { lbd, lbd1, lbd2, scale, left, top, right, bottom, currentState, previousState, focused, resizing } = this;\r\n        if (!focused && !resizing && this.progressToState >= 1.0) {\r\n            return;\r\n        }\r\n\r\n        // console.log('[top] draw', [focused, resizing, this.mounted]);\r\n\r\n        const newTime = new Date();\r\n        let dt = (newTime - this.lastUpdateTime);\r\n        if (dt > 20) {\r\n            dt = 17;\r\n        }\r\n\r\n        // console.log('draw start', this.amplitude, this.animateToAmplitude);\r\n        if (this.animateToAmplitude !== this.amplitude) {\r\n            this.amplitude += this.animateAmplitudeDiff * dt;\r\n            if (this.animateAmplitudeDiff > 0) {\r\n                if (this.amplitude > this.animateToAmplitude) {\r\n                    this.amplitude = this.animateToAmplitude;\r\n                }\r\n            } else {\r\n                if (this.amplitude < this.animateToAmplitude) {\r\n                    this.amplitude = this.animateToAmplitude;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.animateToAmplitude !== this.amplitude2) {\r\n            this.amplitude2 += this.animateAmplitudeDiff2 * dt;\r\n            if (this.animateAmplitudeDiff2 > 0) {\r\n                if (this.amplitude2 > this.animateToAmplitude) {\r\n                    this.amplitude2 = this.animateToAmplitude;\r\n                }\r\n            } else {\r\n                if (this.amplitude2 < this.animateToAmplitude) {\r\n                    this.amplitude2 = this.animateToAmplitude;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (previousState) {\r\n            this.progressToState += dt / 250;\r\n            if (this.progressToState > 1) {\r\n                this.progressToState = 1;\r\n                this.previousState = null;\r\n            }\r\n        }\r\n\r\n        const top1 = 6 * this.amplitude2 * scale;\r\n        const top2 = 6 * this.amplitude2 * scale;\r\n\r\n        const ctx = this.canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        lbd.minRadius = 0;\r\n        lbd.maxRadius = (2 + 2 * this.amplitude) * scale;\r\n        lbd1.minRadius = 0;\r\n        lbd1.maxRadius = (3 + 9 * this.amplitude) * scale;\r\n        lbd2.minRadius = 0;\r\n        lbd2.maxRadius = (3 + 9 * this.amplitude) * scale;\r\n\r\n        lbd.update(this.amplitude, 0.3);\r\n        lbd1.update(this.amplitude, 0.7);\r\n        lbd2.update(this.amplitude, 0.7);\r\n\r\n        for (let i = 0; i < 2; i++) {\r\n            if (i === 0 && !previousState) {\r\n                continue;\r\n            }\r\n\r\n            let alpha = 1;\r\n            let state = null;\r\n            if (i === 0) {\r\n                alpha = 1 - this.progressToState;\r\n                state = previousState;\r\n                // previousState.setToPaint(paint);\r\n            } else {\r\n                alpha = previousState ? this.progressToState : 1;\r\n                currentState.update(bottom - top, right - left, dt, this.amplitude);\r\n                state = currentState;\r\n                // currentState.setToPaint(paint);\r\n            }\r\n\r\n            const paint1 = ctx => {\r\n                ctx.globalAlpha = 0.3 * alpha;\r\n                state.shader(ctx, left, top, right, bottom);\r\n            };\r\n            const paint = ctx => {\r\n                ctx.globalAlpha = i === 0? 1 : alpha;\r\n                state.shader(ctx, left, top, right, bottom);\r\n            };\r\n\r\n            lbd1.draw(left, top - top1, right, bottom, this.canvas, paint1,  top, 1.0);\r\n            lbd2.draw(left, top - top2, right, bottom, this.canvas, paint1,  top, 1.0);\r\n            lbd.draw(left, top, right, bottom, this.canvas, paint, top, 1.0);\r\n        }\r\n\r\n        if (!force) {\r\n            this.raf = requestAnimationFrame(() => this.draw());\r\n        }\r\n    };\r\n\r\n    setCurrentState = (stateId, animated) => {\r\n        const { currentState, states } = this;\r\n\r\n        if (currentState && currentState.id === stateId) {\r\n            return;\r\n        }\r\n\r\n        this.previousState = animated ? currentState : null;\r\n        this.currentState = states[stateId];\r\n        this.progressToState = this.previousState ? 0.0 : 1.0;\r\n    };\r\n\r\n    setAmplitude(value) {\r\n        this.animateToAmplitude = value;\r\n        this.animateAmplitudeDiff = (value - this.amplitude) / 250;\r\n        this.animateAmplitudeDiff2 = (value - this.amplitude) / 120;\r\n    }\r\n\r\n    render() {\r\n        const { left, right, top, bottom, scale } = this;\r\n\r\n        return(\r\n            <div id='top-bar' className='top-bar'>\r\n                <canvas id='canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTopBar.propTypes = {};\r\n\r\nexport default TopBar;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport MicIcon from '../../Assets/Icons/Mic';\r\nimport MicOffIcon from '../../Assets/Icons/MicOff';\r\nimport TopBar, { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\r\nimport { getChatTitle } from '../../Utils/Chat';\r\nimport { getCallStatus } from '../../Calls/Utils';\r\nimport { openGroupCallPanel } from '../../Actions/Call';\r\nimport { showSnackbar } from '../../Actions/Client';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './GroupCallTopPanel.css';\r\n\r\nclass GroupCallTopPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.topBarRef = React.createRef();\r\n\r\n        const { currentGroupCall: call } = CallStore;\r\n        const { connected, status } = getCallStatus(call);\r\n        this.state = {\r\n            call,\r\n            status,\r\n            connected,\r\n            animated: CallStore.animated\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { call, status, connected, animated } = this.state;\r\n\r\n        if (nextState.call !== call) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.status !== status) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.connected !== connected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.animated !== animated) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.switchButtonState(false);\r\n\r\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\r\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\r\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    switchButtonState(animated = true) {\r\n        const { connected, status } = this.state;\r\n\r\n        let stateId = MUTE_BUTTON_STATE_MUTE;\r\n        if (!connected) {\r\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\r\n        } else {\r\n            if (status === 'forceMuted') {\r\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\r\n            } else if (status === 'unmuted') {\r\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\r\n            } else if (status === 'muted') {\r\n                stateId = MUTE_BUTTON_STATE_MUTE;\r\n            }\r\n        }\r\n\r\n        this.topBarRef.current && this.topBarRef.current.setCurrentState(stateId, animated);\r\n    }\r\n\r\n    onClientUpdateGroupCallAmplitudeChange = update => {\r\n        const { amplitudes, type } = update;\r\n        if (!amplitudes.length) return;\r\n\r\n        let max = 0;\r\n        for (let i = 0; i < amplitudes.length; i++) {\r\n            const { type, value } = amplitudes[i];\r\n            max = value > max ? value : max;\r\n        }\r\n\r\n        if (type !== 'input') {\r\n            this.topBarRef.current && this.topBarRef.current.setAmplitude(max);\r\n        }\r\n    };\r\n\r\n    onUpdateGroupCallParticipant = update => {\r\n        const { group_call_id, participant } = update;\r\n        if (!participant) return;\r\n\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call_id !== call.groupCallId) return;\r\n\r\n        const { user_id } = participant;\r\n        if (user_id !== UserStore.getMyId()) return;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.setState({\r\n            status\r\n        }, () => {\r\n            this.switchButtonState(true);\r\n        });\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { group_call } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call.id !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCallConnectionState = update => {\r\n        const { groupCallId } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (groupCallId !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCall = update => {\r\n        const { currentGroupCall: call } = CallStore;\r\n        const { connected, status } = getCallStatus(call);\r\n        this.saveMessagesScrollPosition();\r\n        this.setState({\r\n            call,\r\n            status,\r\n            connected\r\n        }, () => {\r\n            this.restoreMessagesScrollPosition(Boolean(call));\r\n            this.switchButtonState(true);\r\n        });\r\n    };\r\n\r\n    saveMessagesScrollPosition() {\r\n        const elements = document.getElementsByClassName('messages-list-wrapper');\r\n        if (!elements.length) return;\r\n\r\n        [...elements].forEach(x => {\r\n            const list = x;\r\n            if (!list) return;\r\n\r\n            const prevOffsetHeight = list.offsetHeight;\r\n            const prevScrollTop = list.scrollTop;\r\n\r\n            list.prevOffsetHeight = prevOffsetHeight;\r\n            list.prevScrollTop = prevScrollTop;\r\n        });\r\n    }\r\n\r\n    restoreMessagesScrollPosition(openPanel = true) {\r\n        const elements = document.getElementsByClassName('messages-list-wrapper');\r\n        if (!elements.length) return;\r\n\r\n        [...elements].forEach(x => {\r\n            const list = x;\r\n            if (!list) return;\r\n\r\n            const { prevScrollTop, prevOffsetHeight } = list;\r\n            if (list.scrollTop === prevScrollTop) {\r\n                const offsetHeightDiff = Math.abs(prevOffsetHeight - list.offsetHeight);\r\n                list.scrollTop += openPanel ? offsetHeightDiff : - offsetHeightDiff;\r\n            }\r\n        });\r\n    }\r\n\r\n    handleMicrophone = async event => {\r\n        event.stopPropagation();\r\n\r\n        const { call, status } = this.state;\r\n        if (!call) return;\r\n\r\n        const { chatId, groupCallId, stream } = call;\r\n\r\n        const groupCall = CallStore.get(groupCallId);\r\n        if (!groupCall) return;\r\n\r\n        if (!groupCall.can_unmute_self) {\r\n            showSnackbar(LStore.getString('VoipMutedByAdminInfo'), closeSnackbar => snackKey => {\r\n                return (\r\n                    <IconButton\r\n                        key='close'\r\n                        aria-label='Close'\r\n                        color='inherit'\r\n                        className='notification-close-button'\r\n                        onClick={() => { closeSnackbar(snackKey); }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                )\r\n            });\r\n        } else {\r\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\r\n        }\r\n    };\r\n\r\n    handleLeave = async event => {\r\n        event.stopPropagation();\r\n\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        const { chatId, groupCallId } = call;\r\n\r\n        await CallStore.leaveGroupCall(chatId, groupCallId);\r\n    };\r\n\r\n    handleOpenGroupCall = () => {\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        openGroupCallPanel();\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { call, status, connected, animated } = this.state;\r\n        if (!call) return null;\r\n\r\n        const { chatId } = call;\r\n        const title = connected ? getChatTitle(chatId).toUpperCase() : t('Connecting');\r\n\r\n        return (\r\n            <div className='group-call-top-panel-wrapper'>\r\n                { animated ? (\r\n                    <TopBar ref={this.topBarRef}/>\r\n                    ) : (\r\n                    <div className={classNames('group-call-top-panel',\r\n                        {\r\n                            'group-call-top-panel-muted-by-admin ': connected && status === 'forceMuted',\r\n                            'group-call-top-panel-unmuted': connected && status === 'unmuted',\r\n                            'group-call-top-panel-connecting': !connected,\r\n\r\n                        })}\r\n                    />\r\n                )}\r\n                <div className='group-call-top-panel-buttons' onClick={this.handleOpenGroupCall}>\r\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleMicrophone}>\r\n                        {status === 'unmuted' ? <MicIcon fontSize='small'/> : <MicOffIcon fontSize='small' />}\r\n                    </IconButton>\r\n                    <div className='group-call-top-panel-title'>\r\n                        {title}\r\n                    </div>\r\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleLeave}>\r\n                        <CallEndIcon fontSize='small' />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nGroupCallTopPanel.propTypes = {};\r\n\r\nexport default withTranslation()(GroupCallTopPanel);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\r\n    'PlaylistEdit'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z' />,\r\n    'Block'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\r\n    'Broom'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M6.62,10.79C8.06,13.62 10.38,15.94 13.21,17.38L15.41,15.18C15.69,14.9 16.08,14.82 16.43,14.93C17.55,15.3 18.75,15.5 20,15.5A1,1 0 0,1 21,16.5V20A1,1 0 0,1 20,21A17,17 0 0,1 3,4A1,1 0 0,1 4,3H7.5A1,1 0 0,1 8.5,4C8.5,5.25 8.7,6.45 9.07,7.57C9.18,7.92 9.1,8.31 8.82,8.59L6.62,10.79Z' />,\r\n    'Phone'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\r\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\r\nimport BlockIcon from '../../Assets/Icons/Block';\r\nimport BroomIcon from '../../Assets/Icons/Broom';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport GroupIcon from '../../Assets/Icons/Group';\r\nimport MoreVertIcon from '../../Assets/Icons/More';\r\nimport PhoneIcon from '../../Assets/Icons/Phone';\r\nimport UnpinIcon from '../../Assets/Icons/PinOff';\r\nimport UserIcon from '../../Assets/Icons/User';\r\nimport {\r\n    canClearHistory,\r\n    canDeleteChat,\r\n    getViewInfoTitle,\r\n    isPrivateChat,\r\n    getDeleteChatTitle,\r\n    hasOnePinnedMessage,\r\n    canSwitchBlocked,\r\n    getChatSender,\r\n    canManageVoiceChats,\r\n    canBeReported, getChatUserId, canBeCalled\r\n} from '../../Utils/Chat';\r\nimport { clearHistory, leaveChat, openReportChat } from '../../Actions/Chat';\r\nimport { requestBlockSender, unblockSender } from '../../Actions/Message';\r\nimport { requestUnpinMessage, showAlert } from '../../Actions/Client';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MainMenuButton.css';\r\n\r\nclass MainMenuButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            anchorEl: null\r\n        };\r\n    }\r\n\r\n    handleButtonClick = async event => {\r\n        const { currentTarget: anchorEl } = event;\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\r\n        ChatStore.set(chat);\r\n\r\n        this.setState({ anchorEl });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleChatInfo = () => {\r\n        this.handleMenuClose();\r\n        setTimeout(() => this.props.openChatDetails(), 150);\r\n    };\r\n\r\n    handleClearHistory = () => {\r\n        this.handleMenuClose();\r\n\r\n        clearHistory(AppStore.getChatId());\r\n    };\r\n\r\n    handleDeleteChat = () => {\r\n        this.handleMenuClose();\r\n\r\n        leaveChat(AppStore.getChatId());\r\n    };\r\n\r\n    handleUnpin = () => {\r\n        this.handleMenuClose();\r\n\r\n        const chatId = AppStore.getChatId();\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        if (!media) return false;\r\n\r\n        const { pinned } = media;\r\n        if (!pinned) return false;\r\n        if (pinned.length !== 1) return false;\r\n\r\n        requestUnpinMessage(chatId, pinned[0].id);\r\n    };\r\n\r\n    handleSwitchBlocked = () => {\r\n        this.handleMenuClose();\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const sender = getChatSender(chatId);\r\n        const { is_blocked } = chat;\r\n        if (is_blocked) {\r\n            unblockSender(sender);\r\n        } else {\r\n            requestBlockSender(sender);\r\n        }\r\n    };\r\n\r\n    handleStartGroupCall = () => {\r\n        this.handleMenuClose();\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        showAlert({\r\n            title: LStore.getString('StartVoipChatTitle'),\r\n            message: LStore.getString('StartVoipChatAlertText'),\r\n            ok: LStore.getString('Start'),\r\n            cancel: LStore.getString('Cancel'),\r\n            onResult: async result => {\r\n                if (result){\r\n                    await CallStore.startGroupCall(chatId);\r\n                }\r\n            }\r\n        })\r\n    };\r\n\r\n    handleStartP2PCall = () => {\r\n        this.handleMenuClose();\r\n\r\n        const userId = getChatUserId(AppStore.getChatId());\r\n\r\n        CallStore.p2pStartCall(userId, false);\r\n    };\r\n\r\n    handleReport = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { chatId } = this.props;\r\n\r\n        openReportChat(chatId, []);\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { is_blocked, voice_chat_group_call_id } = chat;\r\n\r\n        const clearHistory = canClearHistory(chatId);\r\n        const deleteChat = canDeleteChat(chatId);\r\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\r\n        const unpinMessage = hasOnePinnedMessage(chatId);\r\n        const switchBlocked = canSwitchBlocked(chatId);\r\n        const manageVoiceChats = canManageVoiceChats(chatId);\r\n        const reported = canBeReported(chatId);\r\n        const called = canBeCalled(chatId);\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    aria-label='Menu'\r\n                    onClick={this.handleButtonClick}>\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}>\r\n                    { CallStore.p2pCallsEnabled && called && (\r\n                        <MenuItem onClick={this.handleStartP2PCall}>\r\n                            <ListItemIcon>\r\n                                <CallOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Call')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    { !Boolean(voice_chat_group_call_id) && manageVoiceChats && (\r\n                        <MenuItem onClick={this.handleStartGroupCall}>\r\n                            <ListItemIcon>\r\n                                <PhoneIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('StartVoipChat')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    <MenuItem onClick={this.handleChatInfo}>\r\n                        <ListItemIcon>\r\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\r\n                    </MenuItem>\r\n                    {clearHistory && (\r\n                        <MenuItem onClick={this.handleClearHistory}>\r\n                            <ListItemIcon>\r\n                                <BroomIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('ClearHistory')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {deleteChat && deleteChatTitle && (\r\n                        <MenuItem onClick={this.handleDeleteChat}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={deleteChatTitle} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {unpinMessage && (\r\n                        <MenuItem onClick={this.handleUnpin}>\r\n                            <ListItemIcon>\r\n                                <UnpinIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {switchBlocked && (\r\n                        <MenuItem onClick={this.handleSwitchBlocked}>\r\n                            <ListItemIcon>\r\n                                <BlockIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={is_blocked ? t('Unblock') : t('BlockContact')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {reported && (\r\n                        <MenuItem onClick={this.handleReport}>\r\n                            <ListItemIcon>\r\n                                <ReportOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('ReportChat')} />\r\n                        </MenuItem>\r\n                    )}\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(MainMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport './HeaderChatSubtitle.css';\r\n\r\nclass HeaderChatSubtitle extends React.Component {\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\r\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onUpdateChatOnlineMemberCount = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUserChatAction = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUserStatus = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\r\n                if (fullInfo && fullInfo.members) {\r\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\r\n                    if (member) {\r\n                        this.forceUpdate();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypePrivate': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (\r\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\r\n            chat.type.user_id === update.user_id\r\n        ) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId } = this.props;\r\n\r\n        const subtitle = getChatSubtitle(chatId, true);\r\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\r\n\r\n        return (\r\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\r\n                {subtitle}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderChatSubtitle.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default HeaderChatSubtitle;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\r\nimport './HeaderChat.css';\r\n\r\nclass HeaderChat extends React.Component {\r\n    render() {\r\n        const { className, chatId, onClick } = this.props;\r\n\r\n        return (\r\n            <div className={classNames('header-chat', className)} onClick={onClick}>\r\n                <ChatTile chatId={chatId} size={44} />\r\n                <div className='header-chat-content'>\r\n                    <DialogTitle chatId={chatId} />\r\n                    <HeaderChatSubtitle chatId={chatId} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default HeaderChat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './AnimatedItem.css';\r\n\r\nclass AnimatedItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.containerRef = React.createRef();\r\n        this.item1Ref = React.createRef();\r\n        this.item2Ref = React.createRef();\r\n\r\n        this.state = { };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return nextProps.item !== this.props.item;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { item } = props;\r\n        const { to, prevItem } = state;\r\n\r\n        if (item !== prevItem) {\r\n            return {\r\n                prevItem: item,\r\n                from: to,\r\n                to: item,\r\n                scrollDown: item > to\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { scrollDown, animateOnMount } = this.props;\r\n        const { to } = this.state;\r\n\r\n        this.animate('', to, scrollDown, animateOnMount);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { item, scrollDown } = this.props;\r\n        const { from, to } = this.state;\r\n\r\n        if (prevProps.item !== item) {\r\n            this.animate(from, to, scrollDown);\r\n        }\r\n    }\r\n\r\n    animate = (from, to, scrollDown, animate = true) => {\r\n        const { height } = this.props;\r\n\r\n        const container = this.containerRef.current;\r\n        const item1 = this.item1Ref.current;\r\n        const item2 = this.item2Ref.current;\r\n\r\n        if (!container || !item1 || !item2) return;\r\n\r\n        const duration = !animate ? '0ms' : '250ms';\r\n        const timingFunction = 'ease-in-out';\r\n\r\n        if (scrollDown) {\r\n            container.style.cssText = `transform: translateY(-${height}px)`;\r\n            item1.style.cssText = 'opacity: 0';\r\n            item2.style.cssText = 'opacity: 1';\r\n            requestAnimationFrame(() => {\r\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\r\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n            });\r\n        } else {\r\n            container.style.cssText = 'transform: translateY(0px)';\r\n            item1.style.cssText = 'opacity: 1';\r\n            item2.style.cssText = 'opacity: 0';\r\n            requestAnimationFrame(() => {\r\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\r\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { scrollDown, height, getItemTemplate } = this.props;\r\n        const { from, to } = this.state;\r\n\r\n        return (\r\n            <div className='animated-item' style={{ height }}>\r\n                <div className='animated-item-placeholder'>{getItemTemplate(to)}</div>\r\n                <div ref={this.containerRef} className='animated-item-wrapper'>\r\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? getItemTemplate(to) : getItemTemplate(from) }</div>\r\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? getItemTemplate(from) : getItemTemplate(to) }</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAnimatedItem.propTypes = {\r\n    item: PropTypes.string,\r\n    getItemTemplate: PropTypes.func,\r\n    scrollDown: PropTypes.bool,\r\n    height: PropTypes.number,\r\n    animateOnMount: PropTypes.bool\r\n};\r\n\r\nAnimatedItem.defaultProps = {\r\n    item: null,\r\n    getItemTemplate: x => x,\r\n    scrollDown: true,\r\n    height: 21,\r\n    animateOnMount: true\r\n}\r\n\r\nexport default AnimatedItem;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AnimatedItem from './AnimatedItem';\r\nimport './AnimatedCounter.css';\r\n\r\nclass AnimatedCounter extends React.Component {\r\n\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { counter } = props;\r\n        const { prevCounter } = state;\r\n\r\n        if (counter !== prevCounter) {\r\n            return {\r\n                prevCounter: counter,\r\n\r\n                scrollDown: counter > prevCounter\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { counter, height, reverse } = this.props;\r\n        const { scrollDown } = this.state;\r\n        if (!counter) return null;\r\n\r\n        const counterStr = counter + '';\r\n\r\n        return (\r\n            <div className='animated-counter' style={{ height }}>\r\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAnimatedCounter.propTypes = {\r\n    counter: PropTypes.number,\r\n    height: PropTypes.number,\r\n    reverse: PropTypes.bool\r\n};\r\n\r\nAnimatedCounter.defaultProps = {\r\n    counter: 0,\r\n    height: 21,\r\n    reverse: false\r\n}\r\n\r\nexport default AnimatedCounter;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './HeaderCommand.css';\r\nimport AnimatedCounter from './AnimatedCounter';\r\nimport { canBeReported } from '../../Utils/Chat';\r\nimport { openReportChat } from '../../Actions/Chat';\r\n\r\nclass HeaderCommand extends React.Component {\r\n    handleCancel = () => {\r\n        clearSelection();\r\n    };\r\n\r\n    handleDelete = () => {\r\n        let id = 0;\r\n        let messageIds = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            id = chatId;\r\n            messageIds.push(messageId);\r\n        }\r\n\r\n        clearSelection();\r\n        deleteMessages(id, messageIds);\r\n    };\r\n\r\n    handleForward = () => {\r\n        let id;\r\n        const messageIds = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            id = chatId;\r\n            messageIds.push(messageId);\r\n        }\r\n\r\n        clearSelection();\r\n        forwardMessages(id, messageIds);\r\n    };\r\n\r\n    handleReport = () => {\r\n        let id;\r\n        const messageIds = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            id = chatId;\r\n            messageIds.push(messageId);\r\n        }\r\n\r\n        clearSelection();\r\n        openReportChat(id, messageIds);\r\n    };\r\n\r\n    render() {\r\n        const { t, count } = this.props;\r\n\r\n        let canBeDeleted = true;\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeDeleted = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\r\n                canBeDeleted = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        let canBeForwarded = true;\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeForwarded = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_forwarded) {\r\n                canBeForwarded = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        const items = Array.from(MessageStore.selectedItems.values());\r\n        const canReport = canBeReported(items.length > 0 ? items[0].chatId : 0);\r\n\r\n        return (\r\n            <div className='header-command'>\r\n                {canBeForwarded && (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\r\n                        {t('Forward')}\r\n                        <span>&nbsp;</span>\r\n                        <AnimatedCounter counter={count}/>\r\n                    </Button>\r\n                )}\r\n                {canBeDeleted && (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\r\n                        {t('Delete')}\r\n                        <span>&nbsp;</span>\r\n                        <AnimatedCounter counter={count}/>\r\n                    </Button>\r\n                )}\r\n                {canReport && (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleReport}>\r\n                        {t('ReportChat')}\r\n                        <span>&nbsp;</span>\r\n                        <AnimatedCounter counter={count}/>\r\n                    </Button>\r\n                )}\r\n                <div className='header-command-space' />\r\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\r\n                    {t('Cancel')}\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderCommand.propTypes = {\r\n    count: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(HeaderCommand);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './PinnedMessageBorder.css';\r\n\r\nclass PinnedMessageBorder extends React.Component {\r\n\r\n    drawRect = (x, y, width, height, radius) => {\r\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\r\n    };\r\n\r\n    getClipPath = (id, barHeight, count) => {\r\n        const radius = 1;\r\n\r\n        let d = '';\r\n        if (count === 3) {\r\n            d = this.drawRect(0, 0, 2, barHeight, radius)\r\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\r\n                + this.drawRect(0, 23, 2, barHeight, radius);\r\n        } else {\r\n            for (let i = 0; i < count; i++) {\r\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <clipPath id={id}>\r\n                <path d={d}/>\r\n            </clipPath>\r\n        );\r\n    };\r\n\r\n    getBarHeight = (count, index) => {\r\n        let barHeight = 32;\r\n        if (count === 1) {\r\n            barHeight = 32;\r\n        } else if (count === 2) {\r\n            barHeight = 15;\r\n        } else if (count === 3) {\r\n            barHeight = 9;\r\n        } else if (count === 4) {\r\n            barHeight = 7;\r\n        } else if (count > 3) {\r\n            barHeight = 7;\r\n        }\r\n\r\n        return barHeight;\r\n    };\r\n\r\n    getMarkHeight = (count, index) => {\r\n        let barHeight = 32;\r\n        if (count === 1) {\r\n            barHeight = 32;\r\n        } else if (count === 2) {\r\n            barHeight = 15;\r\n        } else if (count === 3) {\r\n            barHeight = index === 1 ? 10 : 9;\r\n        } else if (count === 4) {\r\n            barHeight = 7;\r\n        } else if (count > 3) {\r\n            barHeight = 7;\r\n        }\r\n\r\n        return barHeight;\r\n    };\r\n\r\n    getMarkTranslateY = (index, barHeight, count) => {\r\n        if (count === 1) {\r\n            return 0;\r\n        } else if (count === 2) {\r\n            return index === 0 ? 0 : barHeight + 2;\r\n        }\r\n\r\n        if (count === 3) {\r\n            if (index === 0) {\r\n                return 0;\r\n            } else if (index === 1) {\r\n                return 11;\r\n            }\r\n\r\n            return 23;\r\n        } else {\r\n            return (barHeight + 2) * index;\r\n        }\r\n    };\r\n\r\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\r\n        if (count <= 4) {\r\n            return 0;\r\n        }\r\n\r\n        if (index <= 1) {\r\n            return 0;\r\n        } else if (index >= count - 2) {\r\n            return trackHeight - 32;\r\n        }\r\n\r\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\r\n    };\r\n\r\n    getTrackHeight = (count, barHeight) => {\r\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\r\n    };\r\n\r\n    render() {\r\n        const { count, index } = this.props;\r\n        if (count === 1) {\r\n            return (\r\n                <div className='pinned-message-border'>\r\n                    <div className='pinned-message-border-wrapper-1'/>\r\n                </div>);\r\n        }\r\n\r\n        const barHeight = this.getBarHeight(count, index);\r\n        const markHeight = this.getMarkHeight(count, index);\r\n        const trackHeight = this.getTrackHeight(count, barHeight);\r\n\r\n        const clipPathId = `clipPath_${count}`;\r\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\r\n\r\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\r\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\r\n\r\n        return (\r\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\r\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\r\n                    <svg height='0' width='0'>\r\n                        <defs>{clipPath}</defs>\r\n                    </svg>\r\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPinnedMessageBorder.propTypes = {\r\n    count: PropTypes.number,\r\n    index: PropTypes.number\r\n};\r\n\r\nexport default PinnedMessageBorder;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport CSSTransition from 'react-transition-group/CSSTransition';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ReplyTile from '../Tile/ReplyTile';\r\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\r\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\r\nimport { openChat } from '../../Actions/Client';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './PinnedMessage.css';\r\nimport AnimatedCounter from './AnimatedCounter';\r\nimport PinnedMessageBorder from './PinnedMessageBorder';\r\n\r\nclass PinnedMessage extends React.Component {\r\n    state = {};\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevPropsChatId } = state;\r\n        const { chatId } = props;\r\n\r\n        if (prevPropsChatId !== chatId) {\r\n            const media = MessageStore.getMedia(chatId);\r\n\r\n            const pinned = media ? media.pinned : [];\r\n\r\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\r\n            const thumbnail = getReplyThumbnail(chatId, messageId);\r\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\r\n\r\n            return {\r\n                prevPropsChatId: chatId,\r\n                clientData: ChatStore.getClientData(chatId),\r\n                pinned,\r\n                prevMessageId: 0,\r\n                messageId,\r\n                minithumbnail,\r\n                thumbnail,\r\n                lastPhoto: {\r\n                    messageId,\r\n                    minithumbnail,\r\n                    thumbnail\r\n                }\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId } = this.props;\r\n        const { clientData, pinned, messageId } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clientData !== clientData) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.pinned !== pinned) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId } = this.props;\r\n        const { prevMessageId, messageId } = this.state;\r\n\r\n        if (prevProps.chatId !== chatId) {\r\n            this.animateText(messageId, prevMessageId, 0);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\r\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\r\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    onClientUpdateCurrentPinnedMessage = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chatId) {\r\n            return;\r\n        }\r\n\r\n        this.scrollToMessageId(update.messageId);\r\n    };\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n        if (!message.is_pinned) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { pinned } = this.state;\r\n        const { chat_id, is_permanent, message_ids } = update;\r\n        const messageIds = new Map(message_ids.map(x => [x, x]));\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n        if (!pinned.some(x => messageIds.has(x.id))) {\r\n            return;\r\n        }\r\n        if (!is_permanent) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId } = this.props;\r\n        const { pinned } = this.state;\r\n        const { chat_id, message_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n        if (!pinned.some(x => x.id === message_id)) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    animateText = (messageId, prevMessageId, duration = 250) => {\r\n        const textElement = document.getElementById('pinned-message-animated-text');\r\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\r\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\r\n        if (!textElement || !text1Element || !text2Element) return;\r\n\r\n        const timingFunction = 'ease-in-out';\r\n\r\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\r\n        if (scrollDown) {\r\n            textElement.style.cssText = 'transform: translateY(-19px)';\r\n            text1Element.style.cssText = 'opacity: 0';\r\n            text2Element.style.cssText = 'opacity: 1';\r\n            requestAnimationFrame(() => {\r\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\r\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\r\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\r\n            });\r\n        } else {\r\n            textElement.style.cssText = 'transform: translateY(0px)';\r\n            text1Element.style.cssText = 'opacity: 1';\r\n            text2Element.style.cssText = 'opacity: 0';\r\n            requestAnimationFrame(() => {\r\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\r\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\r\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\r\n            });\r\n        }\r\n    };\r\n\r\n    setPinnedState = () => {\r\n        const { chatId } = this.props;\r\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\r\n\r\n        const clientData = ChatStore.getClientData(chatId);\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinned = media ? media.pinned : [];\r\n\r\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\r\n        if (!messageId && pinned.length > 0) {\r\n            messageId = pinned[0].id;\r\n        }\r\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\r\n\r\n        const thumbnail = getReplyThumbnail(chatId, messageId);\r\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\r\n\r\n        MessageStore.currentPinned = { chatId, id: messageId };\r\n        this.setState({\r\n            clientData,\r\n            pinned,\r\n            prevMessageId,\r\n            messageId,\r\n            thumbnail,\r\n            minithumbnail,\r\n            lastPhoto: {\r\n                messageId,\r\n                thumbnail,\r\n                minithumbnail\r\n            }\r\n        }, () => {\r\n            if (this.state.prevMessageId === 0) return;\r\n            if (currentMessageId === this.state.messageId) return;\r\n\r\n            this.animateText(this.state.messageId, this.state.prevMessageId);\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatMedia = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { chatId } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onClientUpdateSetChatClientData = update => {\r\n        const { chatId, clientData } = update;\r\n\r\n        if (this.props.chatId !== chatId) return;\r\n\r\n        this.setState({ clientData });\r\n    };\r\n\r\n    scrollToMessageId = nextMessageId => {\r\n        const { chatId } = this.props;\r\n        const { messageId, thumbnail, minithumbnail } = this.state;\r\n\r\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\r\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\r\n\r\n        const lastPhoto = nextThumbnail ? {\r\n            messageId: nextMessageId,\r\n            thumbnail: nextThumbnail,\r\n            minithumbnail: nextMinithumbnail\r\n        } : {\r\n            messageId,\r\n            thumbnail,\r\n            minithumbnail\r\n        }\r\n\r\n        MessageStore.currentPinned = { chatId, id: messageId };\r\n        this.setState({\r\n            prevMessageId: messageId,\r\n            messageId: nextMessageId,\r\n            thumbnail: nextThumbnail,\r\n            minithumbnail: nextMinithumbnail,\r\n            lastPhoto\r\n        }, () => {\r\n            if (this.state.prevMessageId === 0) return;\r\n            if (messageId === this.state.messageId) return;\r\n\r\n            this.animateText(this.state.messageId, this.state.prevMessageId);\r\n        });\r\n    };\r\n\r\n    handleClick = event => {\r\n        const { chatId } = this.props;\r\n        const { pinned, messageId } = this.state;\r\n        if (!pinned.length) return;\r\n\r\n        if (!messageId) return;\r\n        if (event.nativeEvent.which !== 1) return;\r\n\r\n        MessageStore.clickedPinned = { chatId, id: messageId };\r\n\r\n        openChat(chatId, messageId);\r\n\r\n        const index = pinned.findIndex(x => x.id === messageId);\r\n        if (index === -1) return;\r\n\r\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\r\n\r\n        this.scrollToMessageId(pinned[nextIndex].id);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleEditClick = event => {\r\n        const { chatId } = this.props;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateOpenPinned',\r\n            chatId\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\r\n\r\n        if (!chatId) return null;\r\n\r\n        if (clientData) {\r\n            const { unpinned } = clientData;\r\n            if (unpinned) return null;\r\n        }\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\r\n\r\n        let content = !message ? t('Loading') : getContent(message, t);\r\n        if (isDeletedMessage(message)) {\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\r\n        if (isDeletedMessage(prevMessage)) {\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        let index = 0;\r\n        let caption = t('PinnedMessage');\r\n        if (pinned && pinned.length > 1) {\r\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\r\n            if (pinned.length === 2) {\r\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\r\n            } else {\r\n                caption = (\r\n                    <>\r\n                        {t('PinnedMessage')}\r\n                        {index > 0 && (\r\n                            <>\r\n                                {' #'}\r\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\r\n                            </>)\r\n                        }\r\n                    </>);\r\n            }\r\n        }\r\n\r\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\r\n\r\n        return (\r\n            <>\r\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\r\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\r\n                    <CSSTransition\r\n                        in={!!thumbnail}\r\n                        classNames='pinned-message-tile'\r\n                        timeout={250}\r\n                        mountOnEnter={true}\r\n                        unmountOnExit={true}>\r\n                        <div>\r\n                            <ReplyTile\r\n                                chatId={chatId}\r\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\r\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\r\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\r\n                            />\r\n                        </div>\r\n                    </CSSTransition>\r\n                    <div className='pinned-message-content'>\r\n                        <div className='pinned-message-title'>{caption}</div>\r\n                        <div className='pinned-message-subtitle'>\r\n                            <div id='pinned-message-animated-text'>\r\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\r\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ListItem>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nPinnedMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(PinnedMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\r\nimport SearchIcon from '../../Assets/Icons/Search';\r\nimport MainMenuButton from './MainMenuButton';\r\nimport HeaderChat from '../Tile/HeaderChat';\r\nimport HeaderCommand from './HeaderCommand';\r\nimport HeaderProgress from './HeaderProgress';\r\nimport PinnedMessage from './PinnedMessage';\r\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\r\nimport {\r\n    getChatSubtitle,\r\n    getChatTitle,\r\n    isAccentChatSubtitle\r\n} from '../../Utils/Chat';\r\nimport { openChat, searchChat } from '../../Actions/Client';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinned = media ? media.pinned : [];\r\n\r\n        this.state = {\r\n            chatId,\r\n            pinned,\r\n            authorizationState: AppStore.getAuthorizationState(),\r\n            connectionState: AppStore.getConnectionState()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\r\n\r\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\r\n\r\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chatId } = this.state;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onClientUpdateChatMedia = update => {\r\n        const { chatId: currentChatId } = this.state;\r\n        const { chatId } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    setPinnedState() {\r\n        const { chatId } = this.state;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinned = media ? media.pinned : [];\r\n\r\n        this.setState({ pinned });\r\n    }\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const chatId = AppStore.getChatId();\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinned = media ? media.pinned : [];\r\n\r\n        this.setState({\r\n            chatId,\r\n            pinned\r\n        });\r\n    };\r\n\r\n    onUpdateConnectionState = update => {\r\n        this.setState({ connectionState: update.state });\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    openChatDetails = () => {\r\n        const { chatId } = this.state;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { isSmallWidth } = AppStore;\r\n\r\n        if (isSmallWidth) {\r\n            openChat(chatId, null, true);\r\n        } else {\r\n            changeChatDetailsVisibility(true);\r\n        }\r\n    };\r\n\r\n    handleSearchChat = () => {\r\n        const { chatId } = this.state;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        searchChat(chatId);\r\n    };\r\n\r\n    localize = str => {\r\n        const { t } = this.props;\r\n\r\n        return t(str)\r\n            .replace('...', '')\r\n            .replace('…', '');\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handlePinClick = () => {\r\n        const { chatId } = this.state;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateOpenPinned',\r\n            chatId\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            chatId,\r\n            pinned,\r\n            authorizationState,\r\n            connectionState,\r\n            selectionCount,\r\n        } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\r\n        let title = getChatTitle(chatId, true, t);\r\n        let subtitle = getChatSubtitle(chatId, true);\r\n        let showProgressAnimation = false;\r\n\r\n        if (connectionState) {\r\n            switch (connectionState['@type']) {\r\n                case 'connectionStateConnecting':\r\n                    title = this.localize('Connecting');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateConnectingToProxy':\r\n                    title = this.localize('Connecting to proxy');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateReady':\r\n                    break;\r\n                case 'connectionStateUpdating':\r\n                    title = this.localize('Updating');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateWaitingForNetwork':\r\n                    title = this.localize('Waiting for network');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n            }\r\n        } else if (authorizationState) {\r\n            switch (authorizationState['@type']) {\r\n                case 'authorizationStateClosed':\r\n                    break;\r\n                case ' authorizationStateClosing':\r\n                    break;\r\n                case 'authorizationStateLoggingOut':\r\n                    title = this.localize('Logging out');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'authorizationStateReady':\r\n                    break;\r\n                case 'authorizationStateWaitCode':\r\n                    break;\r\n                case 'authorizationStateWaitEncryptionKey':\r\n                    title = this.localize('Loading');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'authorizationStateWaitPassword':\r\n                    break;\r\n                case 'authorizationStateWaitPhoneNumber':\r\n                    break;\r\n                case 'authorizationStateWaitTdlibParameters':\r\n                    title = this.localize('Loading');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n            }\r\n        } else {\r\n            title = this.localize('Loading');\r\n            subtitle = '';\r\n            showProgressAnimation = true;\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\r\n                <div className='header-details-content'>\r\n                    <HeaderCommand count={selectionCount} />\r\n                    <div className='header-details-row'>\r\n                        {showProgressAnimation ? (\r\n                            <div\r\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\r\n                                onClick={this.openChatDetails}>\r\n                                <span className='header-status-content'>{title}</span>\r\n                                <HeaderProgress />\r\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\r\n                                    {subtitle}\r\n                                </span>\r\n                                <span className='header-status-tail' />\r\n                            </div>\r\n                        ) : (\r\n                            <HeaderChat\r\n                                className={classNames('grow', 'cursor-pointer')}\r\n                                chatId={chatId}\r\n                                onClick={this.openChatDetails}\r\n                            />\r\n                        )}\r\n                        <PinnedMessage chatId={chatId} />\r\n                        {chat && (\r\n                            <div className='header-right-buttons'>\r\n                                { pinned.length > 1 && (\r\n                                    <IconButton\r\n                                        aria-label='Pins'\r\n                                        onClick={this.handlePinClick}\r\n                                        onMouseDown={this.handleMouseDown}>\r\n                                        <PlaylistEditIcon />\r\n                                    </IconButton>\r\n                                )}\r\n                                <IconButton\r\n                                    aria-label='Search'\r\n                                    onClick={this.handleSearchChat}>\r\n                                    <SearchIcon />\r\n                                </IconButton>\r\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Header);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './VolumeButton.css';\r\n\r\nclass VolumeButton extends React.Component {\r\n    state = {\r\n        anchorEl: null,\r\n        value: PlayerStore.volume,\r\n        prevValue: PlayerStore.volume,\r\n        dragging: false,\r\n        buttonOver: false,\r\n        popupOver: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n    }\r\n\r\n    onClientUpdateMediaVolume = update => {\r\n        const { volume, prevVolume } = update;\r\n\r\n        if (prevVolume === undefined) {\r\n            this.setState({ value: volume });\r\n        } else {\r\n            this.setState({ value: volume, prevValue: prevVolume });\r\n        }\r\n    };\r\n\r\n    handlePopoverOpen = anchorEl => {\r\n        this.setState({ anchorEl: anchorEl });\r\n    };\r\n\r\n    handlePopoverClose = () => {\r\n        const { dragging, buttonOver, popupOver } = this.state;\r\n\r\n        if (dragging) return;\r\n        if (buttonOver) return;\r\n        if (popupOver) return;\r\n\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleMouseEnter = (event, openPopover) => {\r\n        this.setState({ buttonOver: true });\r\n\r\n        if (openPopover) {\r\n            this.handlePopoverOpen(event.currentTarget);\r\n        }\r\n    };\r\n\r\n    handleMouseLeave = () => {\r\n        this.setState({ buttonOver: false }, () => {\r\n            this.handlePopoverClose();\r\n        });\r\n    };\r\n\r\n    handlePopupMouseLeave = () => {\r\n        this.setState({ popupOver: false }, () => {\r\n            this.handlePopoverClose();\r\n        });\r\n    };\r\n\r\n    handleVoiceClick = () => {\r\n        const { value, prevValue } = this.state;\r\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaVolume',\r\n            volume: nextValue\r\n        });\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        const { dragging, prevValue } = this.state;\r\n\r\n        if (dragging) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaVolume',\r\n                volume: value\r\n            });\r\n        } else {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaVolume',\r\n                prevVolume: value > 0 ? value : prevValue,\r\n                volume: value\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDragStart = () => {\r\n        const { value } = this.state;\r\n\r\n        this.setState({\r\n            dragging: true,\r\n            prevValue: value\r\n        });\r\n    };\r\n\r\n    handleDragEnd = () => {\r\n        const { value, prevValue } = this.state;\r\n\r\n        this.setState(\r\n            {\r\n                dragging: false,\r\n                prevValue: value > 0 ? value : prevValue\r\n            },\r\n            () => {\r\n                this.handlePopoverClose();\r\n            }\r\n        );\r\n    };\r\n\r\n    getVolumeIcon = value => {\r\n        if (value === 0) {\r\n            return <VolumeOffIcon fontSize='small' />;\r\n        }\r\n\r\n        if (value < 0.25) {\r\n            return <VolumeMuteIcon fontSize='small' />;\r\n        }\r\n\r\n        if (value < 0.5) {\r\n            return <VolumeDownIcon fontSize='small' />;\r\n        }\r\n\r\n        return <VolumeUpIcon fontSize='small' />;\r\n    };\r\n\r\n    render() {\r\n        const { anchorEl, value } = this.state;\r\n        const open = Boolean(anchorEl);\r\n\r\n        return (\r\n            <div\r\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\r\n                onMouseLeave={this.handleMouseLeave}\r\n                style={{\r\n                    position: 'relative',\r\n                    background: 'transparent'\r\n                }}>\r\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\r\n                    {this.getVolumeIcon(value)}\r\n                </IconButton>\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        background: 'transparent',\r\n                        visibility: open ? 'visible' : 'hidden',\r\n                        zIndex: 1\r\n                    }}\r\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\r\n                    onMouseLeave={this.handlePopupMouseLeave}>\r\n                    <div className='volume-button-panel'>\r\n                        <Slider\r\n                            min={0}\r\n                            max={1}\r\n                            step={0.01}\r\n                            value={value}\r\n                            onChange={this.handleChange}\r\n                            onDragStart={this.handleDragStart}\r\n                            onDragEnd={this.handleDragEnd}\r\n                            orientation='vertical'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VolumeButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\r\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass RepeatButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { repeat } = PlayerStore;\r\n\r\n        this.state = {\r\n            repeat\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\r\n    }\r\n\r\n    onClientUpdateMediaRepeat = update => {\r\n        const { repeat } = update;\r\n\r\n        this.setState({ repeat });\r\n    };\r\n\r\n    handleRepeat = () => {\r\n        const { repeat } = this.state;\r\n\r\n        let nextRepeat = repeat;\r\n        switch (repeat) {\r\n            case RepeatEnum.NONE: {\r\n                nextRepeat = RepeatEnum.REPEAT;\r\n                break;\r\n            }\r\n            case RepeatEnum.REPEAT: {\r\n                nextRepeat = RepeatEnum.REPEAT_ONE;\r\n                break;\r\n            }\r\n            case RepeatEnum.REPEAT_ONE: {\r\n                nextRepeat = RepeatEnum.NONE;\r\n                break;\r\n            }\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaRepeat',\r\n            repeat: nextRepeat\r\n        });\r\n    };\r\n\r\n    getIcon = repeat => {\r\n        switch (repeat) {\r\n            case RepeatEnum.NONE: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n            case RepeatEnum.REPEAT: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n            case RepeatEnum.REPEAT_ONE: {\r\n                return <RepeatOneIcon fontSize='small' />;\r\n            }\r\n            default: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { repeat } = this.state;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\r\n                onClick={this.handleRepeat}>\r\n                {this.getIcon(repeat)}\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RepeatButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass ShuffleButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { shuffle } = PlayerStore;\r\n\r\n        this.state = {\r\n            shuffle\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\r\n    }\r\n\r\n    onClientUpdateMediaShuffle = update => {\r\n        const { shuffle } = update;\r\n\r\n        this.setState({ shuffle });\r\n    };\r\n\r\n    handleShuffle = () => {\r\n        const { shuffle } = this.state;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaShuffle',\r\n            shuffle: !shuffle\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { shuffle } = this.state;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={!shuffle ? 'default' : 'primary'}\r\n                onClick={this.handleShuffle}>\r\n                <ShuffleIcon fontSize='small' />\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShuffleButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass PlaybackRateButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\r\n\r\n        this.state = {\r\n            audioPlaybackRate,\r\n            playbackRate\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n    }\r\n\r\n    onClientUpdateMediaPlaybackRate = update => {\r\n        const { playbackRate } = update;\r\n\r\n        this.setState({ playbackRate });\r\n    };\r\n\r\n    onClientUpdateMediaAudioPlaybackRate = update => {\r\n        const { audioPlaybackRate } = update;\r\n\r\n        this.setState({ audioPlaybackRate });\r\n    };\r\n\r\n    handlePlaybackRate = () => {\r\n        const { audio } = this.props;\r\n        const { audioPlaybackRate, playbackRate } = this.state;\r\n\r\n        const rate = audio ? audioPlaybackRate : playbackRate;\r\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\r\n            ? PLAYER_PLAYBACKRATE_FAST\r\n            : PLAYER_PLAYBACKRATE_NORMAL;\r\n\r\n        if (audio) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\r\n                audioPlaybackRate: nextRate\r\n            });\r\n        } else {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaybackRate',\r\n                playbackRate: nextRate\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { audio } = this.props;\r\n        const { audioPlaybackRate, playbackRate } = this.state;\r\n\r\n        const rate = audio ? audioPlaybackRate : playbackRate;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\r\n                onClick={this.handlePlaybackRate}>\r\n                <div className='header-player-playback-icon'>2X</div>\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nPlaybackRateButton.defaultProps = {\r\n    audio: false\r\n}\r\n\r\nPlaybackRateButton.propTypes = {\r\n    audio: PropTypes.bool\r\n}\r\n\r\nexport default PlaybackRateButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { getDurationString } from '../../Utils/Common';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport './Time.css';\r\n\r\nclass Time extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { duration } = this.props;\r\n\r\n        const currentTime = 0;\r\n        const reverse = false;\r\n\r\n        this.state = {\r\n            reverse,\r\n            currentTime,\r\n            duration,\r\n            currentTimeString: getDurationString(currentTime, duration, reverse),\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n    }\r\n\r\n    onClientUpdateMediaTime = update => {\r\n        const { currentTime, duration } = update;\r\n        const { reverse } = this.state;\r\n\r\n        this.setState({\r\n            currentTime,\r\n            duration,\r\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\r\n        });\r\n    };\r\n\r\n    handleReverse = event => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        const { currentTime, duration, reverse } = this.state;\r\n\r\n        this.setState({\r\n            reverse: !reverse,\r\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { currentTimeString } = this.state;\r\n\r\n        return (\r\n            <div className='header-player-time' onClick={this.handleReverse}>\r\n                {currentTimeString}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Time;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as ReactDOM from 'react-dom';\r\nimport MediaAudio from '../Message/Media/Audio';\r\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\r\nimport { openMedia } from '../../Utils/Message';\r\nimport { getMedia } from '../../Utils/Media';\r\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\r\nimport { openInstantViewMedia } from '../../Utils/InstantView';\r\nimport { SCROLL_PRECISION } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Playlist.css';\r\n\r\nclass Playlist extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n        this.itemRefMap = new Map();\r\n\r\n        const { message, block, playlist } = PlayerStore;\r\n        this.state = {\r\n            message,\r\n            block,\r\n            playlist,\r\n\r\n            open: false,\r\n            titleMouseOver: false,\r\n            playlistMouseOver: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { open } = this.state;\r\n\r\n        if (!prevState.open && open) {\r\n            this.scrollToActive();\r\n        }\r\n    }\r\n\r\n    scrollToActive = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        const { playlist, message, block } = this.state;\r\n        if (!message && !block) return;\r\n        if (!playlist) return;\r\n\r\n        const index = [...playlist.items]\r\n            .reverse()\r\n            .findIndex(x => playlistItemEquals(x, message || block));\r\n        if (index === -1) return;\r\n\r\n        const item = this.itemRefMap.get(index);\r\n        if (!item) return;\r\n\r\n        const node = ReactDOM.findDOMNode(item);\r\n        if (!node) return;\r\n\r\n        list.scrollTop = node.offsetTop - 15;\r\n    };\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\r\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\r\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\r\n    }\r\n\r\n    onClientUpdateMediaTitleMouseOver = update => {\r\n        const { over } = update;\r\n\r\n        if (over) {\r\n            this.setState(\r\n                {\r\n                    playlistMouseOver: over\r\n                },\r\n                () => {\r\n                    this.tryOpen();\r\n                }\r\n            );\r\n        } else {\r\n            this.setState(\r\n                {\r\n                    playlistMouseOver: over\r\n                },\r\n                () => {\r\n                    this.tryClose();\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { source } = update;\r\n\r\n        switch (source['@type']) {\r\n            case 'message': {\r\n\r\n                this.setState({\r\n                    message: source,\r\n                    block: null\r\n                })\r\n                break;\r\n            }\r\n            case 'instantViewSource': {\r\n\r\n                this.setState({\r\n                    message: null,\r\n                    block: source.block\r\n                });\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylistLoading = update => {\r\n        const { message, block } = this.state;\r\n        const { source } = update;\r\n\r\n        const chatId = message ? message.chat_id : 0;\r\n        const messageId = message ? message.id : 0;\r\n\r\n        if (isCurrentSource(chatId, messageId, block, source)) {\r\n            this.setState({\r\n                playlist: null\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylist = update => {\r\n        const { message, block } = this.state;\r\n        const { source, playlist } = update;\r\n\r\n        const chatId = message ? message.chat_id : 0;\r\n        const messageId = message ? message.id : 0;\r\n\r\n        if (isCurrentSource(chatId, messageId, block, source)) {\r\n            this.setState({\r\n                playlist\r\n            });\r\n        }\r\n    };\r\n\r\n    tryOpen = () => {\r\n        clearTimeout(this.openTimeout);\r\n\r\n        this.openTimeout = setTimeout(() => {\r\n            const { titleMouseOver, playlistMouseOver } = this.state;\r\n            this.setState({\r\n                open: titleMouseOver || playlistMouseOver\r\n            });\r\n        }, 250);\r\n    };\r\n\r\n    tryClose = () => {\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n            const { titleMouseOver, playlistMouseOver } = this.state;\r\n            this.setState({\r\n                open: titleMouseOver || playlistMouseOver\r\n            });\r\n        }, 250);\r\n    };\r\n\r\n    handleMouseEnter = () => {\r\n        this.setState({\r\n            playlistMouseOver: true,\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleMouseLeave = () => {\r\n        this.setState(\r\n            {\r\n                playlistMouseOver: false\r\n            },\r\n            () => {\r\n                this.tryClose();\r\n            }\r\n        );\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        if (list.scrollTop <= SCROLL_PRECISION) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaylistNext'\r\n            });\r\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaylistPrev'\r\n            });\r\n        }\r\n    };\r\n\r\n    getPageBlock(block, instantView) {\r\n        if (!block) return null;\r\n\r\n        let element = null;\r\n        switch (block['@type']) {\r\n            case 'pageBlockAudio': {\r\n                element = (\r\n                    <MediaAudio\r\n                        block={block}\r\n                        audio={block.audio}\r\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\r\n                );\r\n                break;\r\n            }\r\n            case 'pageBlockVoiceNote': {\r\n                element = (\r\n                    <MediaVoiceNote\r\n                        block={block}\r\n                        voiceNote={block.voice_note}\r\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\r\n                );\r\n                break;\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    render() {\r\n        const { open, playlist } = this.state;\r\n\r\n        if (!open) return null;\r\n        if (!playlist) return null;\r\n\r\n        const { items } = playlist;\r\n        if (!items) return null;\r\n        if (items.length <= 1) return null;\r\n\r\n        this.itemRefMap.clear();\r\n\r\n        let iv = null;\r\n        if (items[0]['@type'] === 'instantViewSource') {\r\n            iv = playlist.source.instantView;\r\n        }\r\n\r\n        const getMediaFunc = items[0]['@type'] === 'message'\r\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\r\n            : x => this.getPageBlock(x, iv)\r\n\r\n        return (\r\n            <div className='playlist'>\r\n                <div className='playlist-wrapper'>\r\n                    <div\r\n                        ref={this.listRef}\r\n                        className='playlist-items'\r\n                        onMouseEnter={this.handleMouseEnter}\r\n                        onMouseLeave={this.handleMouseLeave}\r\n                        onScroll={this.handleScroll}>\r\n                        {[...items]\r\n                            .reverse()\r\n                            .map((x, index) => (\r\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\r\n                                    {getMediaFunc(x)}\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPlaylist.propTypes = {\r\n\r\n};\r\n\r\nexport default Playlist;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { loadInstantViewContent } from '../Utils/File';\r\nimport { setInstantViewContent } from './Client';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nexport function openMediaInstantView(instantView, block) {\r\n    const url = urlCache.get(instantView);\r\n    if (!url) return;\r\n\r\n    console.log('[IV] open', instantView);\r\n    loadInstantViewContent(instantView);\r\n    setInstantViewContent({ instantView, block, url });\r\n}\r\n\r\nlet timestamp = null;\r\n\r\nconst ivCache = new Map();\r\nconst urlCache = new Map();\r\n\r\nexport async function openInstantView(url) {\r\n    try {\r\n        let result = null;\r\n        if (ivCache.has(url)) {\r\n            result = ivCache.get(url);\r\n        } else {\r\n            const now = (timestamp = new Date());\r\n            result = await TdLibController.send({\r\n                '@type': 'getWebPageInstantView',\r\n                url,\r\n                force_full: true\r\n            });\r\n            ivCache.set(url, result);\r\n            urlCache.set(result, url);\r\n            if (timestamp !== now) return;\r\n        }\r\n\r\n        console.log('[IV] open', result);\r\n        loadInstantViewContent(result);\r\n        setInstantViewContent({ instantView: result, url });\r\n    } catch {\r\n        const newWindow = window.open();\r\n        newWindow.opener = null;\r\n        newWindow.location = url;\r\n    }\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\r\nimport PauseIcon from '../../Assets/Icons/Pause';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport VolumeButton from '../Player/VolumeButton';\r\nimport RepeatButton from '../Player/RepeatButton';\r\nimport ShuffleButton from '../Player/ShuffleButton';\r\nimport PlaybackRateButton from './PlaybackRateButton';\r\nimport Time from '../Player/Time';\r\nimport Playlist from '../Player/Playlist';\r\nimport { supportsStreaming } from '../../Utils/File';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\r\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\r\nimport { openMediaInstantView } from '../../Actions/InstantView';\r\nimport { clamp } from '../../Utils/Common';\r\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './HeaderPlayer.css';\r\n\r\nclass HeaderPlayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n\r\n        const { message, block, instantView, playlist } = PlayerStore;\r\n        const { currentTime, duration } = getCurrentTime(message);\r\n\r\n        this.state = {\r\n            currentTime,\r\n            duration,\r\n            message,\r\n            block,\r\n            instantView,\r\n            playlist,\r\n            playing: false,\r\n            src: getMediaSrc(message),\r\n            mimeType: getMediaMimeType(message)\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { message, block, playlist, src, playing } = this.state;\r\n\r\n        if (nextState.block !== block) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.message !== message) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playlist !== playlist) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.src !== src) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playing !== playing) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.addMediaSessionHandlers();\r\n\r\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\r\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\r\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\r\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\r\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\r\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.removeMediaSessionHandlers();\r\n\r\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\r\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\r\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\r\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\r\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\r\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\r\n    }\r\n\r\n    addMediaSessionHandlers() {\r\n        const { mediaSession } = navigator;\r\n        if (!mediaSession) return;\r\n\r\n        try {\r\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\r\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\r\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\r\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\r\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    handleSeekForward = () => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\r\n    };\r\n\r\n    handleSeekBackward = () => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\r\n    };\r\n\r\n    handleSeekTo = event => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(event.seekTime);\r\n    };\r\n\r\n    handleSeek = currentTime => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        currentTime = clamp(currentTime, 0, video.duration || 0);\r\n\r\n        video.currentTime = currentTime;\r\n    };\r\n\r\n    removeMediaSessionHandlers() {\r\n        const { mediaSession } = navigator;\r\n        if (!mediaSession) return;\r\n\r\n        try{\r\n            mediaSession.setActionHandler('nexttrack', null);\r\n            mediaSession.setActionHandler('previoustrack', null);\r\n            mediaSession.setActionHandler('seekforward', null);\r\n            mediaSession.setActionHandler('seekbackward', null);\r\n            mediaSession.setActionHandler('seekto', null);\r\n        }catch {\r\n\r\n        }\r\n    }\r\n\r\n    fadeOutVolume(duration) {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const totalIterations = 20;\r\n        let count = 0;\r\n        const currentVolume = player.volume;\r\n        this.volumeInterval = setInterval(() => {\r\n            if (count >= totalIterations) {\r\n                player.pause();\r\n                player.volume = currentVolume;\r\n                clearInterval(this.volumeInterval);\r\n            } else {\r\n                player.volume = currentVolume / (count + 1);\r\n                count++;\r\n            }\r\n        }, duration / totalIterations);\r\n    }\r\n\r\n    fadeInVolume(duration) {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const totalIterations = 20;\r\n        let count = 0;\r\n        const currentVolume = player.volume;\r\n        player.volume = 0;\r\n        player.play();\r\n        this.volumeInterval = setInterval(() => {\r\n            if (count >= totalIterations) {\r\n                player.volume = currentVolume;\r\n                clearInterval(this.volumeInterval);\r\n            } else {\r\n                player.volume = currentVolume / totalIterations * (count + 1);\r\n                count++;\r\n            }\r\n        }, duration / totalIterations);\r\n    }\r\n\r\n    onClientUpdateRecordStart = update => {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        if (!player.paused) {\r\n            this.fadeOutVolume(250);\r\n            this.pausedForRecord = true;\r\n        }\r\n    };\r\n\r\n    onClientUpdateRecordStop = update => {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        if (player.paused && this.pausedForRecord) {\r\n            this.fadeInVolume(250);\r\n            this.pausedForRecord = false;\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaybackRate = update => {\r\n        const { playbackRate } = update;\r\n\r\n        const { message, block } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const audio = hasAudio(message || block);\r\n        if (audio) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.playbackRate = playbackRate;\r\n    };\r\n\r\n    onClientUpdateMediaAudioPlaybackRate = update => {\r\n        const { audioPlaybackRate } = update;\r\n\r\n        const { message, block } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        if (!hasAudio(message || block)) return;\r\n        if (!useAudioPlaybackRate(message || block)) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.playbackRate = audioPlaybackRate;\r\n    };\r\n\r\n    onClientUpdateMediaVolume = update => {\r\n        const { volume } = update;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.volume = volume;\r\n    };\r\n\r\n    onClientUpdateMediaSeek = update => {\r\n        const { source, value, duration } = update;\r\n        const { message, block } = this.state;\r\n\r\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n        if (!player.duration) {\r\n            this.currentValue = { value, duration };\r\n            return;\r\n        }\r\n\r\n        player.currentTime = value * player.duration;\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\r\n    };\r\n\r\n    onClientUpdateMediaViewerEnded = update => {\r\n        this.playingMediaViewer = false;\r\n    };\r\n\r\n    onClientUpdateMediaViewerPause = update => {\r\n        this.playingMediaViewer = false;\r\n    };\r\n\r\n    onClientUpdateMediaViewerPlay = update => {\r\n        this.playingMediaViewer = true;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        this.fadeOutVolume(250);\r\n    };\r\n\r\n    startPlayingFile = source => {\r\n        if (!source) return;\r\n\r\n        const { playlist } = PlayerStore;\r\n        const { src: prevSrc } = this.state;\r\n\r\n        const src = getMediaSrc(source);\r\n        const mimeType = getMediaMimeType(source);\r\n        const { currentTime, duration } = getCurrentTime(source);\r\n        const playing = Boolean(src);\r\n\r\n        const srcSource = source['@type'] === 'instantViewSource'\r\n            ? { message: null, block: source.block, instantView: source.instantView }\r\n            : { message: source, block: null, instantView: null };\r\n\r\n        this.setState(\r\n            {\r\n                currentTime,\r\n                duration,\r\n                playlist,\r\n                playing,\r\n                src,\r\n                ...srcSource,\r\n                mimeType\r\n            },\r\n            () => {\r\n                const player = this.videoRef.current;\r\n                if (!player) return;\r\n\r\n                if (prevSrc !== src) {\r\n                    player.load();\r\n                    if (this.currentValue) {\r\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\r\n                        this.currentValue = null;\r\n                    } else {\r\n                        player.currentTime = currentTime;\r\n                    }\r\n                }\r\n\r\n                if (this.playingMediaViewer) {\r\n                    player.pause();\r\n\r\n                    TdLibController.clientUpdate({\r\n                        '@type': 'clientUpdateMediaPause',\r\n                        source\r\n                    });\r\n                } else if (player.paused) {\r\n                    player.play();\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { chatId, messageId, fileId } = update;\r\n        const { message, block, instantView } = this.state;\r\n\r\n        if (message) {\r\n            const { chat_id, id, content } = message;\r\n            if (!content) return;\r\n            if (chatId !== chat_id || messageId !== id) return;\r\n\r\n            let startPlaying = false;\r\n            switch (content['@type']) {\r\n                case 'messageText': {\r\n                    const { web_page } = content;\r\n                    if (web_page) {\r\n                        const { audio, voice_note, video_note } = web_page;\r\n\r\n                        if (audio) {\r\n                            if (supportsStreaming()) return;\r\n\r\n                            const { audio: file } = audio;\r\n                            if (file) {\r\n                                startPlaying = true;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (voice_note) {\r\n                            const { voice } = voice_note;\r\n                            if (voice) {\r\n                                startPlaying = true;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (video_note) {\r\n                            const { video } = video_note;\r\n                            if (video) {\r\n                                startPlaying = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageAudio': {\r\n                    const { audio } = content;\r\n                    if (audio) {\r\n                        if (supportsStreaming()) return;\r\n\r\n                        const { audio: file } = audio;\r\n                        if (file) {\r\n                            startPlaying = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageVoiceNote': {\r\n                    const { voice_note } = content;\r\n                    if (voice_note) {\r\n                        const { voice } = voice_note;\r\n                        if (voice) {\r\n                            startPlaying = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageVideoNote': {\r\n                    const { video_note } = content;\r\n                    if (video_note) {\r\n                        const { video } = video_note;\r\n                        if (video) {\r\n                            startPlaying = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (startPlaying) {\r\n                this.startPlayingFile(message);\r\n            }\r\n        } else if (block) {\r\n            let startPlaying = false;\r\n            switch (block['@type']) {\r\n                case 'pageBlockAudio': {\r\n                    const { audio } = block;\r\n                    if (audio) {\r\n                        if (supportsStreaming()) return;\r\n\r\n                        const { audio: file } = audio;\r\n                        if (file && file.id === fileId) {\r\n                            startPlaying = true;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'pageBlockVoiceNote': {\r\n                    const { voice_note } = block;\r\n                    if (voice_note) {\r\n                        const { voice: file } = voice_note;\r\n                        if (file && file.id === fileId) {\r\n                            startPlaying = true;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'pageBlockVideoNote': {\r\n                    const { video_note } = block;\r\n                    if (video_note) {\r\n                        const { video: file } = video_note;\r\n                        if (file && file.id === fileId) {\r\n                            startPlaying = true;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (startPlaying) {\r\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylist = update => {\r\n        const { playlist, source } = update;\r\n        const { message, block } = this.state;\r\n\r\n        const chatId = message ? message.chat_id : 0;\r\n        const messageId = message ? message.id : 0;\r\n\r\n        if (isCurrentSource(chatId, messageId, block, source)) {\r\n            this.setState({ playlist });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaClose = update => {\r\n        this.setState({\r\n            message: null,\r\n            block: null,\r\n            instantView: null,\r\n            playlist: null,\r\n            playing: false,\r\n            src: null,\r\n            mimeType: null\r\n        }, () => {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        });\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { source } = update;\r\n        const { message, block, src } = this.state;\r\n\r\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\r\n            if (!src) return;\r\n\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            this.pausedForRecord = false;\r\n            if (player.paused) {\r\n                player.play();\r\n            } else {\r\n                player.pause();\r\n            }\r\n        } else {\r\n            this.startPlayingFile(source);\r\n        }\r\n    };\r\n\r\n    handlePrev = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPrev'\r\n        });\r\n    };\r\n\r\n    handlePlay = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaActive',\r\n            source\r\n        });\r\n    };\r\n\r\n    handleNext = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaNext'\r\n        });\r\n    };\r\n\r\n    handleEnded = (moveNext = true) => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaEnding',\r\n            source,\r\n            moveNext\r\n        });\r\n\r\n        this.setState(\r\n            {\r\n                //playing: false,\r\n                //message: null,\r\n                //src: null\r\n            },\r\n            () => {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateMediaEnd',\r\n                    source,\r\n                    moveNext\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    handleVideoEnded = () => {\r\n        const video = this.videoRef.current;\r\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\r\n\r\n        this.handleEnded(true);\r\n    };\r\n\r\n    handleClose = () => {\r\n        const player = this.videoRef.current;\r\n        if (player) {\r\n            player.pause();\r\n        }\r\n\r\n        this.handleEnded(false);\r\n    };\r\n\r\n    handleLoadedMetadata = () => {\r\n        let { message, block, instantView, currentTime } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\r\n\r\n        const audio = hasAudio(message || block);\r\n        const voiceNote = hasVoice(message || block);\r\n\r\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\r\n        if (voiceNote) {\r\n            rate = playbackRate;\r\n        } else if (audio && useAudioPlaybackRate(message || block)) {\r\n            rate = audioPlaybackRate;\r\n        }\r\n\r\n        player.playbackRate = rate;\r\n        player.volume = volume;\r\n        player.muted = false;\r\n        if (this.currentValue) {\r\n            player.currentTime = player.duration * this.currentValue.value;\r\n            this.currentValue = null;\r\n        } else {\r\n            player.currentTime = currentTime;\r\n        }\r\n\r\n        player.play();\r\n\r\n        const { buffered, duration, videoWidth, videoHeight } = player;\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaLoadedMetadata',\r\n            source,\r\n            buffered,\r\n            duration,\r\n            videoWidth,\r\n            videoHeight\r\n        });\r\n\r\n        if (audio) {\r\n            return;\r\n        }\r\n        if (voiceNote) {\r\n            return;\r\n        }\r\n\r\n        let stream = null;\r\n        if ('captureStream' in player) {\r\n            stream = player.captureStream();\r\n        } else if ('mozCaptureStream' in player) {\r\n            stream = player.mozCaptureStream();\r\n        }\r\n\r\n        if (!stream) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaCaptureStream',\r\n            chatId: message.chat_id,\r\n            messageId: message.id,\r\n            stream: stream\r\n        });\r\n    };\r\n\r\n    handleProgress = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { buffered } = player;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaProgress',\r\n            source,\r\n            buffered\r\n        });\r\n    }\r\n\r\n    handleTimeUpdate = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { currentTime, buffered, duration } = player;\r\n\r\n        this.setState({ currentTime });\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTime',\r\n            source,\r\n            duration,\r\n            currentTime,\r\n            buffered,\r\n            timestamp: Date.now()\r\n        });\r\n\r\n        this.setCurrentTime({ currentTime, duration });\r\n    };\r\n\r\n    handleCanPlay = () => {\r\n\r\n    };\r\n\r\n    handleVideoPlay = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        this.setState({ playing: true });\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { currentTime, duration } = player;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPlay',\r\n            source,\r\n            currentTime,\r\n            duration,\r\n            timestamp: Date.now()\r\n        });\r\n    };\r\n\r\n    handleVideoPause = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        this.setState({\r\n            playing: false\r\n        });\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPause',\r\n            source\r\n        });\r\n    };\r\n\r\n    hasPrev = (item, playlist) => {\r\n        if (!item) return false;\r\n        if (!playlist || !playlist.items.length) return false;\r\n\r\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\r\n        if (index === -1) return false;\r\n\r\n        return index + 1 < playlist.items.length;\r\n    };\r\n\r\n    hasNext = (item, playlist) => {\r\n        if (!item) return false;\r\n        if (!playlist || !playlist.items.length) return false;\r\n\r\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\r\n        if (index === -1) return false;\r\n\r\n        return index - 1 >= 0;\r\n    };\r\n\r\n    handleTitleMouseEnter = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTitleMouseOver',\r\n            over: true\r\n        });\r\n    };\r\n\r\n    handleTitleMouseLeave = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTitleMouseOver',\r\n            over: false\r\n        });\r\n    };\r\n\r\n    handleTitleClick = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (message) {\r\n            openChat(message.chat_id, message.id);\r\n            return;\r\n        }\r\n\r\n        if (block && instantView) {\r\n            openMediaInstantView(instantView, block);\r\n            return;\r\n        }\r\n    };\r\n\r\n    setCurrentTime = currentTime => {\r\n        const { message, block } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        if (!useAudioPlaybackRate(message || block)) return;\r\n\r\n        const audio = getMessageAudio(message.chat_id, message.id);\r\n        if (!audio) return;\r\n\r\n        const { audio: file } = audio;\r\n        if (!file) return;\r\n\r\n        const { remote } = file;\r\n        if (!remote) return;\r\n\r\n        const { unique_id } = remote;\r\n        if (!unique_id) return;\r\n\r\n        if (!currentTime) {\r\n            PlayerStore.clearCurrentTime(unique_id);\r\n        } else {\r\n            PlayerStore.setCurrentTime(unique_id, currentTime);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\r\n\r\n        const audio = hasAudio(message || block);\r\n        const useAudioRate = useAudioPlaybackRate(message || block);\r\n\r\n        const date = message ? message.date : null;\r\n\r\n        const title = getMediaTitle(message || block, t);\r\n        const dateHintStr = getDateHint(date);\r\n        const dateStr = getDate(date);\r\n        const showDate = false; //!audio;\r\n        const showPlaybackRate = !audio || useAudioRate;\r\n        const showRepeat = audio;\r\n        const showShuffle = audio;\r\n        const hasPrev = this.hasPrev(message || block, playlist);\r\n        const hasNext = this.hasNext(message || block, playlist);\r\n\r\n        const source = src ? <source src={src} type={mimeType}/> : null;\r\n\r\n        return (\r\n            <>\r\n                <video\r\n                    className='header-player-video'\r\n                    ref={this.videoRef}\r\n                    autoPlay={true}\r\n                    controls={false}\r\n                    width={44}\r\n                    height={44}\r\n                    disablePictureInPicture={true}\r\n                    onLoadedMetadata={this.handleLoadedMetadata}\r\n                    onCanPlay={this.handleCanPlay}\r\n                    onPlay={this.handleVideoPlay}\r\n                    onPause={this.handleVideoPause}\r\n                    onEnded={this.handleVideoEnded}\r\n                    onTimeUpdate={this.handleTimeUpdate}\r\n                    onProgress={this.handleProgress}\r\n                >\r\n                    {source}\r\n                </video>\r\n                {(message || block) && (\r\n                    <div className='header-player'>\r\n                        <IconButton\r\n                            disabled={!hasPrev}\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            onClick={this.handlePrev}>\r\n                            <SkipPreviousIcon fontSize='small' />\r\n                        </IconButton>\r\n                        <IconButton\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            disabled={!src}\r\n                            onClick={this.handlePlay}>\r\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\r\n                        </IconButton>\r\n                        <IconButton\r\n                            disabled={!hasNext}\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            onClick={this.handleNext}>\r\n                            <SkipNextIcon fontSize='small' />\r\n                        </IconButton>\r\n                        <Playlist />\r\n                        <div\r\n                            className='header-player-content'\r\n                            onMouseEnter={this.handleTitleMouseEnter}\r\n                            onMouseLeave={this.handleTitleMouseLeave}\r\n                            onClick={this.handleTitleClick}>\r\n                            <div className='header-player-title'>\r\n                                {title}\r\n                                {showDate && (\r\n                                    <span title={dateHintStr}>\r\n                                        &nbsp;\r\n                                        {dateStr}\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                            &nbsp;\r\n                        </div>\r\n                        <Time duration={duration}/>\r\n                        <VolumeButton />\r\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\r\n                        {showRepeat && <RepeatButton />}\r\n                        {showShuffle && <ShuffleButton />}\r\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\r\n                            <CloseIcon fontSize='small' />\r\n                        </IconButton>\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(HeaderPlayer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { getChatSender, getChatUserId } from '../../Utils/Chat';\r\nimport { requestBlockSender } from '../../Actions/Message';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ActionBar.css';\r\n\r\nclass ActionBar extends React.Component {\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\r\n    }\r\n\r\n    onUpdateChatActionBar = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        TdLibController.send({\r\n            '@type': 'removeChatActionBar',\r\n            chat_id: chatId\r\n        });\r\n    };\r\n\r\n    handleReportSpam = () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestBlockSender(getChatSender(chatId));\r\n    };\r\n\r\n    handleReportUnrelatedLocation = () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestBlockSender(getChatSender(chatId));\r\n    };\r\n\r\n    handleSharePhoneNumber = () => {\r\n        const { chatId } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'sharePhoneNumber',\r\n            user_id: userId\r\n        });\r\n    };\r\n\r\n    handleAddContact = () => {\r\n        const { chatId } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        const user = UserStore.get(userId);\r\n        if (!user) return;\r\n\r\n        const { user_id, phone_number, first_name, last_name } = user;\r\n\r\n        TdLibController.send({\r\n            '@type': 'addContact',\r\n            contact: {\r\n                '@type': 'contact',\r\n                phone_number,\r\n                first_name,\r\n                last_name,\r\n                vcard: '',\r\n                user_id\r\n            },\r\n            share_phone_number: false\r\n        });\r\n    };\r\n\r\n    handleBlockUser = () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestBlockSender(getChatSender(chatId));\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        if (!chatId) return null;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { action_bar } = chat;\r\n        if (!action_bar) return null;\r\n\r\n        let content = null;\r\n        switch (action_bar['@type']) {\r\n            case 'chatActionBarSharePhoneNumber': {\r\n                content = (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\r\n                        {t('ShareMyPhone')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarAddContact': {\r\n                content = (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\r\n                        {t('AddContactChat')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarReportAddBlock': {\r\n                content = (\r\n                    <>\r\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\r\n                            {t('AddContactChat')}\r\n                        </Button>\r\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\r\n                            {t('ReportSpamUser')}\r\n                        </Button>\r\n                    </>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarUnrelatedLocation': {\r\n                content = (\r\n                    <Button\r\n                        color='secondary'\r\n                        className='header-command-button'\r\n                        onClick={this.handleReportUnrelatedLocation}>\r\n                        {t('ReportSpamLocation')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarReportSpam': {\r\n                content = (\r\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\r\n                        {t('ReportSpam')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarInviteMembers': {\r\n                break;\r\n            }\r\n        }\r\n        if (!content) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className='action-bar' onMouseDown={this.handleClick}>\r\n                <div className='action-bar-content'>{content}</div>\r\n                <div className='action-bar-close-button'>\r\n                    <IconButton onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nActionBar.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(ActionBar);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\r\n    'Copy'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\r\n    'FrameCheck'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\r\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\r\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\r\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\r\n    </g>,\r\n    'RemoveCheck'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport CopyIcon from '../../Assets/Icons/Copy';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\r\nimport EditIcon from '../../Assets/Icons/Edit';\r\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\r\nimport ShareIcon from '../../Assets/Icons/Share';\r\nimport StopIcon from '../../Assets/Icons/Stop';\r\nimport PinIcon from '../../Assets/Icons/Pin2';\r\nimport UnpinIcon from '../../Assets/Icons/PinOff';\r\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\r\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\r\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\r\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\r\nimport { copy } from '../../Utils/Text';\r\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\r\nimport { saveBlob } from '../../Utils/File';\r\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MessageMenu.css';\r\n\r\nclass MessageMenu extends React.PureComponent {\r\n    state = {\r\n        confirmStopPoll: false\r\n    };\r\n\r\n    handleConfirmStopPoll = event => {\r\n        const { dialog } = this.state;\r\n        if (dialog) return;\r\n\r\n        this.setState({\r\n            confirmStopPoll: true,\r\n            contextMenu: false\r\n        });\r\n    };\r\n\r\n    handleCloseConfirm = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ confirmStopPoll: false });\r\n    };\r\n\r\n    handleStopPoll = event => {\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n        const { confirmStopPoll } = this.state;\r\n\r\n        if (confirmStopPoll) {\r\n            this.setState({ confirmStopPoll: false });\r\n        }\r\n\r\n        stopPoll(chatId, messageId);\r\n    };\r\n\r\n    handleUnvote = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        cancelPollAnswer(chatId, messageId);\r\n    };\r\n\r\n    handleCopyLink = event => {\r\n        const { onClose, copyLink, t } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        if (!copyLink) return;\r\n\r\n        copy(copyLink);\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleCopyPublicMessageLink = async event => {\r\n        const { onClose, chatId, messageId, t } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        const httpUrl = await TdLibController.send({\r\n            '@type': 'getMessageLink',\r\n            chat_id: chatId,\r\n            message_id: messageId,\r\n            for_album: false,\r\n            for_comment: false\r\n        });\r\n\r\n        if (!httpUrl) return;\r\n        const { link: copyLink } = httpUrl;\r\n\r\n        if (!copyLink) return;\r\n\r\n        copy(copyLink);\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => {\r\n                        closeSnackbar(snackKey);\r\n                    }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleReply = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n        replyMessage(chatId, messageId);\r\n    };\r\n\r\n    handlePin = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n\r\n        if (isMessagePinned(chatId, messageId)) {\r\n            requestUnpinMessage(chatId, messageId);\r\n        } else {\r\n            requestPinMessage(chatId, messageId);\r\n        }\r\n    };\r\n\r\n    handleForward = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        forwardMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleEdit = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n        editMessage(chatId, messageId);\r\n    };\r\n\r\n    handleSelect = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n        onClose(event);\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\r\n        selectMessage(chatId, messageId, selected);\r\n    };\r\n\r\n    handleDelete = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        deleteMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleDownload = event => {\r\n        const { chatId, messageId } = this.props;\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        const { sticker } = content;\r\n        if (!sticker) return;\r\n\r\n        const { sticker: file } = sticker;\r\n        if (!file) return;\r\n\r\n        const blob = FileStore.getBlob(file.id);\r\n        if (!blob) return;\r\n\r\n        saveBlob(blob, 'sticker.tgs');\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\r\n        const { confirmStopPoll } = this.state;\r\n        if (!confirmStopPoll && !open) return null;\r\n\r\n        const isPinned = isMessagePinned(chatId, messageId);\r\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\r\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\r\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\r\n        const canBePinned = canPinMessages(chatId) && !isServiceMessage(MessageStore.get(chatId, messageId));\r\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\r\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\r\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\r\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId) && !isServiceMessage(MessageStore.get(chatId, messageId));\r\n        const canCopyLink = Boolean(copyLink);\r\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\r\n\r\n        const hasItems =\r\n            canBeUnvoted || canBeClosed || canBeReplied || canBePinned || canBeForwarded || canBeDeleted || canBeEdited || canBeSelected || canCopyLink || canCopyPublicMessageLink;\r\n        if (!hasItems) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Popover\r\n                    open={true}\r\n                    onClose={onClose}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={anchorPosition}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\r\n                        {/*    <ListItemIcon>*/}\r\n                        {/*        <CopyIcon />*/}\r\n                        {/*    </ListItemIcon>*/}\r\n                        {/*    <ListItemText primary={t('Download')} />*/}\r\n                        {/*</MenuItem>*/}\r\n                        {canBeSelected && (\r\n                            <MenuItem onClick={this.handleSelect}>\r\n                                <ListItemIcon>\r\n                                    <FrameCheckIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Select')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canCopyPublicMessageLink && (\r\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\r\n                                <ListItemIcon>\r\n                                    <CopyIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('CopyMessageLink')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canCopyLink && (\r\n                            <MenuItem onClick={this.handleCopyLink}>\r\n                                <ListItemIcon>\r\n                                    <CopyIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('CopyLink')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeReplied && (\r\n                            <MenuItem onClick={this.handleReply}>\r\n                                <ListItemIcon>\r\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Reply')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBePinned && (\r\n                            <MenuItem onClick={this.handlePin}>\r\n                                {isPinned ? (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <UnpinIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('UnpinMessage')} />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <PinIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('PinMessage')} />\r\n                                    </>\r\n                                )}\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeForwarded && (\r\n                            <MenuItem onClick={this.handleForward}>\r\n                                <ListItemIcon>\r\n                                    <ShareIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Forward')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeEdited && (\r\n                            <MenuItem onClick={this.handleEdit}>\r\n                                <ListItemIcon>\r\n                                    <EditIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Edit')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeDeleted && (\r\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\r\n                                <ListItemIcon>\r\n                                    <DeleteIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Delete')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeUnvoted && (\r\n                            <MenuItem onClick={this.handleUnvote}>\r\n                                <ListItemIcon>\r\n                                    <RemoveCheckIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Unvote')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeClosed && (\r\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\r\n                                <ListItemIcon>\r\n                                    <StopIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('StopPoll')} />\r\n                            </MenuItem>\r\n                        )}\r\n                    </MenuList>\r\n                </Popover>\r\n                <Dialog\r\n                    transitionDuration={0}\r\n                    open={confirmStopPoll}\r\n                    onClose={this.handleCloseConfirm}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleStopPoll} color='primary'>\r\n                            {t('Stop')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nMessageMenu.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    anchorPosition: PropTypes.object,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    copyLink: PropTypes.string\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(MessageMenu);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\r\n    'PinFilled'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport PinIcon from '../../Assets/Icons/PinFilled';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Status from './Status';\r\nimport { albumHistoryEquals } from '../../Utils/Common';\r\nimport { getDate, getDateHint, getViews, isCallMessage } from '../../Utils/Message';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Meta.css';\r\n\r\nclass Meta extends React.Component {\r\n\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId, messageIds } = props;\r\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\r\n\r\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\r\n\r\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\r\n            const id = ids[ids.length - 1];\r\n\r\n            const message = MessageStore.get(chatId, id);\r\n            if (!message) return null;\r\n\r\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n                prevMessageIds: messageIds,\r\n\r\n                message,\r\n                date,\r\n                editDate,\r\n                interactionInfo,\r\n                isOutgoing,\r\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\r\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\r\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId, messageIds } = this.props;\r\n\r\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (!ids.some(x => x === message_id)) return;\r\n\r\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\r\n    };\r\n\r\n    onUpdateMessageEdited = update => {\r\n        const { chat_id, message_id, edit_date: editDate } = update;\r\n        const { message } = this.state;\r\n\r\n        if (!message) return;\r\n        if (message.chat_id !== chat_id) return;\r\n        if (message.id !== message_id) return;\r\n\r\n        this.setState({ editDate });\r\n    };\r\n\r\n    onUpdateMessageInteractionInfo = update => {\r\n        const { chat_id, message_id, interaction_info } = update;\r\n        const { message } = this.state;\r\n\r\n        if (!message) return;\r\n        if (message.chat_id !== chat_id) return;\r\n        if (message.id !== message_id) return;\r\n\r\n        this.setState({ interactionInfo: interaction_info });\r\n    };\r\n\r\n    render() {\r\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\r\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\r\n\r\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\r\n\r\n        const dateStr = getDate(date);\r\n        const dateHintStr = getDateHint(date);\r\n        const viewsStr = getViews(views);\r\n\r\n        const isCall = isCallMessage(chatId, messageId);\r\n\r\n        return (\r\n            <div className={classNames('meta', className)} style={style}>\r\n                <span>&ensp;</span>\r\n                {views > 0 && (\r\n                    <>\r\n                        <VisibilityIcon className='meta-views-icon' />\r\n                        <span className='meta-views' title={views}>\r\n                            &nbsp;\r\n                            {viewsStr}\r\n                            &nbsp; &nbsp;\r\n                        </span>\r\n                    </>\r\n                )}\r\n                {isPinned && (\r\n                    <>\r\n                        <PinIcon className='meta-pin-icon' />\r\n                        <span>&nbsp;</span>\r\n                    </>\r\n                )}\r\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\r\n                <a onClick={onDateClick}>\r\n                    <span title={dateHintStr}>{dateStr}</span>\r\n                </a>\r\n                {isOutgoing && !isCall && <Status chatId={chatId} messageId={messageId} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMeta.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number,\r\n    messageIds: PropTypes.arrayOf(PropTypes.number),\r\n    onDateClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Meta);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport Audio from '../Media/Audio';\r\nimport Document from '../Media/Document';\r\nimport MessageMenu from '../MessageMenu';\r\nimport Meta from '../Meta';\r\nimport Photo from '../Media/Photo';\r\nimport Video from '../Media/Video';\r\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\r\nimport { selectMessage } from '../../../Actions/Client';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './AlbumItem.css';\r\n\r\nclass AlbumItem extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false\r\n    };\r\n\r\n    getAlbumItem = (message, displaySize) => {\r\n        const { chat_id, id, content } = message;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageAudio': {\r\n                const inlineMeta = (\r\n                    <Meta\r\n                        className='meta-hidden'\r\n                        key={`${chat_id}_${id}_meta`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                    />\r\n                );\r\n\r\n                const webPage = getWebPage(message);\r\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\r\n\r\n                return (\r\n                    <>\r\n                        <Audio\r\n                            type='message'\r\n                            chatId={chat_id}\r\n                            messageId={id}\r\n                            audio={content.audio}\r\n                            displaySize={displaySize}\r\n                            style={{ width: '100%', height: '100%' }}\r\n                            openMedia={this.openMedia}/>\r\n                        { text && text.length > 0 && (\r\n                            <div className={'message-text'}>\r\n                                {text}\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                );\r\n            }\r\n            case 'messagePhoto': {\r\n                return (\r\n                    <Photo\r\n                        type='message'\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        photo={content.photo}\r\n                        displaySize={displaySize}\r\n                        style={{ width: '100%', height: '100%' }}\r\n                        openMedia={this.openMedia}/>\r\n                    );\r\n            }\r\n            case 'messageVideo': {\r\n                return (\r\n                    <Video\r\n                        type='message'\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        video={content.video}\r\n                        displaySize={displaySize}\r\n                        style={{ width: '100%', height: '100%' }}\r\n                        openMedia={this.openMedia}/>\r\n                );\r\n            }\r\n            case 'messageDocument': {\r\n                const inlineMeta = (\r\n                    <Meta\r\n                        className='meta-hidden'\r\n                        key={`${chat_id}_${id}_meta`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                    />\r\n                );\r\n\r\n                const webPage = getWebPage(message);\r\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\r\n\r\n                return (\r\n                    <>\r\n                        <Document\r\n                            type='message'\r\n                            chatId={chat_id}\r\n                            messageId={id}\r\n                            document={content.document}\r\n                            displaySize={displaySize}\r\n                            style={{ width: '100%', height: '100%' }}\r\n                            openMedia={this.openMedia}/>\r\n                        { text && text.length > 0 && (\r\n                            <div className={'message-text'}>\r\n                                {text}\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { message } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        if (!this.state.selected) return;\r\n\r\n        this.setState({ selected: false });\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { message } = this.props;\r\n        const { chat_id: chatId, id: messageId } = message;\r\n\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ selected, highlighted: false });\r\n        }\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const copyLink =\r\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                copyLink,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (MessageStore.selectedItems.size > 0) return;\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { message } = this.props;\r\n        if (!message) return;\r\n\r\n        const { chat_id, id } = message;\r\n\r\n        openMedia(chat_id, id);\r\n    };\r\n\r\n    handleSelection = event => {\r\n        // if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { message } = this.props;\r\n        const { chat_id: chatId, id: messageId } = message;\r\n\r\n        if (MessageStore.selectedItems.size === 0) return;\r\n\r\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\r\n        selectMessage(chatId, messageId, selected);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { message, position, displaySize, source } = this.props;\r\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\r\n\r\n        const { chat_id, id } = message;\r\n\r\n        let style = {};\r\n        let className = 'album-document-item';\r\n        if (position) {\r\n            style = { width: position.width, height: position.height * displaySize };\r\n            className = 'album-item'\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\r\n                    onClick={this.handleSelection}\r\n                    onContextMenu={this.handleOpenContextMenu}\r\n                    style={style}>\r\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\r\n                    {(selected || highlighted) && (\r\n                        <div className='album-item-selection'>\r\n                            <div className='album-item-selection-mark'>\r\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <MessageMenu\r\n                    chatId={chat_id}\r\n                    messageId={id}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    copyLink={copyLink}\r\n                    source={source}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAlbumItem.propTypes = {\r\n    message: PropTypes.object,\r\n    position: PropTypes.object,\r\n    displaySize: PropTypes.number\r\n};\r\n\r\nexport default AlbumItem;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport './DayMeta.css';\r\n\r\nclass DayMeta extends React.Component {\r\n    componentDidMount() {\r\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\r\n    }\r\n\r\n    onClientUpdateLanguage = () => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { date, i18n } = this.props;\r\n\r\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\r\n        const options = showYear\r\n            ? {\r\n                  day: 'numeric',\r\n                  month: 'long',\r\n                  year: 'numeric'\r\n              }\r\n            : {\r\n                  day: 'numeric',\r\n                  month: 'long'\r\n              };\r\n\r\n        return (\r\n            <div className='day-meta'>\r\n                <div className='day-meta-wrapper'>\r\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDayMeta.propTypes = {\r\n    date: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(DayMeta);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\r\nimport { openUser, openChat } from '../../Actions/Client';\r\nimport './Forward.css';\r\n\r\nclass Forward extends React.Component {\r\n    state = {\r\n        arrowRef: null\r\n    };\r\n\r\n    handleArrowRef = node => {\r\n        this.setState({\r\n            arrowRef: node\r\n        });\r\n    };\r\n\r\n    openForward = event => {\r\n        event.stopPropagation();\r\n\r\n        const { forwardInfo } = this.props;\r\n        if (!forwardInfo) return null;\r\n\r\n        const { origin } = forwardInfo;\r\n\r\n        switch (origin['@type']) {\r\n            case 'messageForwardOriginUser': {\r\n                const { sender_user_id } = origin;\r\n\r\n                openUser(sender_user_id, true);\r\n                break;\r\n            }\r\n            case 'messageForwardOriginHiddenUser': {\r\n                break;\r\n            }\r\n            case 'messageForwardOriginChannel': {\r\n                const { chat_id, message_id } = origin;\r\n\r\n                openChat(chat_id, message_id);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t, forwardInfo } = this.props;\r\n        const { arrowRef } = this.state;\r\n\r\n        const title = getForwardTitle(forwardInfo, t);\r\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\r\n            <>\r\n                {t('HidAccount')}\r\n                <span className='forward-arrow' ref={this.handleArrowRef} />\r\n            </>\r\n        ) : (\r\n            ''\r\n        );\r\n\r\n        return (\r\n            <div className={classNames('message-author', 'forward')}>\r\n                <div>{t('ForwardedMessage')}</div>\r\n                <div className='forward-subtitle'>\r\n                    {t('From') + ' '}\r\n                    {/*<Tooltip*/}\r\n                    {/*    title={tooltip}*/}\r\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\r\n                    {/*    PopperProps={{*/}\r\n                    {/*        popperOptions: {*/}\r\n                    {/*            modifiers: {*/}\r\n                    {/*                arrow: {*/}\r\n                    {/*                    enabled: Boolean(arrowRef),*/}\r\n                    {/*                    element: arrowRef*/}\r\n                    {/*                }*/}\r\n                    {/*            }*/}\r\n                    {/*        }*/}\r\n                    {/*    }}*/}\r\n                    {/*    placement='top'>*/}\r\n                        <a onClick={this.openForward}>{title}</a>\r\n                    {/*</Tooltip>*/}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nForward.propTypes = {\r\n    forwardInfo: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(Forward);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\r\n\r\nconst POSITION_FLAG_LEFT = 1;\r\nconst POSITION_FLAG_RIGHT = 2;\r\nconst POSITION_FLAG_TOP = 4;\r\nconst POSITION_FLAG_BOTTOM = 8;\r\n\r\nclass MessageGroupedLayoutAttempt {\r\n    constructor(lineCounts, heights) {\r\n        this.lineCounts = lineCounts;\r\n        this.heights = heights;\r\n    }\r\n}\r\n\r\nclass GroupedMessagePosition {\r\n    aspectRatio;\r\n    isEdge;\r\n    flags;\r\n    isLast;\r\n    leftSpanOffset;\r\n    minX;\r\n    maxX;\r\n    minY;\r\n    maxY;\r\n    height;\r\n    width;\r\n    siblingHeights;\r\n    spanSize;\r\n\r\n    set(minX, maxX, minY, maxY, w, h, flags) {\r\n        this.minX = minX;\r\n        this.maxX = maxX;\r\n        this.minY = minY;\r\n        this.maxY = maxY;\r\n        this.spanSize = w;\r\n        this.width = w;\r\n        this.height = h;\r\n        this.flags = flags;\r\n    }\r\n\r\n    getInfo() {\r\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\r\n    }\r\n}\r\n\r\nclass GroupedMessages {\r\n\r\n    constructor() {\r\n        this.posArray = [];\r\n        this.positions = new Map();\r\n        this.maxSizeWidth = 800;\r\n        this.hasSibling = false;\r\n        this.scale = 1.0;\r\n    }\r\n\r\n    multiHeight(array, start, end) {\r\n        let sum = 0.0;\r\n        for (let i = start; i < end; i++) {\r\n            sum += array[i];\r\n        }\r\n\r\n        return 800.0 * this.scale / sum;\r\n    }\r\n\r\n    calculate(messages, desiredWidth) {\r\n        this.posArray = [];\r\n        this.positions = new Map();\r\n        this.messages = messages;\r\n\r\n        if (!messages) return;\r\n        const { length } = messages;\r\n        if (length <= 1) {\r\n            return;\r\n        }\r\n\r\n        this.totalWidth = 0;\r\n        this.totalHeight = 0.0;\r\n\r\n        this.scale = desiredWidth / this.maxSizeWidth;\r\n        this.maxSizeWidth = desiredWidth;\r\n\r\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\r\n        const minHeight = Math.trunc(120 * this.scale);\r\n        const minWidth = Math.trunc(96 * this.scale);\r\n        const paddingsWidth = Math.trunc(32 * this.scale);\r\n        const maxSizeHeight = 814.0 * this.scale;\r\n        let averageAspectRatio = 1.0;\r\n        let proportions = '';\r\n        const isOut = false;\r\n        let maxX = 0;\r\n        let forceCalc = false;\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            const message = messages[i];\r\n            const { w, h } = GroupedMessages.getWidthHeight(message);\r\n\r\n            const position = new GroupedMessagePosition();\r\n            position.isLast = i === messages.length - 1;\r\n            position.aspectRatio = w / h;\r\n            if (position.aspectRatio > 1.2) {\r\n                proportions += 'w';\r\n            } else if (position.aspectRatio < 0.8) {\r\n                proportions += 'n';\r\n            } else {\r\n                proportions += 'q';\r\n            }\r\n\r\n            averageAspectRatio += position.aspectRatio;\r\n            if (position.aspectRatio > 2.0) {\r\n                forceCalc = true;\r\n            }\r\n\r\n            this.positions.set(message, position);\r\n            this.posArray.push(position);\r\n        }\r\n\r\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\r\n        averageAspectRatio = averageAspectRatio / length;\r\n\r\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\r\n            switch (length) {\r\n                case 2: {\r\n                    const position1 = this.posArray[0];\r\n                    const position2 = this.posArray[1];\r\n\r\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\r\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\r\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n\r\n                        this.totalWidth = this.maxSizeWidth;\r\n                        this.totalHeight = height * 2;\r\n                    } else if (proportions === 'ww' || proportions === 'qq') {\r\n                        const width = this.maxSizeWidth / 2;\r\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\r\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = width + width;\r\n                        this.totalHeight = height;\r\n                    } else {\r\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\r\n                        let firstWidth = this.maxSizeWidth - secondWidth;\r\n                        if (firstWidth < minWidth) {\r\n                            const diff = minWidth - firstWidth;\r\n                            firstWidth = minWidth;\r\n                            secondWidth -= diff;\r\n                        }\r\n\r\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\r\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = firstWidth + secondWidth;\r\n                        this.totalHeight = height;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 3: {\r\n                    const position1 = this.posArray[0];\r\n                    const position2 = this.posArray[1];\r\n                    const position3 = this.posArray[2];\r\n                    if (proportions[0] === 'n')\r\n                    {\r\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\r\n                        const secondHeight = maxSizeHeight - thirdHeight;\r\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\r\n\r\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\r\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        position3.spanSize = this.maxSizeWidth;\r\n\r\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\r\n\r\n                        if (isOut) {\r\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\r\n                        } else {\r\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\r\n                            position3.leftSpanOffset = leftWidth;\r\n                        }\r\n                        this.hasSibling = true;\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = leftWidth + rightWidth;\r\n                        this.totalHeight = 1.0;\r\n                    }\r\n                    else\r\n                    {\r\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\r\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n\r\n                        const width = this.maxSizeWidth / 2;\r\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\r\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\r\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = this.maxSizeWidth;\r\n                        this.totalHeight = firstHeight + secondHeight;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 4: {\r\n                    const position1 = this.posArray[0];\r\n                    const position2 = this.posArray[1];\r\n                    const position3 = this.posArray[2];\r\n                    const position4 = this.posArray[3];\r\n                    if (proportions[0] === 'w') {\r\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\r\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n\r\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\r\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\r\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\r\n                        const w1 = this.maxSizeWidth - w0 - w2;\r\n                        h = Math.min(maxSizeHeight - h0, h);\r\n                        h /= maxSizeHeight;\r\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\r\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\r\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        maxX = 2;\r\n\r\n                        this.totalWidth = this.maxSizeWidth;\r\n                        this.totalHeight = h0 + h;\r\n                    } else {\r\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\r\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\r\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\r\n                        const h2 = 1.0 - h0 - h1;\r\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\r\n\r\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\r\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\r\n                        position3.spanSize = this.maxSizeWidth;\r\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        position4.spanSize = this.maxSizeWidth;\r\n\r\n                        if (isOut) {\r\n                            position1.spanSize = this.maxSizeWidth - w;\r\n                        } else {\r\n                            position2.spanSize = this.maxSizeWidth - w0;\r\n                            position3.leftSpanOffset = w0;\r\n                            position4.leftSpanOffset = w0;\r\n                        }\r\n                        position1.siblingHeights = [ h0, h1, h2 ];\r\n                        this.hasSibling = true;\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = w + w0;\r\n                        this.totalHeight = h0 + h1 + h2;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            const croppedRatios = new Array(this.posArray.length);\r\n            for (let i = 0; i < length; i++) {\r\n                if (averageAspectRatio > 1.1) {\r\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\r\n                } else {\r\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\r\n                }\r\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\r\n            }\r\n\r\n            let firstLine;\r\n            let secondLine;\r\n            let thirdLine;\r\n            let fourthLine;\r\n            const attempts = [];\r\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\r\n                secondLine = croppedRatios.length - firstLine;\r\n                if (firstLine > 3 || secondLine > 3) {\r\n                    continue;\r\n                }\r\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\r\n            }\r\n\r\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\r\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\r\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\r\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\r\n                        continue;\r\n                    }\r\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\r\n                }\r\n            }\r\n\r\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\r\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\r\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\r\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\r\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\r\n                            continue;\r\n                        }\r\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\r\n                    }\r\n                }\r\n            }\r\n\r\n            let optimal = null;\r\n            let optimalDiff = 0.0;\r\n            let maxHeight = this.maxSizeWidth / 3 * 4;\r\n            for (let i = 0; i < attempts.length; i++) {\r\n                const attempt = attempts[i];\r\n                let height = 0;\r\n                let minLineHeight = Number.MAX_VALUE;\r\n                for (let j = 0; j < attempt.heights.length; j++) {\r\n                    height += attempt.heights[j];\r\n                    if (attempt.heights[j] < minLineHeight) {\r\n                        minLineHeight = attempt.heights[j];\r\n                    }\r\n                }\r\n\r\n                let diff = Math.abs(height - maxHeight);\r\n                if (attempt.lineCounts.length > 1) {\r\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\r\n                        diff *= 1.5;\r\n                    }\r\n                }\r\n\r\n                if (minLineHeight < minWidth) {\r\n                    diff *= 1.5;\r\n                }\r\n\r\n                if (optimal === null || diff < optimalDiff) {\r\n                    optimal = attempt;\r\n                    optimalDiff = diff;\r\n                }\r\n            }\r\n\r\n            if (optimal === null) {\r\n                return;\r\n            }\r\n\r\n            let index = 0;\r\n            let y = 0.0;\r\n\r\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\r\n                let c = optimal.lineCounts[i];\r\n                let lineHeight = optimal.heights[i];\r\n                let spanLeft = this.maxSizeWidth;\r\n                let posToFix = null;\r\n                maxX = Math.max(maxX, c - 1);\r\n                for (let j = 0; j < c; j++) {\r\n                    let ratio = croppedRatios[index];\r\n                    let width = Math.trunc(ratio * lineHeight);\r\n                    spanLeft -= width;\r\n                    let pos = this.posArray[index];\r\n                    let flags = 0;\r\n                    if (i === 0) {\r\n                        flags |= POSITION_FLAG_TOP;\r\n                    }\r\n                    if (i === optimal.lineCounts.length - 1) {\r\n                        flags |= POSITION_FLAG_BOTTOM;\r\n                    }\r\n                    if (j === 0) {\r\n                        flags |= POSITION_FLAG_LEFT;\r\n                        if (isOut) {\r\n                            posToFix = pos;\r\n                        }\r\n                    }\r\n                    if (j === c - 1) {\r\n                        flags |= POSITION_FLAG_RIGHT;\r\n                        if (!isOut) {\r\n                            posToFix = pos;\r\n                        }\r\n                    }\r\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\r\n                    index++;\r\n                }\r\n                posToFix.width += spanLeft;\r\n                posToFix.spanSize += spanLeft;\r\n                y += lineHeight;\r\n            }\r\n\r\n            this.totalWidth = this.maxSizeWidth;\r\n            this.totalHeight = y / maxSizeHeight;\r\n        }\r\n    }\r\n\r\n    static getWidthHeight(message) {\r\n        let w = 0;\r\n        let h = 0;\r\n        let sizes = [];\r\n        switch (message.content['@type']){\r\n            case 'messagePhoto': {\r\n                const { photo, minithumbnail } = message.content;\r\n                if (photo) {\r\n                    sizes = photo.sizes;\r\n                } else if (minithumbnail) {\r\n                    sizes.push(minithumbnail);\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'messageVideo': {\r\n                const { video, thumbnail, minithumbnail } = message.content;\r\n                if (video) {\r\n                    const { width, height } = video;\r\n                    sizes.push({ width, height });\r\n                } else if (minithumbnail) {\r\n                    sizes.push(minithumbnail);\r\n                } else if (thumbnail) {\r\n                    sizes.push(thumbnail);\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'messageDocument': {\r\n                const { thumbnail, minithumbnail } = message.content;\r\n                if (minithumbnail) {\r\n                    sizes.push(minithumbnail);\r\n                } else if (thumbnail) {\r\n                    sizes.push(thumbnail);\r\n                } else {\r\n                    sizes.push({ width: 90, height: 90 });\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\r\n        if (photoSize) {\r\n            w = photoSize.width;\r\n            h = photoSize.height;\r\n        }\r\n\r\n        return { w, h };\r\n    }\r\n\r\n    static getPhotoSize(sizes, side, byMinSize) {\r\n        if (!sizes || !sizes.length) return null;\r\n\r\n        let lastSide = 0;\r\n        let lastSize = null;\r\n        for (let i = 0; i < sizes.length; i++) {\r\n            const { width: w, height: h } = sizes[i];\r\n\r\n            if (byMinSize) {\r\n                const currentSide = h >= w ? w : h;\r\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\r\n                    lastSide = currentSide;\r\n                    lastSize = sizes[i];\r\n                }\r\n\r\n            } else {\r\n                const currentSide = w >= h ? w : h;\r\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\r\n                    lastSide = currentSide;\r\n                    lastSize = sizes[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return lastSize;\r\n    }\r\n}\r\n\r\nexport default GroupedMessages;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport './UnreadSeparator.css';\r\n\r\nfunction UnreadSeparator(props) {\r\n    const { t } = props;\r\n\r\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\r\n}\r\n\r\nexport default withTranslation()(UnreadSeparator);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './EmptyTile.css';\r\n\r\nfunction EmptyTile(props) {\r\n    const { dialog, small, big, style } = props;\r\n\r\n    return (\r\n        <div\r\n            className={classNames(\r\n                'chat-tile',\r\n                { 'tile-dialog': dialog },\r\n                { 'tile-small': small },\r\n                { 'tile-big': big }\r\n            )}\r\n            style={style}/>\r\n    );\r\n}\r\n\r\nEmptyTile.propTypes = {};\r\n\r\nexport default EmptyTile;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport AlbumItem from './AlbumItem';\r\nimport DayMeta from '../DayMeta';\r\nimport Forward from '../Forward';\r\nimport GroupedMessages from './GroupedMessages';\r\nimport UnreadSeparator from '../UnreadSeparator';\r\nimport MessageAuthor from '../MessageAuthor';\r\nimport Reply from '../Reply';\r\nimport Meta from '../Meta';\r\nimport ChatTile from '../../Tile/ChatTile';\r\nimport EmptyTile from '../../Tile/EmptyTile';\r\nimport UserTile from '../../Tile/UserTile';\r\nimport { albumHistoryEquals } from '../../../Utils/Common';\r\nimport { selectMessage } from '../../../Actions/Client';\r\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\r\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\r\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './Album.css';\r\n\r\nclass Album extends React.Component {\r\n    state = { };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { messageIds } = this.props;\r\n        const { emojiMatches, selected, highlighted } = this.state;\r\n\r\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.emojiMatches !== emojiMatches) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selected !== selected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { displaySize, chatId, messageIds } = props;\r\n\r\n        if (messageIds !== state.prevMessageIds) {\r\n            const grouped = new GroupedMessages();\r\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\r\n\r\n            return {\r\n                grouped,\r\n                prevMessageIds: messageIds\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false, lastHighlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\r\n        }\r\n    };\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        if (!this.state.selected) return;\r\n\r\n        this.setState({ selected: false });\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageIds, displaySize } = this.props;\r\n        const { emojiMatches: oldEmojiMatches } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (!messageIds.some(x => x === message_id)) return;\r\n\r\n        const grouped = new GroupedMessages();\r\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\r\n\r\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\r\n        if (emojiMatches !== oldEmojiMatches) {\r\n            this.setState({ emojiMatches, grouped });\r\n        } else {\r\n            this.setState({ grouped });\r\n        }\r\n    };\r\n\r\n    handleSelection = () => {\r\n        // if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = this.state;\r\n\r\n        if (selected) {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], false);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], true);\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { showTail, source } = this.props;\r\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\r\n        const {\r\n            emojiMatches,\r\n            selected,\r\n            highlighted,\r\n            shook,\r\n            copyLink,\r\n            contextMenu,\r\n            left,\r\n            top\r\n        } = this.state;\r\n        const { grouped } = this.state;\r\n        if (!grouped) {\r\n            return null;\r\n        }\r\n\r\n        if (!messageIds.length) {\r\n            return null;\r\n        }\r\n\r\n        let messageId = messageIds[messageIds.length - 1];\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return <div>[empty message]</div>;\r\n\r\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\r\n\r\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\r\n\r\n        const inlineMeta = (\r\n            <Meta\r\n                className='meta-hidden'\r\n                key={`${chatId}_${messageId}_meta`}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n            />\r\n        );\r\n        const webPage = getWebPage(message);\r\n        let text = null;\r\n        for (let i = 0; i < messageIds.length; i++) {\r\n            const m = MessageStore.get(chatId, messageIds[i]);\r\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\r\n            if (t && t.length) {\r\n                if (text !== null) {\r\n                    text = null;\r\n                    break;\r\n                } else {\r\n                    text = t;\r\n                    messageId = messageIds[i];\r\n                }\r\n            }\r\n        }\r\n        const hasCaption = text !== null && text.length > 0;\r\n        const meta = (\r\n            <Meta\r\n                className={classNames('meta-text', {\r\n                    'meta-bubble': !hasCaption\r\n                })}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n                onDateClick={this.handleDateClick}\r\n            />\r\n        );\r\n\r\n        const showForward = showMessageForward(chatId, messageId);\r\n        const showReply = Boolean(reply_to_message_id);\r\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\r\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\r\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\r\n        const isChannel = isChannelChat(chatId);\r\n        const isPrivate = isPrivateChat(chatId);\r\n\r\n        // if (showTail && isMediaContent() && !hasCaption) {\r\n        //     showTail = false;\r\n        // }\r\n\r\n        let tile = null;\r\n        if (showTail) {\r\n            if (isMeChat(chatId) && forward_info) {\r\n                switch (forward_info.origin['@type']) {\r\n                    case 'messageForwardOriginHiddenUser': {\r\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginUser': {\r\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginChannel': {\r\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (isPrivate) {\r\n                tile = <EmptyTile small />\r\n            } else if (isChannel) {\r\n                tile = <EmptyTile small />\r\n            } else if (is_outgoing) {\r\n                tile = <EmptyTile small />\r\n            } else if (sender.user_id) {\r\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\r\n            } else {\r\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\r\n            }\r\n        }\r\n\r\n        const style = { width: grouped.totalWidth - 2 - 2 };\r\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\r\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\r\n\r\n        const items = grouped.messages.map(x => (\r\n            <AlbumItem\r\n                key={x.id}\r\n                message={x}\r\n                position={grouped.positions.get(x)}\r\n                displaySize={displaySize}\r\n                source={source}\r\n            />));\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('message', 'message-album', {\r\n                        'message-rounded': showTitle && showTail && tailRounded,\r\n                        'message-short': !tile,\r\n                        'message-out': isOutgoing,\r\n                        'message-selected': selected,\r\n                        // 'message-highlighted': highlighted && !selected,\r\n                        'message-group-title': showTitle && !showTail,\r\n                        'message-group': !showTitle && !showTail,\r\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\r\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\r\n                        'message-bubble-hidden': !withBubble\r\n                    })}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onClick={this.handleSelection}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='message-body'>\r\n                        <div className='message-padding'>\r\n                            <CheckMarkIcon className='message-select-tick' />\r\n                        </div>\r\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\r\n                            {tile}\r\n                            <div\r\n                                className={classNames(\r\n                                    'message-content', {\r\n                                    'message-bubble': withBubble,\r\n                                    'message-bubble-out': withBubble && isOutgoing\r\n                                })}\r\n                                style={style}>\r\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\r\n                                    <div className='message-title'>\r\n                                        {showTitle && !showForward && (\r\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\r\n                                        )}\r\n                                        {showForward && <Forward forwardInfo={forward_info} />}\r\n                                    </div>\r\n                                )}\r\n                                {showReply && (\r\n                                    <Reply\r\n                                        chatId={chatId}\r\n                                        messageId={reply_to_message_id}\r\n                                        onClick={this.handleReplyClick}\r\n                                    />\r\n                                )}\r\n                                <div className={classNames(\r\n                                    'album',\r\n                                    { 'album-caption': hasCaption },\r\n                                    { 'album-title': hasTitle }\r\n                                    )}>\r\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\r\n                                        {items}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className={classNames('message-text', {\r\n                                        'message-text-1emoji': emojiMatches === 1,\r\n                                        'message-text-2emoji': emojiMatches === 2,\r\n                                        'message-text-3emoji': emojiMatches === 3\r\n                                    })}>\r\n                                    {text}\r\n                                </div>\r\n                                {withBubble && meta}\r\n                            </div>\r\n                            <div className='message-tile-padding' />\r\n                        </div>\r\n                        <div className='message-padding' />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAlbum.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    displaySize: PropTypes.number,\r\n    showTitle: PropTypes.bool,\r\n    showTail: PropTypes.bool,\r\n    showUnreadSeparator: PropTypes.bool,\r\n    showDate: PropTypes.bool\r\n};\r\n\r\nAlbum.defaultProps = {\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false,\r\n    showData: false\r\n};\r\n\r\nexport default Album;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport AlbumItem from './AlbumItem';\r\nimport DayMeta from '../DayMeta';\r\nimport Forward from '../Forward';\r\nimport UnreadSeparator from '../UnreadSeparator';\r\nimport MessageAuthor from '../MessageAuthor';\r\nimport Reply from '../Reply';\r\nimport Meta from '../Meta';\r\nimport ChatTile from '../../Tile/ChatTile';\r\nimport EmptyTile from '../../Tile/EmptyTile';\r\nimport UserTile from '../../Tile/UserTile';\r\nimport { albumHistoryEquals } from '../../../Utils/Common';\r\nimport { selectMessage } from '../../../Actions/Client';\r\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\r\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\r\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './DocumentAlbum.css';\r\n\r\nclass DocumentAlbum extends React.Component {\r\n    state = { };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { messageIds } = this.props;\r\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\r\n\r\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.emojiMatches !== emojiMatches) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selected !== selected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.lastSelected !== lastSelected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.lastHighlighted !== lastHighlighted) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { displaySize, chatId, messageIds } = props;\r\n\r\n        if (messageIds !== state.prevMessageIds) {\r\n\r\n            return {\r\n                prevMessageIds: messageIds\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false, lastHighlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            this.setState({\r\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\r\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        this.setState({ selected: false, lastSelected: false });\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageIds, displaySize } = this.props;\r\n        const { emojiMatches: oldEmojiMatches } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (!messageIds.some(x => x === message_id)) return;\r\n\r\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\r\n        if (emojiMatches !== oldEmojiMatches) {\r\n            this.setState({ emojiMatches });\r\n        } else {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleSelection = () => {\r\n        // if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = this.state;\r\n\r\n        if (selected) {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], false);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], true);\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { showTail, source } = this.props;\r\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\r\n        const {\r\n            emojiMatches,\r\n            selected,\r\n            lastSelected,\r\n            highlighted,\r\n            lastHighlighted,\r\n            shook,\r\n            copyLink,\r\n            contextMenu,\r\n            left,\r\n            top\r\n        } = this.state;\r\n\r\n        if (!messageIds.length) {\r\n            return null;\r\n        }\r\n\r\n        let messageId = messageIds[messageIds.length - 1];\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return <div>[empty message]</div>;\r\n\r\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\r\n\r\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\r\n\r\n        const inlineMeta = (\r\n            <Meta\r\n                className='meta-hidden'\r\n                key={`${chatId}_${messageId}_meta`}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n            />\r\n        );\r\n        const webPage = getWebPage(message);\r\n        let text = null;\r\n        for (let i = 0; i < messageIds.length; i++) {\r\n            const m = MessageStore.get(chatId, messageIds[i]);\r\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\r\n            if (t && t.length) {\r\n                if (text !== null) {\r\n                    text = null;\r\n                    break;\r\n                } else {\r\n                    text = t;\r\n                    messageId = messageIds[i];\r\n                }\r\n            }\r\n        }\r\n        const hasCaption = text !== null && text.length > 0;\r\n        const meta = (\r\n            <Meta\r\n                className={classNames('meta-text', {\r\n                    'meta-bubble': false\r\n                })}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n                onDateClick={this.handleDateClick}\r\n            />\r\n        );\r\n\r\n        const showForward = showMessageForward(chatId, messageId);\r\n        const showReply = Boolean(reply_to_message_id);\r\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\r\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\r\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\r\n        const isChannel = isChannelChat(chatId);\r\n        const isPrivate = isPrivateChat(chatId);\r\n\r\n        // if (showTail && isMediaContent() && !hasCaption) {\r\n        //     showTail = false;\r\n        // }\r\n\r\n        let tile = null;\r\n        if (showTail) {\r\n            if (isMeChat(chatId) && forward_info) {\r\n                switch (forward_info.origin['@type']) {\r\n                    case 'messageForwardOriginHiddenUser': {\r\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginUser': {\r\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginChannel': {\r\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (isPrivate) {\r\n                tile = <EmptyTile small />\r\n            } else if (isChannel) {\r\n                tile = <EmptyTile small />\r\n            } else if (is_outgoing) {\r\n                tile = <EmptyTile small />\r\n            } else if (sender.user_id) {\r\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\r\n            } else {\r\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\r\n            }\r\n        }\r\n\r\n        const style = {  };\r\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\r\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\r\n\r\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\r\n            <AlbumItem\r\n                key={m.id}\r\n                message={m}\r\n                position={null}\r\n                displaySize={displaySize}\r\n                source={source}\r\n            />));\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('message', 'message-album', 'message-document-album', {\r\n                        'message-rounded': showTitle && showTail && tailRounded,\r\n                        'message-short': !tile,\r\n                        'message-out': isOutgoing,\r\n                        'message-selected': selected,\r\n                        'message-album-last-selected': lastSelected,\r\n                        // 'message-highlighted': highlighted && !selected,\r\n                        'message-album-last-highlighted': lastHighlighted && !selected,\r\n                        'message-group-title': showTitle && !showTail,\r\n                        'message-group': !showTitle && !showTail,\r\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\r\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\r\n                        'message-bubble-hidden': !withBubble\r\n                    })}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onClick={this.handleSelection}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='message-body'>\r\n                        <div className='message-padding'>\r\n                            <CheckMarkIcon className='message-select-tick' />\r\n                        </div>\r\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\r\n                            {tile}\r\n                            <div\r\n                                className={classNames(\r\n                                    'message-content', {\r\n                                        'message-bubble': withBubble,\r\n                                        'message-bubble-out': withBubble && isOutgoing\r\n                                    })}\r\n                                style={style}>\r\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\r\n                                    <div className='message-title'>\r\n                                        {showTitle && !showForward && (\r\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\r\n                                        )}\r\n                                        {showForward && <Forward forwardInfo={forward_info} />}\r\n                                    </div>\r\n                                )}\r\n                                {showReply && (\r\n                                    <Reply\r\n                                        chatId={chatId}\r\n                                        messageId={reply_to_message_id}\r\n                                        onClick={this.handleReplyClick}\r\n                                    />\r\n                                )}\r\n                                <div className={classNames(\r\n                                    'album',\r\n                                    'document-album',\r\n                                    { 'album-caption': false },\r\n                                    { 'album-title': hasTitle }\r\n                                )}>\r\n                                    <div className='album-wrapper'>\r\n                                        {items}\r\n                                    </div>\r\n                                </div>\r\n                                {/*<div*/}\r\n                                {/*    className={classNames('message-text', {*/}\r\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\r\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\r\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\r\n                                {/*    })}>*/}\r\n                                {/*    {text}*/}\r\n                                {/*</div>*/}\r\n                                {withBubble && meta}\r\n                            </div>\r\n                            <div className='message-tile-padding' />\r\n                        </div>\r\n                        <div className='message-padding' />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDocumentAlbum.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    displaySize: PropTypes.number,\r\n    showTitle: PropTypes.bool,\r\n    showTail: PropTypes.bool,\r\n    showUnreadSeparator: PropTypes.bool,\r\n    showDate: PropTypes.bool\r\n};\r\n\r\nDocumentAlbum.defaultProps = {\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false,\r\n    showData: false\r\n};\r\n\r\nexport default DocumentAlbum;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './FilesDropTarget.css';\r\n\r\nclass FilesDropTarget extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { dragParams } = AppStore;\r\n\r\n        this.state = { dragParams };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\r\n    }\r\n\r\n    onClientUpdateDragging = update => {\r\n        const { dragParams } = AppStore;\r\n\r\n        this.setState({ dragParams });\r\n    };\r\n\r\n    handleDragEnter = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleDrop = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: false\r\n        });\r\n\r\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\r\n    };\r\n\r\n    handleDragLeave = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: false\r\n        });\r\n    };\r\n\r\n    handleAttachDocumentComplete = files => {\r\n        if (files.length === 0) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSendFiles',\r\n            files\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { dragParams } = this.state;\r\n        if (!dragParams) return null;\r\n\r\n        return (\r\n            <div\r\n                className='files-drop-target'\r\n                onDragEnter={this.handleDragEnter}\r\n                onDragLeave={this.handleDragLeave}\r\n                onDrop={this.handleDrop}>\r\n                <div className='files-drop-target-wrapper'>\r\n                    <div className='files-drop-target-text'>\r\n                        <div className='files-drop-target-title'>Drop files here</div>\r\n                        <div className='files-drop-target-subtitle'>to send them</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilesDropTarget;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './GroupCallJoinPanelSubtitle.css';\r\n\r\nclass GroupCallJoinPanelSubtitle extends React.Component {\r\n    state = {\r\n        participantCount: 0\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { participantCount } = this.state;\r\n\r\n        if (nextState.participantCount !== participantCount) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { groupCallId } = props;\r\n        const { prevGroupCallId } = state;\r\n\r\n        if (prevGroupCallId !== groupCallId) {\r\n            let participantCount = 0;\r\n            const groupCall = CallStore.get(groupCallId);\r\n            if (groupCall) {\r\n                const { participant_count } = groupCall;\r\n                participantCount = participant_count;\r\n            }\r\n\r\n            return {\r\n                prevGroupCallId: groupCallId,\r\n                participantCount\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { groupCallId } = this.props;\r\n        const { group_call } = update;\r\n\r\n        if (group_call && group_call.id !== groupCallId) return;\r\n\r\n        let participantCount = 0;\r\n        const groupCall = CallStore.get(groupCallId);\r\n        if (groupCall) {\r\n            const { participant_count } = groupCall;\r\n            participantCount = participant_count;\r\n        }\r\n\r\n        this.setState({ participantCount });\r\n    };\r\n\r\n    render() {\r\n        const { t, participantsOnly } = this.props;\r\n        const { participantCount } = this.state;\r\n        // console.log('[call][GroupCallPanelSubtitle] render');\r\n\r\n        return (\r\n            <div className='group-call-join-panel-subtitle'>\r\n                {participantCount === 0 && !participantsOnly? t('MembersTalkingNobody') : LStore.formatPluralString('Participants', participantCount)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nGroupCallJoinPanelSubtitle.propTypes = {\r\n    groupCallId: PropTypes.number,\r\n    participantsOnly: PropTypes.bool\r\n};\r\n\r\nGroupCallJoinPanelSubtitle.defaultProps = {\r\n    participantsOnly: false\r\n}\r\n\r\nexport default withTranslation()(GroupCallJoinPanelSubtitle);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport UserTile from '../Tile/UserTile';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './GroupCallRecentParticipants.css';\r\n\r\nfunction speakersEquals(lhs, rhs) {\r\n    if (lhs.length !== rhs.length) return false;\r\n\r\n    for (let i = 0; i < lhs.length; i++) {\r\n        if (lhs[i].user_id !== rhs[i].user_id) return false;\r\n        if (lhs[i].is_speaking !== rhs[i].is_speaking) return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nclass GroupCallRecentParticipants extends React.Component {\r\n    state = {\r\n        speakers: []\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { speakers } = this.state;\r\n\r\n        if (!speakersEquals(nextState.speakers, speakers)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { id } = props;\r\n        const { prevId } = state;\r\n\r\n        if (prevId !== id) {\r\n            let speakers = [];\r\n            const groupCall = CallStore.get(id);\r\n            if (groupCall) {\r\n                const { recent_speakers } = groupCall;\r\n                speakers = recent_speakers;\r\n            }\r\n\r\n            return {\r\n                prevId: id,\r\n                speakers\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    loadContent(speakers) {\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, speakers.map(x => x.user_id));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent(this.state.speakers);\r\n\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { id } = this.props;\r\n        const { group_call } = update;\r\n\r\n        if (group_call && group_call.id !== id) return;\r\n\r\n        let speakers = [];\r\n        const groupCall = CallStore.get(id);\r\n        if (groupCall) {\r\n            const { recent_speakers } = groupCall;\r\n            speakers = recent_speakers;\r\n        }\r\n\r\n        clearTimeout(this.timeout);\r\n        if (!speakers.length) {\r\n            this.setState({ speakers: [] });\r\n        } else {\r\n            this.loadContent(speakers);\r\n\r\n            this.timeout = setTimeout(() => {\r\n                this.updateSpeakers();\r\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\r\n        }\r\n    };\r\n\r\n    updateSpeakers() {\r\n        const { id } = this.props;\r\n\r\n        let speakers = [];\r\n        const groupCall = CallStore.get(id);\r\n        if (groupCall) {\r\n            const { recent_speakers } = groupCall;\r\n            speakers = recent_speakers;\r\n        }\r\n\r\n        this.setState({ speakers });\r\n    }\r\n\r\n    render() {\r\n        const { speakers } = this.state;\r\n        if (!speakers) return null;\r\n        if (!speakers.length) return null;\r\n\r\n        return (\r\n            <div className='group-call-recent-participants'>\r\n                {[...speakers].reverse().map(x => <UserTile key={x.user_id} userId={x.user_id} small speaking={x.is_speaking}/>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallRecentParticipants.propTypes = {\r\n    id: PropTypes.number\r\n};\r\n\r\nexport default GroupCallRecentParticipants;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport GroupCallJoinPanelSubtitle from './GroupCallJoinPanelSubtitle';\r\nimport GroupCallRecentParticipants from './GroupCallRecentParticipants';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './GroupCallJoinPanel.css';\r\n\r\nclass GroupCallJoinPanel extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n        const { prevChatId } = state;\r\n\r\n        if (prevChatId !== chatId) {\r\n            const chat = ChatStore.get(chatId);\r\n\r\n            let groupCallId = 0;\r\n            if (chat) {\r\n                const { voice_chat_group_call_id } = chat;\r\n                groupCallId = voice_chat_group_call_id;\r\n            }\r\n\r\n            const { currentGroupCall } = CallStore;\r\n            const isCurrent = Boolean(currentGroupCall && currentGroupCall.chatId === chatId);\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                groupCallId,\r\n                isCurrent\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId } = this.props;\r\n        const { isCurrent, groupCallId } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.groupCallId !== groupCallId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isCurrent !== isCurrent) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        CallStore.on('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\r\n        CallStore.on('updateGroupCall', this.handleUpdateGroupCall);\r\n        ChatStore.on('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\r\n        CallStore.off('updateGroupCall', this.handleUpdateGroupCall);\r\n        ChatStore.off('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\r\n    }\r\n\r\n    handleUpdateChatVoiceChat = update => {\r\n        const { chat_id } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if ( chatId !== chat_id) return;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { voice_chat_group_call_id } = chat;\r\n\r\n        this.setState({\r\n            groupCallId: voice_chat_group_call_id\r\n        });\r\n    }\r\n\r\n    handleUpdateGroupCall = update => {\r\n        const { group_call } = update;\r\n\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { voice_chat_group_call_id } = chat;\r\n        if (group_call && group_call.id !== voice_chat_group_call_id) return;\r\n\r\n        this.setState({\r\n            groupCallId: group_call ? group_call.id : 0\r\n        });\r\n    };\r\n\r\n    handleClientUpdateGroupCall = update => {\r\n        const { chatId } = this.props;\r\n\r\n        const { currentGroupCall } = CallStore;\r\n        const isCurrent = currentGroupCall && currentGroupCall.chatId === chatId;\r\n\r\n        this.setState({ isCurrent });\r\n    };\r\n\r\n    handleJoin = async () => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { voice_chat_group_call_id } = chat;\r\n        const groupCall = CallStore.get(voice_chat_group_call_id);\r\n        console.log('[call] handleJoin', groupCall);\r\n        if (groupCall && groupCall.is_joined) return;\r\n\r\n        const muted = true;\r\n        await CallStore.joinGroupCall(chatId, voice_chat_group_call_id, muted);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        if (!chatId) return null;\r\n\r\n        const { groupCallId, isCurrent } = this.state;\r\n        if (!groupCallId) return null;\r\n        if (isCurrent) return null;\r\n\r\n        return (\r\n            <div className='group-call-join-panel' onClick={this.handleJoin}>\r\n                <div className='group-call-join-panel-content'>\r\n                    <div className='group-call-join-panel-title'>{t('VoipGroupVoiceChat')}</div>\r\n                    <GroupCallJoinPanelSubtitle groupCallId={groupCallId}/>\r\n                </div>\r\n                <GroupCallRecentParticipants id={groupCallId}/>\r\n                <Button className='group-call-join-panel-button' variant='contained' color='primary' disableElevation>\r\n                    {t('VoipChatJoin')}\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallJoinPanel.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(GroupCallJoinPanel);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { getDisplayName } from '../../Utils/HOC';\r\n\r\nconst MessageContext = React.createContext({\r\n    chatId: 0,\r\n    messageId: 0\r\n});\r\n\r\nexport default MessageContext;\r\n\r\nexport function withMessage(Component) {\r\n    class MessageComponent extends React.Component {\r\n        render() {\r\n            return <MessageContext.Consumer>{value => <Component chatId={value ? value.chatId : 0} messageId={value? value.messageId: 0} {...this.props} />}</MessageContext.Consumer>;\r\n        }\r\n    }\r\n    MessageComponent.displayName = `WithMessage(${getDisplayName(Component)})`;\r\n\r\n    return MessageComponent;\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ListItem } from '@material-ui/core';\r\nimport User from '../Tile/User';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './InputBoxHints.css'\r\n\r\nclass InputBoxHints extends React.Component {\r\n    state = {\r\n        local: [],\r\n        global: [],\r\n        id: null\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { local, global, id } = this.state;\r\n\r\n        if (nextState.local !== local) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.global !== global) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.id !== id) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\r\n        ChatStore.on('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\r\n        ChatStore.on('clientUpdateHintsClose', this.onClientUpdateHintsClose);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\r\n        ChatStore.off('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\r\n        ChatStore.off('clientUpdateHintsClose', this.onClientUpdateHintsClose);\r\n    }\r\n\r\n    onClientUpdateHintsClose = update => {\r\n        this.setState({\r\n            id: null,\r\n            local: [],\r\n            global: []\r\n        });\r\n    };\r\n\r\n    onClientUpdateHintsGlobal = update => {\r\n        const { id, global } = update;\r\n        if (this.state.id !== id) return;\r\n\r\n        this.setState({\r\n            id,\r\n            global\r\n        });\r\n    };\r\n\r\n    onClientUpdateHintsLocal = update => {\r\n        const { id, local } = update;\r\n\r\n        this.setState({\r\n            id,\r\n            local,\r\n            global: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { local, global } = this.state;\r\n\r\n        const results = (local || []).concat(global || []);\r\n\r\n        // console.log('[hints] render', local, global, results);\r\n        if (!results.length) return null;\r\n\r\n        const controls = results.map(x => <ListItem key={x.id} button style={{ padding: 6}}><User userId={x.id} showUsername={true}/></ListItem>);\r\n\r\n        return (\r\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\r\n                {controls}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nInputBoxHints.propTypes = {};\r\n\r\nexport default InputBoxHints;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M8.5,18.31L5.69,15.5L12.06,9.12H7.11V5.69H18.31V16.89H14.89V11.94L8.5,18.31Z' />,\r\n    'ArrowTopRight'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M21,12L14,5V9C7,10 4,15 3,20C5.5,16.5 9,14.9 14,14.9V19L21,12Z' />,\r\n    'ShareFilled'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withMessage } from '../MessageContext';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowTopRightIcon from '../../../Assets/Icons/ArrowTopRight';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport PendingIcon from '../../../Assets/Icons/Pending';\r\nimport ShareFilledIcon from '../../../Assets/Icons/ShareFilled';\r\nimport { getUserFullName } from '../../../Utils/User';\r\nimport { getChatTitle } from '../../../Utils/Chat';\r\nimport { setText, showAlert, showInputPasswordAlert, showOpenGameAlert, showOpenUrlAlert, showRequestUrlAlert, showSnackbar } from '../../../Actions/Client';\r\nimport { openChatSelect } from '../../../Actions/Message';\r\nimport LStore from '../../../Stores/LocalizationStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './KeyboardButton.css';\r\n\r\nclass KeyboardButton extends React.Component {\r\n    state = {\r\n        loading: false\r\n    }\r\n\r\n    handleCallbackQueryAnswer = (type, result, message) => {\r\n        const { chatId } = this.props;\r\n        const { sender, content, via_bot_user_id } = message;\r\n        const { text, show_alert, url } = result;\r\n        const { game } = content;\r\n\r\n        let title = '';\r\n        if (message) {\r\n            if (via_bot_user_id) {\r\n                title = getUserFullName(via_bot_user_id, null);\r\n            } else {\r\n                title = getChatTitle(chatId, false);\r\n            }\r\n        }\r\n        title = title || LStore.getString('Bot');\r\n\r\n        if (text) {\r\n            if (show_alert) {\r\n                showAlert({\r\n                    title,\r\n                    message: text,\r\n                    ok: LStore.getString('OK')\r\n                });\r\n            } else {\r\n                showSnackbar(text, closeSnackbar => snackKey => {\r\n                    return (\r\n                        <IconButton\r\n                            key='close'\r\n                            aria-label='Close'\r\n                            color='inherit'\r\n                            className='notification-close-button'\r\n                            onClick={() => { closeSnackbar(snackKey); }}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    )\r\n                });\r\n            }\r\n        } else if (url) {\r\n            if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\r\n                const userId = via_bot_user_id ? via_bot_user_id : sender.user_id;\r\n                const user = UserStore.get(userId);\r\n\r\n                showOpenGameAlert(game, { message, url, userId, isVerified: user && user.is_verified });\r\n            } else {\r\n                showOpenUrlAlert(url, { punycode: false, ask: false, tryTelegraph: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClick = async event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId, type } = this.props;\r\n\r\n        switch (type['@type']) {\r\n            case 'inlineKeyboardButtonTypeBuy': {\r\n                showAlert({\r\n                    title: LStore.getString('AppName'),\r\n                    message: LStore.getString('PaymentsNotSupported'),\r\n                    ok: LStore.getString('OK')\r\n                });\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallback':\r\n            case 'inlineKeyboardButtonTypeCallbackGame': {\r\n                /// gamee, querty_bot\r\n\r\n                const { data } = type;\r\n\r\n                const message = MessageStore.get(chatId, messageId);\r\n                if (!message) break;\r\n\r\n                const { sender, content, via_bot_user_id } = message;\r\n                if (!content) break;\r\n\r\n                let payload = null;\r\n                let game = null;\r\n                if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\r\n                    game = content.game;\r\n                    if (!game) break;\r\n\r\n                    payload = { '@type': 'callbackQueryPayloadGame', game_short_name: game.short_name };\r\n                } else {\r\n                    payload = { '@type': 'callbackQueryPayloadData', data };\r\n                }\r\n\r\n                this.setState({ loading: true });\r\n                const result = await TdLibController.send({\r\n                    '@type': 'getCallbackQueryAnswer',\r\n                    chat_id: chatId,\r\n                    message_id: messageId,\r\n                    payload\r\n                }).finally(() => {\r\n                    this.setState({ loading: false });\r\n                });\r\n\r\n                this.handleCallbackQueryAnswer(type, result, message);\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\r\n                /// BotFather + transfer bot\r\n                const { data } = type;\r\n\r\n                const message = MessageStore.get(chatId, messageId);\r\n                if (!message) break;\r\n\r\n                this.setState({ loading: true });\r\n                const passwordState = await TdLibController.send({\r\n                    '@type': 'getPasswordState'\r\n                }).finally(() => {\r\n                    this.setState({ loading: false });\r\n                });\r\n\r\n                const { has_password } = passwordState;\r\n                if (!has_password) break;\r\n\r\n                showInputPasswordAlert(passwordState, async (password, onCloseDialog, onError) => {\r\n                    console.log('[pwd] onPassword', password);\r\n                    this.setState({ loading: true });\r\n                    let error = null;\r\n                    const result = await TdLibController.send({\r\n                        '@type': 'getCallbackQueryAnswer',\r\n                        chat_id: chatId,\r\n                        message_id: messageId,\r\n                        payload: { '@type': 'callbackQueryPayloadDataWithPassword', data, password }\r\n                    }).catch(e => {\r\n                        error = e;\r\n                    }).finally(() => {\r\n                        this.setState({ loading: false });\r\n                    });\r\n\r\n                    if (error) {\r\n                        console.log('[pwd] onPassword error', error);\r\n                        onError && onError(error);\r\n                    } else if (result) {\r\n                        console.log('[pwd] onPassword result', result);\r\n                        onCloseDialog && onCloseDialog();\r\n                        this.handleCallbackQueryAnswer(type, result, message);\r\n                    }\r\n                });\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeLoginUrl': {\r\n                const { url, id, forward_text } = type;\r\n\r\n                this.setState({ loading: true });\r\n                let hasError = false;\r\n                const result = await TdLibController.send({\r\n                    '@type': 'getLoginUrlInfo',\r\n                    chat_id: chatId,\r\n                    message_id: messageId,\r\n                    button_id: id\r\n                }).catch(e => {\r\n                    hasError = true;\r\n                }).finally(() => {\r\n                    this.setState({ loading: false });\r\n                });\r\n\r\n                if (hasError) {\r\n                    showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\r\n                } else {\r\n                    switch (result['@type']) {\r\n                        case 'loginUrlInfoOpen': {\r\n                            const { url, skip_confirm } = result;\r\n\r\n                            showOpenUrlAlert(url, { punycode: false, ask: !skip_confirm, tryTelegraph: true });\r\n                            break;\r\n                        }\r\n                        case 'loginUrlInfoRequestConfirmation': {\r\n                            const { url } = result;\r\n\r\n\r\n                            console.log('[login] result', result);\r\n                            showRequestUrlAlert(url, { result, chatId, messageId, buttonId: id });\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeSwitchInline': {\r\n                /// youtube\r\n                const { in_current_chat, query } = type;\r\n\r\n                const message = MessageStore.get(chatId, messageId);\r\n                if (!message) break;\r\n\r\n                const { sender, via_bot_user_id } = message;\r\n                let userId = sender.user_id;\r\n                if (via_bot_user_id !== 0) {\r\n                    userId = via_bot_user_id;\r\n                }\r\n\r\n                const user = UserStore.get(userId);\r\n                if (!user) break;\r\n\r\n                const inline = `@${user.username} ${query}`;\r\n\r\n                if (in_current_chat){\r\n                    setText(inline);\r\n                } else {\r\n                    openChatSelect({ switchInline: inline });\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeUrl': {\r\n                /// qwerty_bot\r\n                const { url } = type;\r\n\r\n                showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    getIcon(type) {\r\n        switch (type['@type']) {\r\n            case 'inlineKeyboardButtonTypeBuy': {\r\n                return null;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallback':\r\n            case 'inlineKeyboardButtonTypeCallbackGame': {\r\n                return null;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\r\n                return null;\r\n            }\r\n            case 'inlineKeyboardButtonTypeLoginUrl': {\r\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\r\n            }\r\n            case 'inlineKeyboardButtonTypeSwitchInline': {\r\n                const { in_current_chat } = type;\r\n\r\n                return !in_current_chat && <ShareFilledIcon className='keyboard-button-icon'/>;\r\n            }\r\n            case 'inlineKeyboardButtonTypeUrl': {\r\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { text, type } = this.props;\r\n        const { loading } = this.state;\r\n\r\n        const icon = this.getIcon(type);\r\n\r\n        return (\r\n            <ListItem className='keyboard-button' button onClick={this.handleClick}>\r\n                {text}\r\n                {icon}\r\n                {loading && (\r\n                    <PendingIcon\r\n                        className='keyboard-button-progress'\r\n                        viewBox='0 0 14 14'\r\n                    />\r\n                )}\r\n            </ListItem>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nKeyboardButton.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    text: PropTypes.string,\r\n    type: PropTypes.object,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withMessage(KeyboardButton);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport KeyboardButton from './KeyboardButton';\r\nimport './KeyboardRow.css';\r\n\r\nclass KeyboardRow extends React.Component {\r\n    render() {\r\n        const { row } = this.props;\r\n        if (!row) return null;\r\n        if (!row.length) return null;\r\n\r\n        return (\r\n            <div className='keyboard-row'>\r\n                {row.map((x, i) => (<KeyboardButton key={i} text={x.text} type={x.type}/>))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nKeyboardRow.propTypes = {\r\n    row: PropTypes.array\r\n};\r\n\r\nexport default KeyboardRow;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport KeyboardRow from './KeyboardRow';\r\nimport MessageContext from '../MessageContext';\r\nimport './ReplyMarkup.css';\r\n\r\nclass ReplyMarkup extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevChatId, prevMessageId } = state;\r\n        const { chatId, messageId } = props;\r\n\r\n\r\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n                message: {\r\n                    chatId,\r\n                    messageId\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { markup } = this.props;\r\n        const { message } = this.state;\r\n\r\n        if (!markup) return null;\r\n        if (markup['@type'] !== 'replyMarkupInlineKeyboard') return null;\r\n\r\n        const { rows } = markup;\r\n        if (!rows.length) return null;\r\n\r\n        return (\r\n            <div className='reply-markup'>\r\n                <MessageContext.Provider value={message}>\r\n                    {rows.map((x, i) => (<KeyboardRow key={i} row={x}/>))}\r\n                </MessageContext.Provider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReplyMarkup.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    markup: PropTypes.object\r\n};\r\n\r\nexport default ReplyMarkup;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport Animation from './Animation';\r\nimport Audio from './Audio';\r\nimport Document from './Document';\r\nimport Photo from './Photo';\r\nimport Sticker, { StickerSourceEnum } from './Sticker';\r\nimport Video from './Video';\r\nimport VideoNote from './VideoNote';\r\nimport VoiceNote from './VoiceNote';\r\nimport { getSize } from '../../../Utils/Common';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { openInstantView } from '../../../Actions/InstantView';\r\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\r\nimport {\r\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\r\n    PHOTO_DISPLAY_SIZE,\r\n    PHOTO_DISPLAY_SMALL_SIZE,\r\n    PHOTO_SIZE\r\n} from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './WebPage.css';\r\n\r\nclass WebPage extends React.Component {\r\n    getMedia = () => {\r\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const {\r\n            site_name,\r\n            title,\r\n            description,\r\n            url,\r\n            photo,\r\n            animation,\r\n            video,\r\n            audio,\r\n            document,\r\n            voice_note,\r\n            video_note,\r\n            sticker,\r\n            type\r\n        } = web_page;\r\n\r\n        if (sticker) {\r\n            return [\r\n                null,\r\n                <Sticker\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    sticker={sticker}\r\n                    openMedia={openMedia}\r\n                    source={StickerSourceEnum.MESSAGE}\r\n                />\r\n            ];\r\n        }\r\n\r\n        if (voice_note) {\r\n            return [\r\n                null,\r\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\r\n            ];\r\n        }\r\n\r\n        if (video_note) {\r\n            return [\r\n                null,\r\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\r\n            ];\r\n        }\r\n\r\n        if (audio) {\r\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\r\n        }\r\n\r\n        if (document) {\r\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\r\n        }\r\n\r\n        if (animation) {\r\n            const animationSrc = getSrc(animation.animation);\r\n            if (animationSrc || animation.thumbnail) {\r\n                return [\r\n                    null,\r\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\r\n                ];\r\n            }\r\n        }\r\n\r\n        if (video) {\r\n            if (video.thumbnail) {\r\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\r\n            }\r\n        }\r\n\r\n        if (photo) {\r\n            const photoSize = getSize(photo.sizes, size);\r\n            const smallPhoto =\r\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\r\n                (site_name || title || description && description.text.length > 0) &&\r\n                photoSize &&\r\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_SIZE );\r\n            let totalLength = 0;\r\n            if (site_name) {\r\n                totalLength += site_name.length;\r\n            }\r\n            if (title) {\r\n                totalLength += title.length;\r\n            }\r\n            if (description) {\r\n                totalLength += description.text.length;\r\n            }\r\n\r\n            const extraSmallPhoto = smallPhoto && totalLength < 50;\r\n\r\n            const style =\r\n                smallPhoto || extraSmallPhoto\r\n                    ? {\r\n                          float: 'right',\r\n                          marginLeft: 6\r\n                      }\r\n                    : {};\r\n\r\n            return [\r\n                smallPhoto ? (\r\n                    <Photo\r\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\r\n                        style={style}\r\n                        chatId={chatId}\r\n                        messageId={messageId}\r\n                        photo={photo}\r\n                        openMedia={openMedia}\r\n                    />\r\n                ) : null,\r\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\r\n            ];\r\n        }\r\n\r\n        return [null, null];\r\n    };\r\n\r\n    handleInstantViewClick = async event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const { url } = web_page;\r\n\r\n        openInstantView(url);\r\n    };\r\n\r\n    getWebPage() {\r\n        const { chatId, messageId, t } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const { instant_view_version, site_name } = web_page;\r\n        let { description, title } = web_page;\r\n\r\n        if (description['@type'] === 'formattedText') {\r\n            description = getFormattedText(description);\r\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\r\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\r\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\r\n\r\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\r\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\r\n        }\r\n\r\n        const webPageContent = (\r\n            <>\r\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\r\n                {title && <div className='web-page-title'>{title}</div>}\r\n                {description && <div className='web-page-description'>{description}</div>}\r\n            </>\r\n        );\r\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\r\n        const webPageInstantView = instant_view_version > 0 && (\r\n            <Button\r\n                variant='outlined'\r\n                color='primary'\r\n                classes={{\r\n                    outlinedPrimary: 'message-control',\r\n                    disabled: 'message-control-disabled'\r\n                }}\r\n                fullWidth\r\n                onClick={this.handleInstantViewClick}\r\n                className='web-page-button'>\r\n                <SvgIcon>\r\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\r\n                </SvgIcon>\r\n                {t('InstantView')}\r\n            </Button>\r\n        );\r\n\r\n        return (\r\n            <>\r\n                {webPageMediaTop}\r\n                {webPageContent}\r\n                {webPageMediaBottom}\r\n                {webPageInstantView}\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { meta } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='web-page'>\r\n                    <div className='border' />\r\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\r\n                </div>\r\n                {meta}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nWebPage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n\r\n    size: PropTypes.number,\r\n    displaySize: PropTypes.number,\r\n    displaySmallSize: PropTypes.number,\r\n    displayExtraSmallSize: PropTypes.number,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nWebPage.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\r\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\r\n};\r\n\r\nexport default withTranslation()(WebPage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport DayMeta from './DayMeta';\r\nimport Reply from './Reply';\r\nimport ReplyMarkup from './Markup/ReplyMarkup';\r\nimport Forward from './Forward';\r\nimport Meta from './Meta';\r\nimport MessageAuthor from './MessageAuthor';\r\nimport MessageMenu from './MessageMenu';\r\nimport UserTile from '../Tile/UserTile';\r\nimport ChatTile from '../Tile/ChatTile';\r\nimport EmptyTile from '../Tile/EmptyTile';\r\nimport UnreadSeparator from './UnreadSeparator';\r\nimport WebPage from './Media/WebPage';\r\nimport { startMessageEditing, stopMessageEditing } from '../../Actions/Message';\r\nimport {\r\n    getEmojiMatches,\r\n    getText,\r\n    getWebPage,\r\n    openMedia,\r\n    showMessageForward,\r\n    isMetaBubble,\r\n    canMessageBeForwarded,\r\n    getMessageStyle,\r\n    isEmptySelection\r\n} from '../../Utils/Message';\r\nimport { getMedia } from '../../Utils/Media';\r\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\r\nimport {\r\n    openUser,\r\n    openChat,\r\n    selectMessage,\r\n    openReply,\r\n    replyMessage,\r\n    forwardMessages\r\n} from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Message.css';\r\n\r\nclass Message extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, messageId } = this.props;\r\n        this.state = {\r\n            message: MessageStore.get(chatId, messageId),\r\n            emojiMatches: getEmojiMatches(chatId, messageId),\r\n            selected: false,\r\n            highlighted: false,\r\n            shook: false,\r\n\r\n            contextMenu: false,\r\n            copyLink: null,\r\n            left: 0,\r\n            top: 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\r\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('Message.shouldComponentUpdate true chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            // console.log('Message.shouldComponentUpdate true messageId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.sendingState !== sendingState) {\r\n            // console.log('Message.shouldComponentUpdate true sendingState');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\r\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showTail !== showTail) {\r\n            // console.log('Message.shouldComponentUpdate true showTail');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showTitle !== showTitle) {\r\n            // console.log('Message.shouldComponentUpdate true showTitle');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            // console.log('Message.shouldComponentUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selected !== selected) {\r\n            // console.log('Message.shouldComponentUpdate true selected');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            // console.log('Message.shouldComponentUpdate true highlighted');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.shook !== shook) {\r\n            // console.log('Message.shouldComponentUpdate true shook');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.emojiMatches !== emojiMatches) {\r\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\r\n            return true;\r\n        }\r\n\r\n        // console.log('Message.shouldComponentUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\r\n    }\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        if (!this.state.selected) return;\r\n\r\n        this.setState({ selected: false });\r\n    };\r\n\r\n    onClientUpdateMessageShake = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { shook } = this.state;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (shook) {\r\n                this.setState({ shook: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ shook: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ shook: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ selected, highlighted: false });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id) return;\r\n\r\n        this.updateMessageContent = update;\r\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\r\n    };\r\n\r\n    onUpdateMessageEdited = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id) return;\r\n\r\n        this.updateMessageEdited = update;\r\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\r\n    };\r\n\r\n    handleUpdateMessageContentAndEditedOnce = () => {\r\n        const { updateMessageContent, updateMessageEdited } = this;\r\n        this.updateMessageContent = null;\r\n        this.updateMessageEdited = null;\r\n\r\n        if (!updateMessageContent && !updateMessageEdited) return;\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        let handled = false;\r\n        if (updateMessageContent) {\r\n            const { emojiMatches } = this.state;\r\n            const newEmojiMatches = getEmojiMatches(chatId, messageId);\r\n            if (newEmojiMatches !== emojiMatches) {\r\n                handled = true;\r\n                this.setState({ emojiMatches: newEmojiMatches });\r\n            }\r\n        }\r\n\r\n        if (handled) return;\r\n\r\n        startMessageEditing(chatId, messageId);\r\n        this.forceUpdate(() => {\r\n            stopMessageEditing(chatId, messageId);\r\n        });\r\n    };\r\n\r\n    handleSelectUser = userId => {\r\n        openUser(userId, true);\r\n    };\r\n\r\n    handleSelectChat = chatId => {\r\n        openChat(chatId, null, true);\r\n    };\r\n\r\n    handleSelection = () => {\r\n        if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\r\n        selectMessage(chatId, messageId, selected);\r\n    };\r\n\r\n    handleDateClick = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const canBeReplied = canSendMessages(chatId);\r\n        if (canBeReplied) {\r\n            replyMessage(chatId, messageId);\r\n\r\n            return;\r\n        }\r\n\r\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\r\n        if (canBeForwarded) {\r\n            forwardMessages(chatId, [messageId]);\r\n        }\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        openMedia(chatId, messageId);\r\n    };\r\n\r\n    handleAnimationEnd = () => {\r\n        this.setState({ highlighted: false });\r\n    };\r\n\r\n    handleMouseDown = () => {\r\n        this.mouseDown = true;\r\n    };\r\n\r\n    handleMouseOver = () => {\r\n        this.mouseDown = false;\r\n    };\r\n\r\n    handleMouseOut = () => {\r\n        this.mouseOut = false;\r\n    };\r\n\r\n    handleReplyClick = () => {\r\n        const { chatId, messageId } = this.props;\r\n        openReply(chatId, messageId);\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            if (MessageStore.selectedItems.size > 1) {\r\n                return;\r\n            }\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const copyLink =\r\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                copyLink,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        let { showTail } = this.props;\r\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\r\n        const {\r\n            emojiMatches,\r\n            selected,\r\n            highlighted,\r\n            shook,\r\n            copyLink,\r\n            contextMenu,\r\n            left,\r\n            top\r\n        } = this.state;\r\n\r\n        // console.log('Message.render', messageId);\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return <div>[empty message]</div>;\r\n\r\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender, reply_markup } = message;\r\n\r\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\r\n        const inlineMeta = (\r\n            <Meta\r\n                className='meta-hidden'\r\n                key={`${chatId}_${messageId}_meta`}\r\n                chatId={chatId}\r\n                messageId={messageId}\r\n            />\r\n        );\r\n        const meta = (\r\n            <Meta\r\n                className={classNames('meta-text', {\r\n                    'meta-bubble': isMetaBubble(chatId, messageId)\r\n                })}\r\n                chatId={chatId}\r\n                messageId={messageId}\r\n                onDateClick={this.handleDateClick}\r\n            />\r\n        );\r\n\r\n        const webPage = getWebPage(message);\r\n        const text = getText(message, !!webPage ? null : inlineMeta, t, { chatId, messageId });\r\n        const hasCaption = text !== null && text.length > 0;\r\n        const showForward = showMessageForward(chatId, messageId);\r\n        const showReply = Boolean(reply_to_message_id);\r\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\r\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\r\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\r\n        const isChannel = isChannelChat(chatId);\r\n        const isPrivate = isPrivateChat(chatId);\r\n\r\n        // if (showTail && isMediaContent() && !hasCaption) {\r\n        //     showTail = false;\r\n        // }\r\n\r\n        let tile = null;\r\n        if (showTail) {\r\n            if (isMeChat(chatId) && forward_info) {\r\n                switch (forward_info.origin['@type']) {\r\n                    case 'messageForwardOriginHiddenUser': {\r\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginUser': {\r\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginChannel': {\r\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (isPrivate) {\r\n                tile = <EmptyTile small />\r\n            } else if (isChannel) {\r\n                tile = <EmptyTile small />\r\n            } else if (is_outgoing) {\r\n                tile = <EmptyTile small />\r\n            } else if (sender.user_id) {\r\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\r\n            } else {\r\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\r\n            }\r\n        }\r\n\r\n        const style = getMessageStyle(chatId, messageId);\r\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\r\n        const tailRounded =\r\n            !hasCaption  && (\r\n                content['@type'] === 'messageAnimation' ||\r\n                content['@type'] === 'messageVideo' ||\r\n                content['@type'] === 'messagePhoto' ||\r\n                content['@type'] === 'messageInvoice' && content.photo) || reply_markup && reply_markup['@type'] === 'replyMarkupInlineKeyboard';\r\n        const showMeta = withBubble && content['@type'] !== 'messageCall';\r\n\r\n\r\n        // console.log('[p] m.render id=' + message.id);\r\n\r\n        // return (\r\n        //     <StubMessage>\r\n        //         {text}\r\n        //         {media}\r\n        //         <WebPage\r\n        //             chatId={chatId}\r\n        //             messageId={messageId}\r\n        //             openMedia={this.openMedia}\r\n        //             meta={inlineMeta}\r\n        //         />\r\n        //     </StubMessage>\r\n        // );\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('message', {\r\n                        'message-rounded': showTitle && showTail && tailRounded,\r\n                        'message-short': !tile,\r\n                        'message-out': isOutgoing,\r\n                        'message-selected': selected,\r\n                        'message-highlighted': highlighted && !selected,\r\n                        'message-group-title': showTitle && !showTail,\r\n                        'message-group': !showTitle && !showTail,\r\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\r\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\r\n                        'message-bubble-hidden': !withBubble\r\n                    })}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onClick={this.handleSelection}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='message-body'>\r\n                        <div className='message-padding'>\r\n                            <CheckMarkIcon className='message-select-tick' />\r\n                        </div>\r\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\r\n                            {tile}\r\n                            <div>\r\n                                <div\r\n                                    className={classNames('message-content', {\r\n                                        'message-bubble': withBubble,\r\n                                        'message-bubble-out': withBubble && isOutgoing\r\n                                    })}\r\n                                    style={style}>\r\n                                    {withBubble && ((showTitle && !suppressTitle) || showForward) && (\r\n                                        <div className='message-title'>\r\n                                            {showTitle && !showForward && (\r\n                                                <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser/>\r\n                                            )}\r\n                                            {showForward && <Forward forwardInfo={forward_info} />}\r\n                                        </div>\r\n                                    )}\r\n                                    {showReply && (\r\n                                        <Reply\r\n                                            chatId={chatId}\r\n                                            messageId={reply_to_message_id}\r\n                                            onClick={this.handleReplyClick}\r\n                                        />\r\n                                    )}\r\n                                    {media}\r\n                                    <div\r\n                                        className={classNames('message-text', {\r\n                                            'message-text-1emoji': emojiMatches === 1,\r\n                                            'message-text-2emoji': emojiMatches === 2,\r\n                                            'message-text-3emoji': emojiMatches === 3\r\n                                        })}>\r\n                                        {text}\r\n                                    </div>\r\n                                    {webPage && (\r\n                                        <WebPage\r\n                                            chatId={chatId}\r\n                                            messageId={messageId}\r\n                                            openMedia={this.openMedia}\r\n                                            meta={inlineMeta}\r\n                                        />\r\n                                    )}\r\n                                    {showMeta && meta}\r\n                                </div>\r\n                                {reply_markup && (\r\n                                    <ReplyMarkup\r\n                                        chatId={chatId}\r\n                                        messageId={messageId}\r\n                                        markup={reply_markup}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                            <div className='message-tile-padding' />\r\n                        </div>\r\n                        <div className='message-padding' />\r\n                    </div>\r\n                </div>\r\n                <MessageMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    copyLink={copyLink}\r\n                    source={source}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    sendingState: PropTypes.object,\r\n    showTitle: PropTypes.bool,\r\n    showTail: PropTypes.bool,\r\n    showUnreadSeparator: PropTypes.bool,\r\n    showDate: PropTypes.bool\r\n}\r\n\r\nMessage.defaultProps = {\r\n    sendingState: null,\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false,\r\n    showDate: false\r\n}\r\n\r\n// const enhance = compose(\r\n//     withSaveRef(),\r\n//     withTranslation(),\r\n//     withRestoreRef()\r\n// );\r\n\r\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\r\n\r\nexport default message;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport DayMeta from './DayMeta';\r\nimport UnreadSeparator from './UnreadSeparator';\r\nimport Photo from './Media/Photo';\r\nimport { openMedia } from '../../Utils/Message';\r\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './ServiceMessage.css';\r\nimport MessageMenu from './MessageMenu';\r\n\r\nconst chatPhotoStyle = {\r\n    width: 96,\r\n    height: 96,\r\n    borderRadius: '50%',\r\n    margin: '0 auto 5px'\r\n};\r\n\r\nclass ServiceMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, messageId } = this.props;\r\n        this.state = {\r\n            message: MessageStore.get(chatId, messageId),\r\n            highlighted: false,\r\n            contextMenu: false,\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\r\n        const { highlighted, contextMenu } = this.state;\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.sendingState !== sendingState) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    handleAnimationEnd = () => {\r\n        this.setState({ highlighted: false });\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        openMedia(chatId, messageId);\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            if (MessageStore.selectedItems.size > 1) {\r\n                return;\r\n            }\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const copyLink =\r\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                copyLink,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\r\n        const { highlighted, contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content, date } = message;\r\n        if (!content) return null;\r\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\r\n\r\n        const { photo } = content;\r\n\r\n        const text = getServiceMessageContent(message, true);\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='service-message-wrapper'>\r\n                        <div className='service-message-content'>\r\n                            <div>{text}</div>\r\n                        </div>\r\n                    </div>\r\n                    {photo && (\r\n                        <Photo\r\n                            chatId={chatId}\r\n                            messageId={messageId}\r\n                            photo={photo}\r\n                            displaySize={96}\r\n                            style={chatPhotoStyle}\r\n                            openMedia={this.openMedia}\r\n                        />\r\n                    )}\r\n                </div>\r\n                <MessageMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    copyLink={null}\r\n                    source={'chat'}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nServiceMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    showUnreadSeparator: PropTypes.bool\r\n}\r\n\r\nServiceMessage.defaultProps = {\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false\r\n}\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ServiceMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './Placeholder.css';\r\n\r\nclass Placeholder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\r\n        this.state = {\r\n            chatId,\r\n            dialogsReady,\r\n            cacheLoaded\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (nextState.chatId !== this.state.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== this.props.t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n    }\r\n\r\n    onClientUpdateCacheLoaded = update => {\r\n        const { cacheLoaded } = AppStore;\r\n\r\n        this.setState({ cacheLoaded });\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { nextChatId: chatId } = update;\r\n\r\n        this.setState({ chatId });\r\n    };\r\n\r\n    onClientUpdateDialogsReady = update => {\r\n        const { dialogsReady } = AppStore;\r\n\r\n        this.setState({ dialogsReady });\r\n    };\r\n\r\n    render() {\r\n        const { t, force } = this.props;\r\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\r\n        if (chatId) return null;\r\n        // if (!dialogsReady && !cacheLoaded) return null;\r\n\r\n        return (\r\n            <div className='placeholder'>\r\n                <div className='placeholder-wrapper'>\r\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\r\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Placeholder);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport './ScrollDownButton.css';\r\n\r\nclass ScrollDownButton extends React.Component {\r\n    render() {\r\n        const { onClick } = this.props;\r\n\r\n        return (\r\n            <div className='scroll-down-button'>\r\n                <IconButton disableRipple={true} onMouseDown={onClick}>\r\n                    <ArrowDownwardIcon />\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nScrollDownButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ScrollDownButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport StickerPreview from './StickerPreview';\r\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\r\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickersHint.css';\r\n\r\nclass StickersHint extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.hintsRef = React.createRef();\r\n\r\n        this.state = {\r\n            hint: null,\r\n            items: [],\r\n            previewStickerId: 0,\r\n            showPreview: false,\r\n            cancelSend: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\r\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\r\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\r\n    }\r\n\r\n    onClientUpdateRemoteStickersHint = update => {\r\n        const { hint } = update;\r\n        const { hint: currentHint } = this.state;\r\n\r\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\r\n\r\n        this.setState({\r\n            hint: StickerStore.hint,\r\n            items: this.getItems(StickerStore.hint)\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        const { stickers } = hint;\r\n        loadStickersContent(store, stickers.stickers);\r\n    };\r\n\r\n    onClientUpdateLocalStickersHint = update => {\r\n        const { hint } = update;\r\n\r\n        this.setState({\r\n            hint,\r\n            items: this.getItems(hint),\r\n            previewStickerId: 0,\r\n            showPreview: false,\r\n            cancelSend: false\r\n        });\r\n\r\n        if (!hint) return;\r\n\r\n        const store = FileStore.getStore();\r\n        const { stickers } = hint;\r\n        loadStickersContent(store, stickers.stickers);\r\n    };\r\n\r\n    handleSend = sticker => {\r\n        const { cancelSend } = this.state;\r\n        if (cancelSend) return;\r\n        if (!sticker) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSend',\r\n            sticker\r\n        });\r\n    };\r\n\r\n    loadPreviewContent = stickerId => {\r\n        const { items } = this.state;\r\n\r\n        const sticker = items.find(x => x.sticker.id === stickerId);\r\n        if (!sticker) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadStickerContent(store, sticker, null);\r\n\r\n        let stickersPerRow = 8;\r\n        if (this.hintsRef && this.hintsRef.current) {\r\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\r\n        }\r\n\r\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\r\n        preloadStickers.forEach(x => {\r\n            loadStickerContent(store, x, null);\r\n        });\r\n    };\r\n\r\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\r\n        if (!stickers) return [];\r\n\r\n        const indexes = [];\r\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        if (index === -1) return [];\r\n\r\n        const row = Math.floor(index / stickersPerRow);\r\n        const column = index % stickersPerRow;\r\n\r\n        const prevRow = row - 1;\r\n        const nextRow = row + 1;\r\n        const prevColumn = column - 1;\r\n        const nextColumn = column + 1;\r\n\r\n        if (prevRow >= 0) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(stickersPerRow * prevRow + prevColumn);\r\n            }\r\n            indexes.push(stickersPerRow * prevRow + column);\r\n            if (nextColumn < stickersPerRow) {\r\n                indexes.push(stickersPerRow * prevRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        if (prevColumn >= 0) {\r\n            indexes.push(stickersPerRow * row + prevColumn);\r\n        }\r\n        if (nextColumn < stickersPerRow) {\r\n            indexes.push(stickersPerRow * row + nextColumn);\r\n        }\r\n\r\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(stickersPerRow * nextRow + prevColumn);\r\n            }\r\n            indexes.push(stickersPerRow * nextRow + column);\r\n            if (nextColumn < stickersPerRow) {\r\n                indexes.push(stickersPerRow * nextRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        return indexes.map(i => stickers[i]);\r\n    };\r\n\r\n    handleMouseEnter = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        if (!this.mouseDown) return;\r\n\r\n        if (this.mouseDownStickerId !== stickerId) {\r\n            this.mouseDownStickerId = null;\r\n        }\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        this.mouseDownStickerId = stickerId;\r\n        const now = Date.now();\r\n\r\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\r\n        setTimeout(() => {\r\n            const { timestamp } = this.state;\r\n            if (timestamp === now) {\r\n                this.setState({ showPreview: true, cancelSend: true });\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateStickerPreview',\r\n                    sticker\r\n                });\r\n            }\r\n        }, 500);\r\n\r\n        this.loadPreviewContent(stickerId);\r\n\r\n        this.mouseDown = true;\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return false;\r\n    };\r\n\r\n    handleMouseUp = () => {\r\n        const sticker = null;\r\n        this.setState({ sticker, timestamp: 0, showPreview: false });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.mouseDown = false;\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    getItems = hint => {\r\n        const items = [];\r\n        if (!hint) return items;\r\n\r\n        const dict = new Map();\r\n        const { stickers, foundStickers } = hint;\r\n        if (stickers) {\r\n            stickers.stickers.forEach(x => {\r\n                items.push(x);\r\n                dict.set(x.sticker.id, x.sticker.id);\r\n            });\r\n        }\r\n        if (foundStickers) {\r\n            foundStickers.stickers.forEach(x => {\r\n                if (!dict.has(x.sticker.id)) {\r\n                    items.push(x);\r\n                    dict.set(x.sticker.id, x.sticker.id);\r\n                }\r\n            });\r\n        }\r\n\r\n        return items;\r\n    };\r\n\r\n    getSticker(stickerId) {\r\n        const { items } = this.state;\r\n\r\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\r\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\r\n    }\r\n\r\n    render() {\r\n        const { hint, items, sticker, showPreview } = this.state;\r\n        if (!hint) return null;\r\n        if (!items) return null;\r\n        if (!items.length) return null;\r\n\r\n        const controls = items.map(x => (\r\n            <div\r\n                className='sticker-set-dialog-item'\r\n                key={x.sticker.id}\r\n                data-sticker-id={x.sticker.id}\r\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\r\n                onClick={() => this.handleSend(x)}\r\n                onMouseEnter={this.handleMouseEnter}\r\n                onMouseDown={this.handleMouseDown}>\r\n                <Sticker\r\n                    key={x.sticker.id}\r\n                    className='sticker-set-dialog-item-sticker'\r\n                    sticker={x}\r\n                    autoplay={false}\r\n                    blur={false}\r\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\r\n                    preview\r\n                    source={StickerSourceEnum.HINTS}\r\n                />\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\r\n                {controls}\r\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StickersHint;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as ReactDOM from 'react-dom';\r\nimport classNames from 'classnames';\r\nimport ActionBar from './ActionBar';\r\nimport Album from '../Message/Album/Album';\r\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\r\nimport FilesDropTarget from './FilesDropTarget';\r\nimport GroupCallJoinPanel from '../Calls/GroupCallJoinPanel';\r\nimport InputBoxHints from './InputBoxHints';\r\nimport Message from '../Message/Message';\r\nimport ServiceMessage from '../Message/ServiceMessage';\r\nimport Placeholder from './Placeholder';\r\nimport ScrollDownButton from './ScrollDownButton';\r\nimport StickersHint from './StickersHint';\r\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\r\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\r\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\r\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\r\nimport { canSendMediaMessages, canSendMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isGroupChat, isMeChat } from '../../Utils/Chat';\r\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\r\nimport { sendBotStartMessage } from '../../Actions/Message';\r\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MessagesList.css';\r\n\r\nconst ScrollBehaviorEnum = Object.freeze({\r\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\r\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\r\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\r\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\r\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\r\n    NONE: 'NONE'\r\n});\r\n\r\nclass MessagesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.lastRequests = new Map();\r\n        this.sessionId = {\r\n            date: new Date(),\r\n            loading: false,\r\n            completed: false,\r\n            loadMigratedHistory: false\r\n        };\r\n\r\n        this.state = {\r\n            prevChatId: 0,\r\n            prevMessageId: null,\r\n            playerOpened: false,\r\n            history: [],\r\n            clearHistory: false,\r\n            selectionActive: false,\r\n            separatorMessageId: 0,\r\n            scrollDownVisible: false,\r\n            replyHistory: []\r\n        };\r\n\r\n        this.listRef = React.createRef();\r\n        this.itemsRef = React.createRef();\r\n        this.scrollDownButtonRef = React.createRef();\r\n\r\n        this.defferedActions = [];\r\n        this.itemsMap = new Map();\r\n\r\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\r\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\r\n    }\r\n\r\n    hasLastMessage() {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return false;\r\n\r\n        const { last_message } = chat;\r\n        if (!last_message) return true;\r\n\r\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\r\n            return {\r\n                prevChatId: props.chatId,\r\n                prevMessageId: props.messageId,\r\n                clearHistory: false,\r\n                selectionActive: false,\r\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\r\n                scrollDownVisible:\r\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\r\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const list = this.listRef.current;\r\n        const { scrollTop, scrollHeight, offsetHeight } = list;\r\n\r\n        const snapshot = {\r\n            scrollTop,\r\n            scrollHeight,\r\n            offsetHeight\r\n        };\r\n\r\n        this.snapshot = snapshot;\r\n        return snapshot;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId, messageId } = this.props;\r\n        const { scrollDownVisible } = this.state;\r\n\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] componentDidUpdate\r\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\r\n        //     scrollDownVisible=${scrollDownVisible}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.scrollHeight=${list.scrollHeight}\r\n        //     list.offsetHeight=${list.offsetHeight}`\r\n        // );\r\n\r\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\r\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[ml] shouldComponentUpdate chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            // console.log('[ml] shouldComponentUpdate messageId');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\r\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playerOpened !== playerOpened) {\r\n            // console.log('[ml] shouldComponentUpdate playerOpened');\r\n            return true;\r\n        }\r\n\r\n        if (!historyEquals(nextState.history, history)) {\r\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\r\n            return true;\r\n        }\r\n\r\n        if (nextState.dragging !== dragging) {\r\n            // console.log('[ml] shouldComponentUpdate dragging');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clearHistory !== clearHistory) {\r\n            // console.log('[ml] shouldComponentUpdate clearHistory');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selectionActive !== selectionActive) {\r\n            // console.log('[ml] shouldComponentUpdate selectionActive');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[ml] shouldComponentUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId, messageId } = this.props;\r\n        this.handleSelectChat(chatId, null, messageId, null);\r\n\r\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\r\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\r\n        MessageStore.on('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\r\n        MessageStore.on('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\r\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\r\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\r\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\r\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\r\n        MessageStore.off('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\r\n        MessageStore.off('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\r\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\r\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\r\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    onClientUpdateStartMessageEditing = update => {\r\n        const { chatId, messageId } = update;\r\n        const { chatId: currentChatId } = this.props;\r\n        if (currentChatId !== chatId) return;\r\n\r\n        const { history } = this.state;\r\n        if (!history.length) return;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (list.offsetHeight + list.scrollTop < list.scrollHeight){\r\n            return;\r\n        }\r\n\r\n        if (!history.some(x => x.chat_id === chatId && x.id === messageId)) return;\r\n\r\n        this.scrollBottomAfterEditing = {\r\n            chatId,\r\n            messageId\r\n        };\r\n    };\r\n\r\n    onClientUpdateStopMessageEditing = update => {\r\n        const { chatId, messageId } = update;\r\n        const { chatId: currentChatId } = this.props;\r\n        if (currentChatId !== chatId) return;\r\n\r\n        const { scrollBottomAfterEditing } = this;\r\n        if (!scrollBottomAfterEditing) return;\r\n\r\n        if (chatId !== scrollBottomAfterEditing.chatId) return;\r\n        if (messageId !== scrollBottomAfterEditing.messageId) return;\r\n\r\n        const { current: list } = this.listRef;\r\n        list.scrollTop = list.scrollHeight - list.offsetHeight;\r\n        this.scrollBottomAfterEditing = null;\r\n    };\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chat_id, message_id, is_pinned } = update;\r\n        const { chatId, filter } = this.props;\r\n        if (chatId !== chat_id) return;\r\n        if (!filter) return;\r\n\r\n        if (is_pinned) {\r\n            const message = MessageStore.get(chat_id, message_id);\r\n\r\n            const list = this.listRef.current;\r\n\r\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\r\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n            }\r\n\r\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\r\n\r\n            const history = [message];\r\n            this.scrollBehaviorNone = true;\r\n            this.insert(history, newState, () => {\r\n                this.scrollBehaviorNone = false;\r\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n            });\r\n\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, history);\r\n            this.viewMessages(history);\r\n        } else {\r\n            this.deleteHistory([message_id]);\r\n\r\n            const media = MessageStore.getMedia(chatId);\r\n            if (media && !media.pinned.length) {\r\n                closePinned();\r\n            }\r\n        }\r\n    };\r\n\r\n    onKeyDown = event => {\r\n        // if (event.keyCode === 27) {\r\n        //     if (MessageStore.selectedItems.size > 0) {\r\n        //         console.log('[k] messagesList onKeyDown');\r\n        //         clearSelection();\r\n        //         event.stopPropagation();\r\n        //         event.preventDefault();\r\n        //     }\r\n        // }\r\n    };\r\n\r\n    onClientUpdateTryEditMessage = async update => {\r\n        if (this.hasLastMessage()) {\r\n            const { history } = this.state;\r\n\r\n            for (let i = history.length - 1; i >= 0; i--) {\r\n                const message = history[i];\r\n                if (canMessageBeEdited(message.chat_id, message.id)) {\r\n                    editMessage(message.chat_id, message.id);\r\n\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: this.props.chatId,\r\n            query: '',\r\n            sender_user_id: UserStore.getMyId(),\r\n            from_message_id: 0,\r\n            offset: 0,\r\n            limit: 100,\r\n            filter: { '@type': 'searchMessagesFilterEmpty' }\r\n        });\r\n\r\n        for (let i = 0; i < result.messages.length; i++) {\r\n            const message = result.messages[i];\r\n            if (canMessageBeEdited(message.chat_id, message.id)) {\r\n                editMessage(message.chat_id, message.id);\r\n\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateDialogsReady = async update => {\r\n        const { list } = update;\r\n        if (!list) return;\r\n        if (list['@type'] !== 'chatListMain') return;\r\n\r\n        const { history } = this.state;\r\n        if (history && history.length > 0) return;\r\n\r\n        await FileStore.initDB(async () => {\r\n            const { chatId, messageId } = this.props;\r\n            if (chatId) {\r\n                const chat = ChatStore.get(chatId);\r\n                if (chat) {\r\n                    const { type } = chat;\r\n                    switch (type['@type']) {\r\n                        case 'chatTypePrivate':\r\n                        case 'chatTypeSecret': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createPrivateChat',\r\n                                user_id: type.user_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                        case 'chatTypeBasicGroup': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createBasicGroupChat',\r\n                                basic_group_id: type.basic_group_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                        case 'chatTypeSupergroup': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createSupergroupChat',\r\n                                supergroup_id: type.supergroup_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                    }\r\n                    this.handleSelectChat(chatId, 0, messageId, 0);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateFocusWindow = update => {\r\n        const { focused } = update;\r\n        if (focused) {\r\n            this.defferedActions.forEach(x => x());\r\n            this.defferedActions = [];\r\n        }\r\n    };\r\n\r\n    onClientUpdateOpenReply = update => {\r\n        const { chatId, messageId } = update;\r\n        const { replyHistory } = this.state;\r\n\r\n        if (this.props.chatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\r\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\r\n            return;\r\n        }\r\n\r\n        replyHistory.push({ chatId, messageId });\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const list = this.listRef.current;\r\n\r\n        const prevOffsetHeight = list.offsetHeight;\r\n        const prevScrollTop = list.scrollTop;\r\n        this.setState({ playerOpened: true }, () => {\r\n            if (list.scrollTop === prevScrollTop) {\r\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateMediaEnding = udpate => {\r\n        const list = this.listRef.current;\r\n\r\n        this.prevOffsetHeight = list.offsetHeight;\r\n        this.prevScrollTop = list.scrollTop;\r\n    };\r\n\r\n    onClientUpdateMediaEnd = udpate => {\r\n        const list = this.listRef.current;\r\n\r\n        const { prevScrollTop, prevOffsetHeight } = this;\r\n        this.setState({ playerOpened: false }, () => {\r\n            if (list.scrollTop === prevScrollTop) {\r\n                list.scrollTop -= Math.abs(prevOffsetHeight - list.offsetHeight);\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateSelection = update => {\r\n        this.setState({\r\n            selectionActive: MessageStore.selectedItems.size > 0\r\n        });\r\n    };\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.setState({ clearHistory: update.inProgress });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        if (history.findIndex(x => x.id === message_id) !== -1) {\r\n            const message = MessageStore.get(chat_id, message_id);\r\n            if (!message) return;\r\n\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, [message]);\r\n        }\r\n    };\r\n\r\n    onUpdateMessageSendSucceeded = update => {\r\n        const { message, old_message_id } = update;\r\n        const { chatId } = this.props;\r\n        if (chatId !== message.chat_id) return;\r\n\r\n        // let handleSendSucceeded = false;\r\n        // const { content } = message;\r\n        // switch (content['@type']) {\r\n        //     case 'messagePoll': {\r\n        //         handleSendSucceeded = true;\r\n        //         break;\r\n        //     }\r\n        // }\r\n        //\r\n        // if (!handleSendSucceeded) return;\r\n\r\n        const scrollBehavior = message.is_outgoing\r\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\r\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\r\n\r\n        this.replaceMessage(old_message_id, message, () => {\r\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\r\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n            }\r\n\r\n            this.updateItemsInView();\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, [message]);\r\n        this.viewMessages([message]);\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        if (!this.hasLastMessage()) return;\r\n\r\n        const { message } = update;\r\n        const { chatId } = this.props;\r\n        if (chatId !== message.chat_id) return;\r\n\r\n        const { date } = message;\r\n        if (date === 0) return;\r\n\r\n        const list = this.listRef.current;\r\n\r\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\r\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n        }\r\n\r\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\r\n\r\n        const history = [message];\r\n        this.scrollBehaviorNone = true;\r\n        this.insertPrevious(history, newState, () => {\r\n            this.scrollBehaviorNone = false;\r\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, history);\r\n        this.viewMessages(history);\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id, is_permanent, message_ids } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        if (!is_permanent) return;\r\n\r\n        this.deleteHistory(message_ids);\r\n    };\r\n\r\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId, ignoreUnread = false) {\r\n        const chat = ChatStore.get(chatId);\r\n        const previousChat = ChatStore.get(previousChatId);\r\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\r\n        this.sessionId = {\r\n            date: new Date(),\r\n            loading: false,\r\n            completed: false,\r\n            loadMigratedHistory: false\r\n        };\r\n        const { sessionId } = this;\r\n\r\n        this.prevScrollTop = null;\r\n        this.defferedActions = [];\r\n\r\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\r\n\r\n        if (chat) {\r\n            if (previousChatId !== chatId && !this.props.filter) {\r\n                TdLibController.send({\r\n                    '@type': 'openChat',\r\n                    chat_id: chatId\r\n                });\r\n            }\r\n\r\n            const unread = !messageId && chat.unread_count > 1;\r\n            let fromMessageId = 0;\r\n            if (!ignoreUnread && unread && chat.last_read_inbox_message_id) {\r\n                fromMessageId = chat.last_read_inbox_message_id;\r\n            } else if (messageId) {\r\n                fromMessageId = messageId;\r\n            } else if (scrollPosition) {\r\n                fromMessageId = scrollPosition.messageId;\r\n            }\r\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\r\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\r\n\r\n            sessionId.loading = true;\r\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\r\n            .catch(error => {\r\n                return {\r\n                    '@type': 'messages',\r\n                    messages: [],\r\n                    total_count: 0\r\n                };\r\n            }).finally(() => {\r\n                sessionId.loading = false;\r\n            });\r\n\r\n            if (sessionId !== this.sessionId) {\r\n                return;\r\n            }\r\n\r\n            MessageStore.setItems(result.messages);\r\n            result.messages.reverse();\r\n\r\n            let separatorMessageId = this.state.separatorMessageId;\r\n            if (chatId !== previousChatId) {\r\n                separatorMessageId = Number.MAX_VALUE;\r\n                if (chat && chat.unread_count > 1) {\r\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\r\n                        const { id } = result.messages[i];\r\n                        if (\r\n                            !result.messages[i].is_outgoing &&\r\n                            id > chat.last_read_inbox_message_id &&\r\n                            id < separatorMessageId\r\n                        ) {\r\n                            separatorMessageId = id;\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\r\n            }\r\n\r\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n            if (messageId) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\r\n            } else if (unread && separatorMessageId) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\r\n            } else if (scrollPosition) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\r\n            }\r\n\r\n            this.cancelUpdatePinnedMessage = true;\r\n            this.replace(separatorMessageId, result.messages, () => {\r\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\r\n                if (messageId) {\r\n                    highlightMessage(chatId, messageId);\r\n                }\r\n                requestAnimationFrame(() => {\r\n                    this.cancelUpdatePinnedMessage = false;\r\n                });\r\n\r\n                this.loadIncompleteHistory(result, limit);\r\n            });\r\n\r\n            // load files\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, result.messages);\r\n            this.viewMessages(result.messages);\r\n\r\n            loadChatsContent(store, [chatId]);\r\n            loadDraftContent(store, chatId);\r\n\r\n            if (previousChatId !== chatId && !this.props.filter) {\r\n                // getChatFullInfo(chatId);\r\n                getChatMedia(chatId);\r\n                if (this.props.options) {\r\n                    const { botStartMessage } = this.props.options;\r\n                    if (botStartMessage && canSendMessages(chatId) && isGroupChat(chatId)) {\r\n                        const { botUserId, parameter } = botStartMessage;\r\n\r\n                        await sendBotStartMessage(chatId, botUserId, parameter);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            sessionId.loading = true;\r\n            this.replace(0, [], () => {\r\n                sessionId.loading = false;\r\n            });\r\n        }\r\n\r\n        if (previousChatId !== chatId && !this.props.filter) {\r\n            if (previousChat) {\r\n                TdLibController.send({\r\n                    '@type': 'closeChat',\r\n                    chat_id: previousChatId\r\n                });\r\n\r\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\r\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\r\n                const message = this.messages[scrollMessage.index];\r\n                if (message) {\r\n                    const { chatId, messageId } = message.props;\r\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\r\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    viewMessages(messages) {\r\n        if (!messages) return;\r\n        if (messages.length === 0) return;\r\n        if (!messages[0].chat_id) return;\r\n\r\n        const viewAction = () => {\r\n            TdLibController.send({\r\n                '@type': 'viewMessages',\r\n                chat_id: messages[0].chat_id,\r\n                message_ids: messages.map(x => x.id)\r\n            });\r\n        };\r\n\r\n        if (window.hasFocus) {\r\n            viewAction();\r\n        } else {\r\n            this.defferedActions.push(viewAction);\r\n        }\r\n    }\r\n\r\n    cancelLoadMessageContents(messages) {\r\n        //return;\r\n        for (let i = messages.length - 1; i >= 0; i--) {\r\n            let message = messages[i];\r\n            if (message && message.content) {\r\n                switch (message.content['@type']) {\r\n                    case 'messagePhoto': {\r\n                        let [id, pid] = this.getMessagePhoto(message);\r\n                        if (pid) {\r\n                            let obj = getPhotoSize(message.content.photo.sizes);\r\n                            if (!obj.blob) {\r\n                                FileStore.cancelGetRemoteFile(id, message);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'messageSticker': {\r\n                        let [id, pid] = this.getMessageSticker(message);\r\n                        if (pid) {\r\n                            let obj = message.content.sticker.sticker;\r\n                            if (!obj.blob) {\r\n                                FileStore.cancelGetRemoteFile(id, message);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadIncompleteHistory = async (result, limit) => {\r\n        const MAX_ITERATIONS = 5;\r\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\r\n\r\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\r\n            result = await this.onLoadNext();\r\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\r\n        }\r\n    };\r\n\r\n    isCompleteHistory = (result, limit) => {\r\n        if (!result) return false;\r\n        if (!result.messages.length) return true;   // end of the history\r\n\r\n        return result.messages.length >= limit;\r\n    };\r\n\r\n    onLoadNext = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { sessionId } = this;\r\n\r\n        if (!chatId) return;\r\n        if (sessionId.loading) return;\r\n\r\n        if (sessionId.loadMigratedHistory) {\r\n            return await this.onLoadMigratedHistory();\r\n        }\r\n\r\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\r\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\r\n\r\n        let result = null;\r\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\r\n        if (this.lastRequests.has(lastRequestKey)) {\r\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\r\n        } else {\r\n            sessionId.loading = true;\r\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\r\n                .finally(() => {\r\n                    sessionId.loading = false;\r\n                });\r\n        }\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        if (!result.messages.length) {\r\n            this.lastRequests.set(lastRequestKey, result);\r\n        }\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n\r\n        this.insertNext(result.messages, state => {\r\n            if (result.messages.length > 0) {\r\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\r\n                setTimeout(() => {\r\n                    const { history: currentHistory } = this.state;\r\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\r\n                        this.setState({\r\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\r\n                        });\r\n                    }\r\n                }, 100);\r\n            }\r\n            if (!result.messages.length) {\r\n                this.onLoadMigratedHistory();\r\n            }\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    onLoadMigratedHistory = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { sessionId } = this;\r\n\r\n        if (!chatId) return;\r\n\r\n        const supergroupId = getSupergroupId(chatId);\r\n        if (!supergroupId) return;\r\n\r\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\r\n        if (!fullInfo) {\r\n            fullInfo = await getChatFullInfo(chatId);\r\n        }\r\n        if (!fullInfo.upgraded_from_basic_group_id) {\r\n            return;\r\n        }\r\n\r\n        sessionId.loadMigratedHistory = true;\r\n\r\n        const basicGroupChat = await TdLibController.send({\r\n            '@type': 'createBasicGroupChat',\r\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\r\n        });\r\n\r\n        if (!basicGroupChat) return;\r\n        if (sessionId.loading) return;\r\n\r\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\r\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\r\n\r\n        sessionId.loading = true;\r\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\r\n        .finally(() => {\r\n            sessionId.loading = false;\r\n        });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n        this.insertNext(result.messages, state => {\r\n            if (result.messages.length > 0) {\r\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\r\n            }\r\n\r\n            this.loadIncompleteHistory(result, limit);\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    onLoadPrevious = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { sessionId } = this;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        if (!chat) return;\r\n        if (sessionId.loading) return;\r\n        if (this.hasLastMessage()) return;\r\n\r\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\r\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\r\n\r\n        sessionId.loading = true;\r\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\r\n            .finally(() => {\r\n                sessionId.loading = false;\r\n            });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.state.history);\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n        this.scrollBehaviorNone = true;\r\n        this.insertPrevious(result.messages, {}, () => {\r\n            this.scrollBehaviorNone = false;\r\n            if (result.messages.length > 0) {\r\n                setTimeout(() => {\r\n                    const { history: currentHistory } = this.state;\r\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\r\n                        this.setState({\r\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\r\n                        }, () => {\r\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\r\n                        });\r\n                    }\r\n                }, 0);\r\n            }\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    replace(separatorMessageId, history, callback) {\r\n        this.setState({ separatorMessageId, history }, callback);\r\n    }\r\n\r\n    replaceMessage(oldMessageId, message, callback) {\r\n        if (!message) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        let history = [...this.state.history];\r\n        const index = history.findIndex(x => x.id === oldMessageId);\r\n        if (index !== -1) {\r\n            history.splice(index, 1, message);\r\n        } else {\r\n            history = this.state.history;\r\n        }\r\n\r\n        this.setState({ history }, callback);\r\n    }\r\n\r\n    insert(history, newState, callback) {\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            history: history.concat(this.state.history).sort((a, b) => {\r\n                if (a.id < b.id) {\r\n                    return -1;\r\n                } else if (a.id > b.id) {\r\n                    return 1;\r\n                }\r\n\r\n                return 0;\r\n            })\r\n        }, callback);\r\n    }\r\n\r\n    insertNext(history, callback) {\r\n        if (history.length === 0) {\r\n            callback && callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            history: history.concat(this.state.history)//.slice(0, 100)\r\n        }, callback);\r\n    }\r\n\r\n    insertPrevious(history, newState, callback) {\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            history: this.state.history.concat(history),\r\n            ...newState\r\n        }, callback);\r\n    }\r\n\r\n    deleteHistory(message_ids, callback) {\r\n        const { history } = this.state;\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        const map = new Map(message_ids.map(x => [x, x]));\r\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\r\n    }\r\n\r\n    updateItemsInView = () => {\r\n        if (!this.messages) return null;\r\n\r\n        const messages = [];\r\n        const messagesMap = new Map();\r\n        const items = itemsInView(this.listRef, this.itemsRef);\r\n        for (let i = 0; i < items.length; i++) {\r\n            const messageWrapper = this.messages[items[i]];\r\n            if (messageWrapper) {\r\n                const message = messageWrapper;\r\n                const { chatId, messageId, messageIds } = message.props;\r\n                if (messageId) {\r\n                    const key = `${chatId}_${messageId}`;\r\n                    messagesMap.set(key, key);\r\n                    messages.push({ chatId, messageId });\r\n                } else if (messageIds) {\r\n                    for (let j = 0; j < messageIds.length; j++) {\r\n                        const key = `${chatId}_${messageIds[j]}`;\r\n                        messagesMap.set(key, key);\r\n                        messages.push({ chatId, messageId: messageIds[j] });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!mapEquals(this.inViewMap, messagesMap)) {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\r\n\r\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\r\n            this.inViewMap = messagesMap;\r\n\r\n            return messages;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    updatePinnedMessage = scrollToNext => {\r\n        const { chatId, filter } = this.props;\r\n        if (filter) return;\r\n\r\n        const { prevScrollTop } = this;\r\n        if (prevScrollTop === null) {\r\n            // console.log('[pin] handleScroll 3.1');\r\n            return;\r\n        }\r\n        // const { prevScrollTop } = this;\r\n        // if (prevScrollTop === null) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        if (!media) return;\r\n        if (!media.pinned) return;\r\n        if (media.pinned.length <= 1) return;\r\n\r\n        const messages = [];\r\n        const items = itemsInView(this.listRef, this.itemsRef);\r\n        for (let i = 0; i < items.length; i++) {\r\n            const messageWrapper = this.messages[items[i]];\r\n            if (messageWrapper) {\r\n                const message = messageWrapper;\r\n                const { chatId, messageId, messageIds } = message.props;\r\n                if (messageId) {\r\n                    messages.push({ chatId, messageId });\r\n                } else if (messageIds) {\r\n                    for (let j = 0; j < messageIds.length; j++) {\r\n                        messages.push({ chatId, messageId: messageIds[j] });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!messages) return;\r\n        if (messages.length <= 1) return;\r\n\r\n        const minId = messages[0].messageId;\r\n        const maxId = messages[messages.length - 1].messageId;\r\n\r\n        let id = 0;\r\n        for (let i = 0; i < media.pinned.length; i++) {\r\n            const pinned = media.pinned[i];\r\n            if (pinned.id >= minId && pinned.id <= maxId) {\r\n                id = pinned.id;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!id) {\r\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\r\n            const pinnedMaxId = media.pinned[0].id\r\n\r\n            if (pinnedMaxId < minId) {\r\n                id = pinnedMaxId;\r\n            } else if (pinnedMinId > maxId) {\r\n                id = pinnedMinId;\r\n            }\r\n        }\r\n\r\n        const { clickedPinned, currentPinned } = MessageStore;\r\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\r\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\r\n\r\n\r\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\r\n                // console.log('[pin] handleScroll 3.2');\r\n                return;\r\n            }\r\n\r\n            // console.log('[pin] handleScroll 4', { chatId, id });\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\r\n        } else {\r\n            // console.log('[pin] handleScroll 3.3');\r\n        }\r\n    };\r\n\r\n    updateScrollDownVisibility = () => {\r\n        const { scrollDownVisible, replyHistory, history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (this.hasLastMessage() && scrollDownVisible) {\r\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\r\n                    this.setState({\r\n                        scrollDownVisible: false,\r\n                        replyHistory: []\r\n                    });\r\n                } else if (!replyHistory.length) {\r\n                    this.setState({\r\n                        scrollDownVisible: false\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            if (!scrollDownVisible) {\r\n                this.setState({ scrollDownVisible: true });\r\n            }\r\n        }\r\n\r\n        this.prevHistory = history;\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] handleScroll\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\r\n\r\n        this.updateItemsInView();\r\n\r\n        if (!this.cancelUpdatePinnedMessage) {\r\n            this.updatePinnedMessage(scrollToNext);\r\n        }\r\n\r\n        this.updateScrollDownVisibility();\r\n\r\n        if (this.prevScrollTop !== null) {\r\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\r\n                this.onLoadNext();\r\n            }\r\n\r\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\r\n                this.onLoadPrevious();\r\n            }\r\n        }\r\n\r\n        this.prevScrollTop = list.scrollTop;\r\n    };\r\n\r\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\r\n        const { chatId, messageId } = this.props;\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\r\n            scrollTop: 0,\r\n            scrollHeight: 0,\r\n            offsetHeight: 0\r\n        };\r\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\r\n\r\n        // console.log(\r\n        //     `[ml] handleScrollBehavior\r\n        //     scrollBehavior=${scrollBehavior}\r\n        //     snapshot.scrollTop=${scrollTop}\r\n        //     snapshot.offsetHeight=${offsetHeight}\r\n        //     snapshot.scrollHeight=${scrollHeight}`\r\n        // );\r\n\r\n        switch (scrollBehavior) {\r\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\r\n                this.scrollToBottom();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\r\n                this.scrollToMessage();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\r\n                this.scrollToUnread();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\r\n                this.scrollToPosition(position);\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\r\n                this.keepScrollPosition(snapshot);\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.NONE: {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    keepScrollPosition = snapshot => {\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] keepScrollPosition before\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.scrollHeight=${list.scrollHeight}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     snapshot.scrollTop=${snapshot.scrollTop}\r\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\r\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\r\n        // );\r\n\r\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\r\n\r\n        // console.log(\r\n        //     `[ml] keepScrollPosition after\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.scrollHeight=${list.scrollHeight}\r\n        //     list.offsetHeight=${list.offsetHeight}`\r\n        // );\r\n    };\r\n\r\n    scrollToUnread = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToUnread before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            let itemComponent = this.itemsMap.get(i);\r\n            let item = ReactDOM.findDOMNode(itemComponent);\r\n            if (item) {\r\n                if (itemComponent.props.showUnreadSeparator) {\r\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToUnread after\r\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        if (!scrolled) {\r\n            this.scrollToBottom();\r\n        }\r\n    };\r\n\r\n    scrollToPosition = position => {\r\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\r\n        const { messageId, offset } = position;\r\n        const { history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            const itemComponent = this.itemsMap.get(i);\r\n            const node = ReactDOM.findDOMNode(itemComponent);\r\n            if (node) {\r\n                if (itemComponent.props.messageId === messageId) {\r\n                    list.scrollTop = node.offsetTop - offset;\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    scrollToMessage = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToMessage before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`,\r\n        //     this.itemsMap\r\n        // );\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            const itemComponent = this.itemsMap.get(i);\r\n            const node = ReactDOM.findDOMNode(itemComponent);\r\n            if (node) {\r\n                if (itemComponent.props.messageId === messageId\r\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\r\n                    if (list.offsetHeight < node.offsetHeight) {\r\n                        // scroll to the message top\r\n                        list.scrollTop = node.offsetTop;\r\n                    } else {\r\n                        // scroll message to the center of screen\r\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\r\n                    }\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!scrolled) {\r\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\r\n        }\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToMessage after\r\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        // if (!scrolled) {\r\n        //     this.scrollToBottom();\r\n        // }\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToBottom before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\r\n        if (nextScrollTop !== list.scrollTop) {\r\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\r\n\r\n            // console.log(\r\n            //     `MessagesList.scrollToBottom after\r\n            // chatId=${chatId} messageId=${messageId}\r\n            // list.scrollTop=${list.scrollTop}\r\n            // list.offsetHeight=${list.offsetHeight}\r\n            // list.scrollHeight=${list.scrollHeight}`\r\n            // );\r\n        } else {\r\n            // console.log(\r\n            //     `MessagesList.scrollToBottom after (no changes)\r\n            // chatId=${chatId} messageId=${messageId}\r\n            // list.scrollTop=${list.scrollTop}\r\n            // list.offsetHeight=${list.offsetHeight}\r\n            // list.scrollHeight=${list.scrollHeight}`\r\n            // );\r\n        }\r\n    };\r\n\r\n    getRequest = (chatId, fromMessageId, offset, limit) => {\r\n        const { filter } = this.props;\r\n\r\n        if (filter) {\r\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\r\n                const media = MessageStore.getMedia(chatId);\r\n                if (media && media.pinned && media.pinned.length > 0) {\r\n                    return Promise.resolve({\r\n                        '@type': 'messages',\r\n                        messages: [...media.pinned]\r\n                    });\r\n                }\r\n            }\r\n\r\n            return TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                from_message_id: fromMessageId,\r\n                offset,\r\n                limit,\r\n                filter,\r\n                sender_user_id: null,\r\n                query: null\r\n            });\r\n        }\r\n\r\n        return TdLibController.send({\r\n            '@type': 'getChatHistory',\r\n            chat_id: chatId,\r\n            from_message_id: fromMessageId,\r\n            offset,\r\n            limit\r\n        });\r\n    };\r\n\r\n    scrollToStart = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const hasLastMessage = history.some(x => x.chat_id === chatId && chat && chat.last_message && chat.last_message.id === x.id);\r\n        if (hasLastMessage) {\r\n            this.scrollToBottom();\r\n        } else {\r\n            this.handleSelectChat(chatId, chatId, 0, messageId, true);\r\n        }\r\n    };\r\n\r\n    handleListDragEnter = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId } = this.props;\r\n        if (!canSendMediaMessages(chatId)) return;\r\n\r\n        if (!event.dataTransfer) return;\r\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: true,\r\n            dataTransfer: event.dataTransfer\r\n        });\r\n    };\r\n\r\n    handleScrollDownClick = event => {\r\n        const { replyHistory } = this.state;\r\n\r\n        if (replyHistory.length > 0) {\r\n            const lastReply = replyHistory.pop();\r\n            if (lastReply) {\r\n                const { chatId, messageId } = lastReply;\r\n                if (chatId === this.props.chatId) {\r\n                    openChat(chatId, messageId);\r\n                }\r\n            }\r\n        } else {\r\n            this.scrollToStart();\r\n        }\r\n    };\r\n\r\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\r\n        if (!message) return false;\r\n\r\n        const { chat_id, date, is_outgoing, sender, content, forward_info } = message;\r\n\r\n        if (isFirst) {\r\n            return true;\r\n        }\r\n\r\n        if (isFirstUnread) {\r\n            return true;\r\n        }\r\n\r\n        if (isChannelChat(chat_id)) {\r\n            return true;\r\n        }\r\n\r\n        return (\r\n            prevMessage &&\r\n            (isServiceMessage(prevMessage) ||\r\n                prevMessage.content['@type'] === 'messageSticker' ||\r\n                prevMessage.content['@type'] === 'messageVideoNote' ||\r\n                !senderEquals(sender, prevMessage.sender) ||\r\n                is_outgoing !== prevMessage.is_outgoing ||\r\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\r\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\r\n        );\r\n    }\r\n\r\n    showMessageDate(message, prevMessage, isFirst) {\r\n        if (isFirst) {\r\n            return true;\r\n        }\r\n\r\n        const date = new Date(message.date * 1000);\r\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\r\n\r\n        if (\r\n            date.getFullYear() !== prevDate.getFullYear() ||\r\n            date.getMonth() !== prevDate.getMonth() ||\r\n            date.getDate() !== prevDate.getDate()\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, filter } = this.props;\r\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\r\n\r\n        // console.log('[ml] render ', history);\r\n\r\n        this.itemsMap.clear();\r\n\r\n        if (clearHistory) {\r\n            this.messages = null;\r\n        } else {\r\n            this.messages = [];\r\n            for (let i = 0; i < history.length; i++) {\r\n                const message = history[i];\r\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\r\n                let albumAdded = false;\r\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\r\n                    const album = [message];\r\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\r\n                        if (history[j].media_album_id === media_album_id) {\r\n                            album.push(history[j]);\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (album.length > 1) {\r\n                        const x = message;\r\n                        const prevMessage = i > 0 ? history[i - 1] : null;\r\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\r\n\r\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\r\n\r\n                        const isFirstUnread = separatorMessageId === x.id;\r\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\r\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\r\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\r\n\r\n                        const showTail = !nextMessage\r\n                            || isServiceMessage(nextMessage)\r\n                            || nextMessage.content['@type'] === 'messageSticker'\r\n                            || nextMessage.content['@type'] === 'messageVideoNote'\r\n                            || !senderEquals(x.sender, nextMessage.sender)\r\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\r\n                            || x.is_outgoing !== nextMessage.is_outgoing\r\n                            || nextShowTitle;\r\n\r\n                        this.messages.push((\r\n                            <Album\r\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\r\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\r\n                                chatId={chat_id}\r\n                                messageIds={album.map(x => x.id)}\r\n                                showTitle={showTitle}\r\n                                showTail={showTail}\r\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />));\r\n                        i += (album.length - 1);\r\n                        albumAdded = true;\r\n                    }\r\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\r\n                    const album = [message];\r\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\r\n                        if (history[j].media_album_id === media_album_id) {\r\n                            album.push(history[j]);\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (album.length > 1) {\r\n                        const x = message;\r\n                        const prevMessage = i > 0 ? history[i - 1] : null;\r\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\r\n\r\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\r\n\r\n                        const isFirstUnread = separatorMessageId === x.id;\r\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\r\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\r\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\r\n\r\n                        const showTail = !nextMessage\r\n                            || isServiceMessage(nextMessage)\r\n                            || nextMessage.content['@type'] === 'messageSticker'\r\n                            || nextMessage.content['@type'] === 'messageVideoNote'\r\n                            || !senderEquals(x.sender, nextMessage.sender)\r\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\r\n                            || x.is_outgoing !== nextMessage.is_outgoing\r\n                            || nextShowTitle;\r\n\r\n                        this.messages.push((\r\n                            <DocumentAlbum\r\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\r\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\r\n                                chatId={chat_id}\r\n                                messageIds={album.map(x => x.id)}\r\n                                showTitle={showTitle}\r\n                                showTail={showTail}\r\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />));\r\n                        i += (album.length - 1);\r\n                        albumAdded = true;\r\n                    }\r\n                }\r\n\r\n                if (!albumAdded) {\r\n                    /// history[4] id=5 prev\r\n                    /// history[5] id=6 current\r\n                    /// history[6] id=7 next\r\n                    /// ...\r\n                    /// history[9] id=10\r\n\r\n                    const x = message;\r\n                    const prevMessage = i > 0 ? history[i - 1] : null;\r\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\r\n\r\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\r\n\r\n                    let m = null;\r\n                    if (isServiceMessage(x)) {\r\n                        m = (\r\n                            <ServiceMessage\r\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\r\n                                ref={el => this.itemsMap.set(i, el)}\r\n                                chatId={x.chat_id}\r\n                                messageId={x.id}\r\n                                showUnreadSeparator={separatorMessageId === x.id}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />\r\n                        );\r\n                    } else {\r\n                        const isFirstUnread = separatorMessageId === x.id;\r\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\r\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\r\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\r\n\r\n                        const showTail = !nextMessage\r\n                            || isServiceMessage(nextMessage)\r\n                            || nextMessage.content['@type'] === 'messageSticker'\r\n                            || nextMessage.content['@type'] === 'messageVideoNote'\r\n                            || !senderEquals(x.sender, nextMessage.sender)\r\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\r\n                            || x.is_outgoing !== nextMessage.is_outgoing\r\n                            || nextShowTitle;\r\n\r\n                        m = (\r\n                            <Message\r\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\r\n                                ref={el => this.itemsMap.set(i, el)}\r\n                                chatId={x.chat_id}\r\n                                messageId={x.id}\r\n                                sendingState={x.sending_state}\r\n                                showTitle={showTitle}\r\n                                showTail={showTail}\r\n                                showUnreadSeparator={separatorMessageId === x.id}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />\r\n                        );\r\n                    }\r\n\r\n                    this.messages.push(m);\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className={classNames('messages-list', {\r\n                    'messages-list-selection-active': selectionActive\r\n                })}\r\n                onDragEnter={this.handleListDragEnter}>\r\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\r\n                    <div className='messages-list-top' />\r\n                    <div ref={this.itemsRef} className='messages-list-items'>\r\n                        {this.messages}\r\n                    </div>\r\n                </div>\r\n                <div className='messages-list-top-panel'>\r\n                    <GroupCallJoinPanel chatId={chatId}/>\r\n                    <ActionBar chatId={chatId} />\r\n                </div>\r\n                <Placeholder />\r\n                {scrollDownVisible && (\r\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\r\n                )}\r\n                <FilesDropTarget />\r\n                <StickersHint />\r\n                {/*<InputBoxHints />*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMessagesList.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number,\r\n    options: PropTypes.object,\r\n    filter: PropTypes.object\r\n};\r\n\r\nexport default MessagesList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport HeaderCommand from './HeaderCommand';\r\nimport { clearSelection, closePinned } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './PinnedMessagesHeader.css'\r\n\r\nclass PinnedMessagesHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const media = MessageStore.getMedia(props.chatId);\r\n\r\n        this.state = {\r\n            selectedCount: MessageStore.selectedItems.size,\r\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { selectedCount, pinnedCount } = this.state;\r\n\r\n        if (nextState.selectedCount !== selectedCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.pinnedCount !== pinnedCount) {\r\n            return true;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n    }\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\r\n\r\n        this.setState({\r\n            pinnedCount\r\n        });\r\n    };\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\r\n\r\n        this.setState({\r\n            pinnedCount\r\n        });\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        this.setState({\r\n            selectedCount: MessageStore.selectedItems.size\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        const { selectedCount } = this.state;\r\n        if (selectedCount > 0) {\r\n            clearSelection();\r\n        }\r\n\r\n        closePinned();\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { selectedCount, pinnedCount } = this.state;\r\n\r\n        let title = t('PinnedMessages');\r\n        if (pinnedCount === 1) {\r\n            title = t('PinnedMessage');\r\n        } else if (pinnedCount > 1) {\r\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\r\n                <IconButton\r\n                    className='header-left-button main-menu-button'\r\n                    onClick={this.handleClose}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-details-content'>\r\n                    <HeaderCommand count={selectedCount}/>\r\n                    <div className={classNames('header-status', 'grow')}>\r\n                        <span className='header-status-content'>{title}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nPinnedMessagesHeader.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(PinnedMessagesHeader);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FooterCommand from './FooterCommand';\r\nimport MessagesList from './MessagesList';\r\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\r\nimport { requestUnpinMessage } from '../../Actions/Client';\r\nimport { canPinMessages } from '../../Utils/Chat';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './PinnedMessages.css';\r\n\r\nclass PinnedMessages extends React.Component {\r\n\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevChatId } = state;\r\n        const { chatId } = props;\r\n        if (prevChatId !== chatId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                opened: false\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\r\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\r\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\r\n    }\r\n\r\n    onClientUpdateOpenPinned = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { chatId } = update;\r\n\r\n        if (currentChatId !== chatId) return;\r\n\r\n        this.setState({\r\n            opened: true\r\n        });\r\n    };\r\n\r\n    onClientUpdateClosePinned = update => {\r\n        this.setState({\r\n            opened: false\r\n        });\r\n    };\r\n\r\n    handleUnpinAll = async () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestUnpinMessage(chatId, null);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const { opened } = this.state;\r\n        if (!opened) return null;\r\n\r\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\r\n\r\n        return (\r\n            <div className='pinned-messages'>\r\n                <div className='pinned-messages-wrapper'>\r\n                    <div className='dialog-background'/>\r\n                    <div className='dialog-details-wrapper'>\r\n                        <PinnedMessagesHeader chatId={chatId} />\r\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\r\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        // return (\r\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\r\n        //\r\n        //     </SidebarPage>\r\n        // );\r\n    }\r\n}\r\n\r\nPinnedMessages.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(PinnedMessages);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { copy } from '../../Utils/Text';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { withSnackbar } from 'notistack';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport MoreIcon from '../../Assets/Icons/More';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { forward } from '../../Actions/Client';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass ShareStickerSetButton extends React.Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleMenuClick = event => {\r\n        this.handleOpen(event.currentTarget);\r\n    };\r\n\r\n    handleOpen = anchorEl => {\r\n        this.setState({ anchorEl });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleCopyLink = () => {\r\n        this.handleClose();\r\n\r\n        const { t } = this.props;\r\n\r\n        const link = this.getStickersLink(StickerStore.stickerSet);\r\n        if (!link) return;\r\n\r\n        copy(link);\r\n\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    getStickersLink = stickerSet => {\r\n        if (!stickerSet) return '';\r\n\r\n        const { name } = stickerSet;\r\n        if (!name) return '';\r\n\r\n        const telegramUrlOption = OptionStore.get('t_me_url');\r\n\r\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleShare = () => {\r\n        this.handleClose();\r\n\r\n        const link = this.getStickersLink(StickerStore.stickerSet);\r\n        if (!link) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSet',\r\n            stickerSet: null\r\n        });\r\n\r\n        const inputMessageContent = {\r\n            '@type': 'inputMessageText',\r\n            text: {\r\n                '@type': 'formattedText',\r\n                text: link,\r\n                entities: null\r\n            },\r\n            disable_web_page_preview: false,\r\n            clear_draft: false\r\n        };\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    render() {\r\n        const { t, className } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    className={className}\r\n                    aria-label='Share'\r\n                    open={Boolean(anchorEl)}\r\n                    onClick={this.handleMenuClick}>\r\n                    <MoreIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='sticker-set-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableEnforceFocus={true}\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    onClose={this.handleClose}>\r\n                    <MenuItem onClick={this.handleCopyLink}>\r\n                        <ListItemIcon>\r\n                            <LinkIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('CopyLink')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleShare}>\r\n                        <ListItemIcon>\r\n                            <ShareIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('StickersShare')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nShareStickerSetButton.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(ShareStickerSetButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport ShareStickerSetButton from './ShareStickerSetButton';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\r\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickerSetDialog.css';\r\n\r\nclass StickerSetDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.contentRef = React.createRef();\r\n\r\n        this.state = {\r\n            stickerSet: StickerStore.stickerSet,\r\n            stickerId: 0,\r\n            scroll: false,\r\n            scrollTop: false,\r\n            scrollBottom: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\r\n\r\n        if (stickerSet !== nextState.stickerSet) {\r\n            return true;\r\n        }\r\n\r\n        if (sticker !== nextState.sticker) {\r\n            return true;\r\n        }\r\n\r\n        if (scroll !== nextState.scroll) {\r\n            return true;\r\n        }\r\n\r\n        if (scrollTop !== nextState.scrollTop) {\r\n            return true;\r\n        }\r\n\r\n        if (scrollBottom !== nextState.scrollBottom) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\r\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\r\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\r\n    }\r\n\r\n    handleUpdateInstalledStickerSets = update => {\r\n        const { stickerSet } = StickerStore;\r\n\r\n        this.setState({ stickerSet });\r\n    };\r\n\r\n    handleClientUpdateStickerSet = update => {\r\n        const { stickerSet } = update;\r\n\r\n        this.setState({ stickerSet }, () => {\r\n            setTimeout(() => {\r\n                this.handleScroll();\r\n            }, 0);\r\n        });\r\n\r\n        if (stickerSet) {\r\n            const store = FileStore.getStore();\r\n            loadStickerSetContent(store, stickerSet);\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSet',\r\n            stickerSet: null\r\n        });\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return;\r\n\r\n        const { is_installed } = stickerSet;\r\n\r\n        TdLibController.send({\r\n            '@type': 'changeStickerSet',\r\n            set_id: stickerSet.id,\r\n            is_installed: !is_installed\r\n        });\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    loadPreviewContent = stickerId => {\r\n        const { stickerSet } = this.state;\r\n        const { stickers } = stickerSet;\r\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\r\n        if (!sticker) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadStickerContent(store, sticker, null);\r\n\r\n        const preloadStickers = this.getNeighborStickers(stickerId);\r\n        preloadStickers.forEach(x => {\r\n            loadStickerContent(store, x, null);\r\n        });\r\n    };\r\n\r\n    getNeighborStickers = stickerId => {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return [];\r\n\r\n        const { stickers } = stickerSet;\r\n        if (!stickers) return [];\r\n\r\n        const indexes = [];\r\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        if (index === -1) return [];\r\n\r\n        const STICKERS_PER_ROW = 5;\r\n        const row = Math.floor(index / STICKERS_PER_ROW);\r\n        const column = index % STICKERS_PER_ROW;\r\n\r\n        const prevRow = row - 1;\r\n        const nextRow = row + 1;\r\n        const prevColumn = column - 1;\r\n        const nextColumn = column + 1;\r\n\r\n        if (prevRow >= 0) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\r\n            }\r\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\r\n            if (nextColumn < STICKERS_PER_ROW) {\r\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        if (prevColumn >= 0) {\r\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\r\n        }\r\n        if (nextColumn < STICKERS_PER_ROW) {\r\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\r\n        }\r\n\r\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\r\n            }\r\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\r\n            if (nextColumn < STICKERS_PER_ROW) {\r\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        return indexes.map(i => stickers[i]);\r\n    };\r\n\r\n    // handleMouseOver = event => {\r\n    //     const stickerId = Number(event.target.dataset.stickerId);\r\n    //     if (!stickerId) return;\r\n    //\r\n    //     if (!this.mouseDown) return;\r\n    //\r\n    //     this.setState({ stickerId });\r\n    //     this.loadPreviewContent(stickerId);\r\n    // };\r\n\r\n    // handleMouseDown = event => {\r\n    //     const stickerId = Number(event.target.dataset.stickerId);\r\n    //     if (!stickerId) return;\r\n    //\r\n    //     this.setState({ stickerId });\r\n    //     this.loadPreviewContent(stickerId);\r\n    //\r\n    //     this.mouseDown = true;\r\n    //     document.addEventListener('mouseup', this.handleMouseUp);\r\n    //\r\n    //     event.preventDefault();\r\n    //     event.stopPropagation();\r\n    //     return false;\r\n    // };\r\n\r\n    getSticker(stickerId) {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return null;\r\n\r\n        const { stickers } = stickerSet;\r\n\r\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\r\n    }\r\n\r\n    handleMouseUp = () => {\r\n        const sticker = null;\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.mouseDown = false;\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    handleMouseEnter = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        if (!this.mouseDown) return;\r\n\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n\r\n        this.mouseDown = true;\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return false;\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const content = this.contentRef.current;\r\n        if (!content) {\r\n            return;\r\n        }\r\n\r\n        const hasScroll = content.scrollHeight > content.offsetHeight;\r\n        const scrollTop = hasScroll && content.scrollTop === 0;\r\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\r\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\r\n\r\n        this.setState({\r\n            scrollTop,\r\n            scrollBottom,\r\n            scroll\r\n        });\r\n    }\r\n\r\n    handleInViewport = (fileId, elementRect) => {\r\n        const { current } = this.contentRef;\r\n        if (!current) return false;\r\n\r\n        const contentRect = current.getBoundingClientRect();\r\n        const top = elementRect.top - contentRect.top;\r\n        const bottom = elementRect.bottom - contentRect.bottom;\r\n        // below bottom edge\r\n        if (top > contentRect.height) {\r\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\r\n            return false;\r\n        }\r\n        // upper top edge\r\n        if (bottom < - contentRect.height) {\r\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\r\n            return false;\r\n        }\r\n\r\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\r\n        return true;\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\r\n        if (!stickerSet) return null;\r\n\r\n        const { title, stickers, is_installed } = stickerSet;\r\n\r\n        const items = stickers.map(x => (\r\n            <div\r\n                className='sticker-set-dialog-item'\r\n                key={x.sticker.id}\r\n                data-sticker-id={x.sticker.id}\r\n                onMouseEnter={this.handleMouseEnter}\r\n                onMouseDown={this.handleMouseDown}>\r\n                <Sticker\r\n                    key={x.sticker.id}\r\n                    className='sticker-set-dialog-item-sticker'\r\n                    sticker={x}\r\n                    autoplay={true}\r\n                    blur={false}\r\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\r\n                    preview\r\n                    source={StickerSourceEnum.STICKER_SET}\r\n                    inViewportFunc={this.handleInViewport}\r\n                />\r\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <Dialog\r\n                className={classNames(\r\n                    'sticker-set-dialog',\r\n                    { 'sticker-set-dialog-scroll': scroll },\r\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\r\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\r\n                )}\r\n                open\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='sticker-set-dialog-title-text'\r\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\r\n                <DialogTitle\r\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\r\n                    disableTypography>\r\n                    <IconButton\r\n                        aria-label='Close'\r\n                        onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\r\n                        {title}\r\n                    </Typography>\r\n                    <ShareStickerSetButton />\r\n                </DialogTitle>\r\n                <DialogContent\r\n                    ref={this.contentRef}\r\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onScroll={this.handleScroll}>\r\n                    {items}\r\n                </DialogContent>\r\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\r\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\r\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\r\n                    </Button>\r\n                </DialogActions>\r\n                {<StickerPreview sticker={sticker} />}\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nStickerSetDialog.propTypes = {};\r\n\r\nexport default withTranslation()(StickerSetDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { closeChatSelect } from '../../Actions/Message';\r\nimport './SelectChatPlaceholder.css';\r\n\r\nclass SelectChatPlaceholder extends React.Component {\r\n\r\n    handleClick = () => {\r\n        closeChatSelect();\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n\r\n        return (\r\n            <div className='switch-inline-placeholder' onClick={this.handleClick}>\r\n                <div className='switch-inline-text'>{t('SelectChat') + '...'}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nSelectChatPlaceholder.propTypes = {};\r\n\r\nexport default withTranslation()(SelectChatPlaceholder);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\r\nimport Footer from './Footer';\r\nimport GroupCallTopPanel from '../Calls/GroupCallTopPanel';\r\nimport Header from './Header';\r\nimport HeaderPlayer from '../Player/HeaderPlayer';\r\nimport MessagesList from './MessagesList';\r\nimport PinnedMessages from './PinnedMessages';\r\nimport StickerSetDialog from '../Popup/StickerSetDialog';\r\nimport SelectChatPlaceholder from './SelectChatPlaceholder';\r\nimport { getSrc } from '../../Utils/File';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './DialogDetails.css';\r\n\r\nclass DialogDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatId: AppStore.getChatId(),\r\n            messageId: AppStore.getMessageId(),\r\n            selectedCount: 0,\r\n            wallpaper: null,\r\n            wallpaperSrc: null,\r\n            chatSelectOptions: null,\r\n            chatOpenOptions: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, selectedCount, wallpaper, chatSelectOptions, chatOpenOptions } = this.state;\r\n        if (nextState.chatId !== chatId) {\r\n            return true;\r\n        }\r\n        if (nextState.messageId !== messageId) {\r\n            return true;\r\n        }\r\n        if (nextState.selectedCount !== selectedCount) {\r\n            return true;\r\n        }\r\n        if (nextState.wallpaper !== wallpaper) {\r\n            return true;\r\n        }\r\n        if (nextState.chatSelectOptions !== chatSelectOptions) {\r\n            return true;\r\n        }\r\n        if (nextState.chatOpenOptions !== chatOpenOptions) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateChatSelect', this.onClientUpdateChatSelect);\r\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\r\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\r\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateChatSelect', this.onClientUpdateChatSelect);\r\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\r\n        ChatStore.off('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\r\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    onClientUpdateClearOpenChatOptions = update => {\r\n        this.setState({\r\n            chatOpenOptions: null\r\n        });\r\n    }\r\n\r\n    onClientUpdateChatSelect = update => {\r\n        const { options } = update;\r\n\r\n        this.setState({\r\n            chatSelectOptions: options\r\n        });\r\n    };\r\n\r\n    onClientUpdateDocumentBlob = update => {\r\n        const { wallpaper } = this.state;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { document: file } = document;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        if (this.thumbnailTime) {\r\n            if (this.thumbnailTime.wallpaper === wallpaper) {\r\n                const diff = new Date() - this.thumbnailTime.time;\r\n                if (diff < 250) {\r\n                    setTimeout(() => {\r\n                        this.forceUpdate();\r\n                    }, 250);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateDocumentThumbnailBlob = update => {\r\n        const { wallpaper } = this.state;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail } = document;\r\n        if (!thumbnail) return;\r\n\r\n        const { file } = thumbnail;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        this.thumbnailTime = {\r\n            wallpaper,\r\n            time: new Date()\r\n        };\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateChatBackground = update => {\r\n        const { wallpaper } = update;\r\n\r\n        this.thumbnailTime = {\r\n            wallpaper,\r\n            time: new Date()\r\n        };\r\n        this.setState({\r\n            wallpaper\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatDetailsVisibility = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatSelectOptions } = this.state;\r\n        const { nextChatId: chatId, nextMessageId: messageId, options: chatOpenOptions } = update;\r\n\r\n        this.setState({\r\n            chatId,\r\n            messageId,\r\n            chatOpenOptions,\r\n            chatSelectOptions: chatOpenOptions && chatOpenOptions.closeChatSelect ? null: chatSelectOptions\r\n        });\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        this.messagesList.scrollToBottom();\r\n    };\r\n\r\n    scrollToStart = () => {\r\n        this.messagesList.scrollToStart();\r\n    };\r\n\r\n    scrollToMessage = () => {\r\n        this.messagesList.scrollToMessage();\r\n    };\r\n\r\n    render() {\r\n        /*let groups = [];\r\n        if (this.props.history.length > 0){\r\n            let currentGroup = {\r\n                key: this.props.history[0].id,\r\n                date: this.props.history[0].date,\r\n                senderUserId: this.props.history[0].sender_user_id,\r\n                messages: [this.props.history[0]]\r\n            };\r\n\r\n            for (let i = 1; i < this.props.history.length; i++){\r\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\r\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\r\n                    && i % 20 !== 0){\r\n                    currentGroup.key += '_' + this.props.history[i].id;\r\n                    currentGroup.messages.push(this.props.history[i]);\r\n                }\r\n                else {\r\n                    groups.push(currentGroup);\r\n                    currentGroup = {\r\n                        key: this.props.history[i].id,\r\n                        date: this.props.history[i].date,\r\n                        senderUserId: this.props.history[i].sender_user_id,\r\n                        messages: [this.props.history[i]]\r\n                    };\r\n                }\r\n            }\r\n            groups.push(currentGroup);\r\n        }\r\n\r\n        this.groups = groups.map(x => {\r\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\r\n        });*/\r\n        const { chatId, messageId, chatOpenOptions, wallpaper, chatSelectOptions } = this.state;\r\n\r\n        let style = null;\r\n        let src = null;\r\n        if (wallpaper) {\r\n            const { document } = wallpaper;\r\n            if (document) {\r\n                const { thumbnail, document: file } = document;\r\n                if (file) {\r\n                    src = getSrc(file);\r\n                }\r\n\r\n                if (!src && thumbnail) {\r\n                    src = getSrc(thumbnail.file);\r\n                }\r\n            }\r\n\r\n            style = {\r\n                backgroundImage: src ? `url(${src})` : null\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='dialog-details' style={style}>\r\n                <div className='dialog-background'/>\r\n                <div className='dialog-details-wrapper'>\r\n                    <GroupCallTopPanel/>\r\n                    <HeaderPlayer />\r\n                    <Header chatId={chatId} />\r\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} options={chatOpenOptions} />\r\n                    <Footer chatId={chatId} options={chatOpenOptions}/>\r\n                </div>\r\n                {chatSelectOptions && <SelectChatPlaceholder/>}\r\n                <PinnedMessages chatId={chatId}/>\r\n                <StickerSetDialog />\r\n                <ChatInfoDialog />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogDetails;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ChatTile from './ChatTile';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './ForwardTargetChat.css';\r\n\r\nclass ForwardTargetChat extends React.Component {\r\n    render() {\r\n        const { chatId, selected, onSelect, t } = this.props;\r\n\r\n        const shortTitle = getChatShortTitle(chatId, true, t);\r\n\r\n        return (\r\n            <div\r\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\r\n                onClick={onSelect}>\r\n                <div className='forward-target-chat-tile'>\r\n                    <div className='forward-target-chat-tile-wrapper'>\r\n                        <ChatTile chatId={chatId} />\r\n                    </div>\r\n                    {selected && <div className='forward-target-chat-selection' />}\r\n                    <div\r\n                        className={classNames(\r\n                            'forward-target-chat-mark',\r\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\r\n                        )}\r\n                    />\r\n                    <div className='forward-target-chat-mark-icon' />\r\n                </div>\r\n                <div className='forward-target-chat-title'>{shortTitle}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nForwardTargetChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    selected: PropTypes.bool,\r\n    onSelect: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(ForwardTargetChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { withSnackbar } from 'notistack';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\r\nimport { copy } from '../../Utils/Text';\r\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\r\nimport { clearSelection, forward } from '../../Actions/Client';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ForwardDialog.css';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\n\r\nclass ForwardDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatIds: [],\r\n            savedMessages: null\r\n        };\r\n\r\n        this.searchRef = React.createRef();\r\n        this.messageRef = React.createRef();\r\n\r\n        this.targetChats = new Map();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        this.setSearchFocus();\r\n    }\r\n\r\n    loadContent = async () => {\r\n        this.getPublicMessageLink();\r\n\r\n        const promises = [];\r\n        const getChatsPromise = TdLibController.send({\r\n            '@type': 'getChats',\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: 100\r\n        });\r\n        promises.push(getChatsPromise);\r\n\r\n        const savedMessagesPromise = TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: true\r\n        });\r\n        promises.push(savedMessagesPromise);\r\n\r\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\r\n\r\n        this.setState({\r\n            chatIds: chats.chat_ids,\r\n            savedMessages: savedMessages\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chats.chat_ids);\r\n    };\r\n\r\n    getPublicMessageLink = async () => {\r\n        const { chatId, messageIds } = this.props;\r\n        if (!chatId) return;\r\n        if (!messageIds) return;\r\n        if (messageIds.length > 1) return;\r\n        if (!isSupergroup(chatId)) return;\r\n        if (!getChatUsername(chatId)) return;\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getMessageLink',\r\n            chat_id: chatId,\r\n            message_id: messageIds[0],\r\n            for_album: false,\r\n            for_comment: false\r\n        });\r\n\r\n        this.setState({\r\n            publicMessageLink: result\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        forward(null);\r\n    };\r\n\r\n    handleCopyLink = () => {\r\n        const { t } = this.props;\r\n        const { publicMessageLink } = this.state;\r\n\r\n        if (!publicMessageLink) return;\r\n        if (!publicMessageLink.link) return;\r\n\r\n        copy(publicMessageLink.link);\r\n\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    getForwardPhotoSize = (chatId, messageIds) => {\r\n        if (messageIds.length !== 1) return null;\r\n\r\n        const message = MessageStore.get(chatId, messageIds[0]);\r\n        if (!message) return null;\r\n\r\n        const { can_be_forwarded, content } = message;\r\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\r\n            const { photo } = content;\r\n            if (!photo) return null;\r\n\r\n            const { sizes } = photo;\r\n            if (sizes && sizes.length) {\r\n                return sizes[sizes.length - 1];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    handleSend = () => {\r\n        this.handleClose();\r\n        clearSelection();\r\n\r\n        const { chatId, messageIds, inputMessageContent } = this.props;\r\n        if (!chatId && !messageIds && !inputMessageContent) return;\r\n\r\n        const text = this.getInnerText(this.messageRef.current);\r\n\r\n        messageIds.sort();\r\n\r\n        this.targetChats.forEach(async targetChatId => {\r\n            if (inputMessageContent) {\r\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n                if (text) {\r\n                    if ('caption' in inputMessageContent) {\r\n                        inputMessageContent.caption = {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        };\r\n                    } else {\r\n                        TdLibController.send({\r\n                            '@type': 'sendMessage',\r\n                            chat_id: targetChatId,\r\n                            reply_to_message_id: 0,\r\n                            disable_notifications: false,\r\n                            from_background: false,\r\n                            reply_markup: null,\r\n                            input_message_content: {\r\n                                '@type': 'inputMessageText',\r\n                                text: {\r\n                                    '@type': 'formattedText',\r\n                                    text,\r\n                                    entities: null\r\n                                },\r\n                                disable_web_page_preview: false,\r\n                                clear_draft: false\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: inputMessageContent\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            const size = this.getForwardPhotoSize(chatId, messageIds);\r\n            if (size) {\r\n                const { width, height, photo } = size;\r\n\r\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: {\r\n                        '@type': 'inputMessagePhoto',\r\n                        photo: {\r\n                            '@type': 'inputFileId',\r\n                            id: photo.id\r\n                        },\r\n                        thumbnail: null,\r\n                        added_sticker_file_ids: [],\r\n                        width: width,\r\n                        height: height,\r\n                        caption: {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        },\r\n                        ttl: 0\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            if (text) {\r\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: {\r\n                        '@type': 'inputMessageText',\r\n                        text: {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        },\r\n                        disable_web_page_preview: false,\r\n                        clear_draft: false\r\n                    }\r\n                });\r\n            }\r\n\r\n            TdLibController.send({\r\n                '@type': 'forwardMessages',\r\n                chat_id: targetChatId,\r\n                from_chat_id: chatId,\r\n                message_ids: messageIds,\r\n                disable_notifications: false,\r\n                from_background: false,\r\n                as_album: false\r\n            });\r\n        });\r\n    };\r\n\r\n    handleChangeSelection = chatId => {\r\n        if (this.targetChats.has(chatId)) {\r\n            this.targetChats.delete(chatId);\r\n        } else {\r\n            this.targetChats.set(chatId, chatId);\r\n        }\r\n\r\n        // console.log(this.targetChats);\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    getInnerText = element => {\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        return innerText;\r\n    };\r\n\r\n    handleSearchKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    handleSearchKeyUp = async () => {\r\n        const { chatIds, savedMessages } = this.state;\r\n\r\n        const element = this.searchRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n\r\n        const innerText = this.getInnerText(element).trim();\r\n        if (!innerText) {\r\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\r\n            return;\r\n        }\r\n\r\n        const latinText = getLatinInput(innerText);\r\n        const cyrillicText = getCyrillicInput(innerText);\r\n\r\n        const chatsSource = savedMessages\r\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\r\n            : chatIds;\r\n\r\n        const searchResults = chatsSource.filter(\r\n            x =>\r\n                this.hasSearchText(x, innerText) ||\r\n                (latinText && this.hasSearchText(x, latinText)) ||\r\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\r\n        );\r\n\r\n        this.setState({ searchText: innerText, searchResults });\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatsOnServer',\r\n            query: innerText,\r\n            limit: 100\r\n        });\r\n\r\n        if (this.state.searchText !== innerText) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            globalSearchResults: result.chat_ids\r\n        });\r\n    };\r\n\r\n    handleSearchPaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleMessageKeyUp = () => {\r\n        const element = this.messageRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    };\r\n\r\n    handleMessagePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    hasSearchText = (chatId, searchText) => {\r\n        const { t } = this.props;\r\n        const { savedMessages } = this.state;\r\n\r\n        if (savedMessages && chatId === savedMessages.id) {\r\n            const title = getChatTitle(chatId, true, t) || '';\r\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        const title1 = getChatTitle(chatId, false, t) || '';\r\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n            return true;\r\n        }\r\n\r\n        const username = getChatUsername(chatId) || '';\r\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setSearchFocus = () => {\r\n        setTimeout(() => {\r\n            if (this.searchRef.current) {\r\n                const element = this.searchRef.current;\r\n\r\n                element.focus();\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            chatIds,\r\n            searchText,\r\n            searchResults,\r\n            globalSearchResults,\r\n            savedMessages,\r\n            publicMessageLink\r\n        } = this.state;\r\n\r\n        const chatsSource = savedMessages\r\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\r\n            : chatIds;\r\n\r\n        const chats = chatsSource.map(x => (\r\n            <ForwardTargetChat\r\n                key={x}\r\n                chatId={x}\r\n                selected={this.targetChats.has(x)}\r\n                onSelect={() => this.handleChangeSelection(x)}\r\n            />\r\n        ));\r\n\r\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\r\n        const filteredResults = (globalSearchResults || []).filter(\r\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\r\n        );\r\n\r\n        const foundChats = (searchResults || [])\r\n            .concat(filteredResults)\r\n            .map(x => (\r\n                <ForwardTargetChat\r\n                    key={x}\r\n                    chatId={x}\r\n                    selected={this.targetChats.has(x)}\r\n                    onSelect={() => this.handleChangeSelection(x)}\r\n                />\r\n            ));\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='forward-dialog-title'\r\n                aria-describedby='forward-dialog-description'\r\n                className='forward-dialog'>\r\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\r\n                <div\r\n                    ref={this.searchRef}\r\n                    id='forward-dialog-search'\r\n                    className='scrollbars-hidden'\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    placeholder={t('Search')}\r\n                    onKeyDown={this.handleSearchKeyDown}\r\n                    onKeyUp={this.handleSearchKeyUp}\r\n                    onPaste={this.handleSearchPaste}\r\n                />\r\n                <div className='forward-dialog-content'>\r\n                    <div className='forward-dialog-list'>{chats}</div>\r\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\r\n                </div>\r\n                {this.targetChats.size > 0 && (\r\n                    <div\r\n                        ref={this.messageRef}\r\n                        id='forward-dialog-message'\r\n                        contentEditable\r\n                        suppressContentEditableWarning\r\n                        placeholder={t('ShareComment')}\r\n                        onKeyUp={this.handleMessageKeyUp}\r\n                        onPaste={this.handleMessagePaste}\r\n                    />\r\n                )}\r\n                <DialogActions>\r\n                    <Button onClick={this.handleClose} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    {this.targetChats.size > 0 && (\r\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\r\n                            {t('Send')}\r\n                        </Button>\r\n                    )}\r\n                    {!this.targetChats.size && publicMessageLink && (\r\n                        <Button onClick={this.handleCopyLink} color='primary'>\r\n                            {t('CopyLink')}\r\n                        </Button>\r\n                    )}\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nForwardDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageIds: PropTypes.array,\r\n    inputMessageContent: PropTypes.object\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(ForwardDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BlobDrawable, {\r\n    AMPLITUDE_SPEED,\r\n    FORM_BIG_MAX,\r\n    FORM_SMALL_MAX, LIGHT_GRADIENT_SIZE,\r\n    SCALE_BIG,\r\n    SCALE_BIG_MIN,\r\n    SCALE_SMALL,\r\n    SCALE_SMALL_MIN\r\n} from './BlobDrawable';\r\nimport {\r\n    MUTE_BUTTON_STATE_CONNECTING,\r\n    MUTE_BUTTON_STATE_MUTE,\r\n    MUTE_BUTTON_STATE_MUTED_BY_ADMIN,\r\n    MUTE_BUTTON_STATE_UNMUTE\r\n} from './TopBar';\r\nimport { stopPropagation } from '../../Utils/Message';\r\n\r\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/OvershootInterpolator.java\r\nclass OvershootInterpolator {\r\n    constructor(tension) {\r\n        this.mTension = tension;\r\n    }\r\n\r\n    getInterpolation(t) {\r\n        // _o(t) = t * t * ((tension + 1) * t + tension)\r\n        // o(t) = _o(t - 1) + 1\r\n        t -= 1.0;\r\n        return t * t * ((this.mTension + 1) * t + this.mTension) + 1.0;\r\n    }\r\n}\r\n\r\n// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/DecelerateInterpolator.java\r\nclass DecelerateInterpolator {\r\n    constructor(factor) {\r\n        this.mFactor = factor || 1.0;\r\n    }\r\n\r\n    getInterpolation(input) {\r\n        let result;\r\n        if (this.mFactor === 1.0) {\r\n            result = 1.0 - (1.0 - input) * (1.0 - input);\r\n        } else {\r\n            result = 1.0 - Math.pow((1.0 - input), 2 * this.mFactor);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/AccelerateInterpolator.java\r\nclass AccelerateInterpolator {\r\n    constructor(factor) {\r\n        this.mFactor = factor || 1.0;\r\n        this.mDoubleFactor = 2 * this.mFactor;\r\n    }\r\n\r\n    getInterpolation(input) {\r\n        if (this.mFactor === 1.0) {\r\n            return input * input;\r\n        }\r\n\r\n        return Math.pow(input, this.mDoubleFactor);\r\n    }\r\n}\r\n\r\nclass WeavingState {\r\n    constructor(stateId) {\r\n        this.stateId = stateId;\r\n        this.shader = (ctx, left, top, right, bottom) => { };\r\n        this.createGradient(stateId);\r\n    }\r\n\r\n    createGradient(stateId) {\r\n        this.shader = (ctx, left, top, right, bottom) => {\r\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\r\n        };\r\n    }\r\n\r\n    update(top, left, size, dt) {\r\n        // TODO: move gradient here\r\n    }\r\n\r\n    // Android colors\r\n    static getGradientFromType(ctx, type, left, top, right, bottom) {\r\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\r\n            const gradient = ctx.createLinearGradient(0, 100, 100, 0);\r\n\r\n            gradient.addColorStop(0, '#57A4FE');\r\n            gradient.addColorStop(.3, '#766EE9');\r\n            gradient.addColorStop(1, '#F05459');\r\n\r\n            return gradient;\r\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\r\n            const gradient=ctx.createRadialGradient(0,50,0,0,50,200);\r\n\r\n            gradient.addColorStop(0, '#77E55C');\r\n            gradient.addColorStop(1, '#56C7FE');\r\n\r\n            return gradient;\r\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\r\n            const gradient = ctx.createRadialGradient(0,50,0,0,50,200);\r\n\r\n            gradient.addColorStop(0, '#66D4FB');\r\n            gradient.addColorStop(1, '#539EF8');\r\n\r\n            return gradient;\r\n        } else {\r\n            const gradient = ctx.createLinearGradient(0, 400, 400, 0);\r\n\r\n            gradient.addColorStop(0, '#2B333E');\r\n            gradient.addColorStop(1, '#2B333E');\r\n\r\n            return gradient;\r\n        }\r\n    }\r\n}\r\n\r\nclass RadialProgressView {\r\n    constructor() {\r\n        this.decelerateInterpolator = new DecelerateInterpolator();\r\n        this.accelerateInterpolator = new AccelerateInterpolator();\r\n\r\n        this.lineCap = 'round';\r\n        this.lineWidth = 3;\r\n        this.progressColor = '#1C93E3';\r\n        this.updateProgressPaint();\r\n\r\n        this.lastUpdateTime = 0;\r\n        this.radOffset = 0;\r\n        this.currentCircleLength = 0;\r\n        this.risingCircleLength = false;\r\n        this.currentProgressTime = 0;\r\n        this.useSelfAlpha = false;\r\n        this.drawingCircleLength = 0;\r\n\r\n        this.rotationTime = 2000;\r\n        this.risingTime = 500;\r\n        this.size = 0;\r\n\r\n        this.currentProgress = 0;\r\n        this.progressAnimationStart = 0;\r\n        this.progressTime = 0;\r\n        this.animatedProgress = 0;\r\n        this.circle = false;\r\n        this.circleProgress = 0;\r\n        this.noProgress = true;\r\n    }\r\n\r\n    setUseSelfAlpha = value => {\r\n        this.useSelfAlpha = value;\r\n    };\r\n\r\n    setAlpha = alpha => {\r\n        console.log('[rpv] setAlpha', alpha);\r\n    };\r\n\r\n    setNoProgress = value => {\r\n        this.noProgress = value;\r\n    };\r\n\r\n    setProgress = value => {\r\n        this.currentProgress = value;\r\n        if (this.animatedProgress > value) {\r\n            this.animatedProgress = value;\r\n        }\r\n\r\n        this.progressAnimationStart = this.animatedProgress;\r\n        this.progressTime = 0;\r\n    };\r\n\r\n    updateAnimation = () => {\r\n        const newTime = new Date();\r\n        let dt = newTime - this.lastUpdateTime;\r\n        if (dt > 17) {\r\n            dt = 17;\r\n        }\r\n        this.lastUpdateTime = newTime;\r\n\r\n        this.radOffset += 360 * dt / this.rotationTime;\r\n        let count = Math.trunc(this.radOffset / 360);\r\n        this.radOffset -= count * 360;\r\n\r\n        if (this.circle && this.circleProgress !== 1.0) {\r\n            this.circleProgress += 16 / 220;\r\n            if (this.circleProgress > 1.0) {\r\n                this.circleProgress = 1.0;\r\n            }\r\n        } else if (!this.circle && this.circleProgress !== 0.0) {\r\n            this.circleProgress -= 16 / 400;\r\n            if (this.circleProgress < 0) {\r\n                this.circleProgress = 0;\r\n            }\r\n        }\r\n\r\n        if (this.noProgress) {\r\n            if (this.circleProgress === 0) {\r\n                this.currentProgressTime += dt;\r\n                if (this.currentProgressTime >= this.risingTime) {\r\n                    this.currentProgressTime = this.risingTime;\r\n                }\r\n                if (this.risingCircleLength) {\r\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\r\n                } else {\r\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\r\n                }\r\n\r\n                if (this.currentProgressTime === this.risingTime) {\r\n                    if (this.risingCircleLength) {\r\n                        this.radOffset += 270;\r\n                        this.currentCircleLength = -266;\r\n                    }\r\n\r\n                    this.risingCircleLength = !this.risingCircleLength;\r\n                    this.currentProgressTime = 0;\r\n                }\r\n            } else {\r\n                if (this.risingCircleLength) {\r\n                    const old = this.currentCircleLength;\r\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\r\n                    this.currentCircleLength += 360 * this.circleProgress;\r\n                    const dx = old - this.currentCircleLength;\r\n                    if (dx > 0) {\r\n                        this.radOffset += old - this.currentCircleLength;\r\n                    }\r\n                } else {\r\n                    const old = this.currentCircleLength;\r\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\r\n                    this.currentCircleLength -= 364 * this.circleProgress;\r\n                    const dx = old - this.currentCircleLength;\r\n                    if (dx > 0) {\r\n                        this.radOffset += old - this.currentCircleLength;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            let progressDiff = this.currentProgress - this.progressAnimationStart;\r\n            if (progressDiff > 0) {\r\n                progressDiff += dt;\r\n                if (this.progressTime >= 200) {\r\n                    this.animatedProgress = this.progressAnimationStart = this.currentProgress;\r\n                    this.progressTime = 0;\r\n                } else {\r\n                    this.animatedProgress = this.progressAnimationStart + progressDiff * this.decelerateInterpolator.getInterpolation(this.progressTime / 200);\r\n                }\r\n            }\r\n            this.currentCircleLength = Math.max(4, 360 * this.animatedProgress);\r\n        }\r\n    };\r\n\r\n    setSize = size => {\r\n        this.size = size;\r\n    };\r\n\r\n    setStrokeWidth = value => {\r\n        this.lineWidth = value;\r\n        this.updateProgressPaint();\r\n    };\r\n\r\n    setProgressColor = color => {\r\n        this.progressColor = color;\r\n        this.updateProgressPaint();\r\n    };\r\n\r\n    updateProgressPaint() {\r\n        this.progressPaint = ctx => {\r\n            if (this.lineCap) {\r\n                ctx.lineCap = this.lineCap;\r\n            }\r\n            if (this.lineWidth) {\r\n                ctx.lineWidth = this.lineWidth;\r\n            }\r\n            if (this.progressColor) {\r\n                ctx.strokeStyle = this.progressColor;\r\n            }\r\n        };\r\n    }\r\n\r\n    toCircle = (toCircle, animated) => {\r\n        this.circle = toCircle;\r\n        if (!animated) {\r\n            this.circleProgress = this.circle ? 1.0 : 0.0;\r\n        }\r\n    }\r\n\r\n    draw = (canvas, cx, cy, scale = 1) => {\r\n        this.circleRect = { x0: cx - this.size / 2, y0: cy - this.size / 2, x1: cx + this.size / 2, y1: cy + this.size / 2 };\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            ctx.save();\r\n            ctx.beginPath();\r\n            ctx.translate(cx, cy);\r\n            ctx.scale(scale, scale);\r\n            ctx.beginPath();\r\n            if (!this.risingCircleLength) {\r\n                if ((this.radOffset + this.currentCircleLength) > this.radOffset) {\r\n                    this.currentCircleLength = 0;\r\n                }\r\n            }\r\n\r\n            const radStart = this.radOffset * Math.PI / 180;\r\n            this.drawingCircleLength = this.currentCircleLength;\r\n            const radLength = this.drawingCircleLength * Math.PI / 180;\r\n\r\n\r\n            ctx.arc(0, 0, this.size / 2, radStart, radStart + radLength, !this.risingCircleLength);\r\n            this.progressPaint(ctx);\r\n            ctx.stroke();\r\n            ctx.restore();\r\n\r\n            this.updateAnimation();\r\n        }\r\n    }\r\n\r\n    isCircle = () => {\r\n        return Math.abs(this.drawingCircleLength) >= 360;\r\n    }\r\n}\r\n\r\nclass Button extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.focused = true;\r\n        this.radialPaint = ctx => { };\r\n        this.paint = ctx => { };\r\n        this.paintTmp = ctx => { };\r\n        this.lastUpdateTime = new Date();\r\n        this.amplitude = 0.0;\r\n\r\n        this.states = [\r\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\r\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\r\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\r\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\r\n        ];\r\n        this.switchProgress = 1.0;\r\n        this.muteButtonState = MUTE_BUTTON_STATE_MUTE;\r\n        this.prevState = null;\r\n        this.currentState = this.states[this.muteButtonState];\r\n        this.progressToState = 1.0;\r\n\r\n        this.showLightingProgress = 1.0;\r\n        this.showWavesProgress = 1.0;\r\n        this.overshootInterpolator = new OvershootInterpolator(1.5);\r\n        this.colorsTmp = new Array(3);\r\n\r\n        this.scale = window.devicePixelRatio;\r\n        this.left = 0 * this.scale;\r\n        this.top = 0 * this.scale;\r\n        this.right = 380 * this.scale;\r\n        this.bottom = (220 + 28) * this.scale;\r\n        this.cx = 190 * this.scale;\r\n        this.cy = (110 + 28) * this.scale;\r\n\r\n        this.buttonDefaultRadius = 57;\r\n        this.buttonRadius = 52;\r\n        this.strokeWidth = 4;\r\n        this.invalidateColors = true;\r\n        this.radialProgressView = new RadialProgressView();\r\n        this.radialProgressView.setSize(this.buttonRadius * 2 - this.strokeWidth);\r\n        this.radialProgressView.setStrokeWidth(this.strokeWidth);\r\n        this.radialProgressView.setProgressColor('#28BAFF');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        window.addEventListener('blur', this.handleBlur);\r\n        window.addEventListener('focus', this.handleFocus);\r\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\r\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\r\n\r\n\r\n        this.canvas = document.getElementById('button-canvas');\r\n        this.tinyWaveDrawable = new BlobDrawable(9);\r\n        this.bigWaveDrawable = new BlobDrawable(12);\r\n\r\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.tinyWaveDrawable.maxRadius = Math.trunc(72 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.tinyWaveDrawable.generateInitBlob();\r\n\r\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.bigWaveDrawable.maxRadius = Math.trunc(75 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.bigWaveDrawable.generateInitBlob();\r\n\r\n        const color = '#66D4FB';\r\n        this.radialGradient = ctx => {\r\n            const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 160);\r\n            gradient.addColorStop(0, color + '32');\r\n            gradient.addColorStop(1, color + '00');\r\n\r\n            ctx.fillStyle = gradient;\r\n        };\r\n        this.radialPaint = this.radialGradient;\r\n\r\n        this.setAmplitude(this.amplitude);\r\n\r\n        // console.log('[button] componentDidMount draw');\r\n        this.draw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        window.removeEventListener('blur', this.handleBlur);\r\n        window.removeEventListener('focus', this.handleFocus);\r\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\r\n    }\r\n\r\n    handleFocus = () => {\r\n        this.focused = true;\r\n        this.invokeDraw();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        this.focused = false;\r\n    }\r\n\r\n    invokeDraw = () => {\r\n        if (this.raf) return;\r\n\r\n        this.draw();\r\n    }\r\n\r\n    handleDevicePixelRatioChanged = e => {\r\n        this.scale = window.devicePixelRatio;\r\n        this.left = 0 * this.scale;\r\n        this.top = 0 * this.scale;\r\n        this.right = 380 * this.scale;\r\n        this.bottom = (220 + 28) * this.scale;\r\n        this.cx = 190 * this.scale;\r\n        this.cy = (110 + 28) * this.scale;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    fillColors(stateId, colorsToSet) {\r\n        if (stateId === MUTE_BUTTON_STATE_UNMUTE) {\r\n            colorsToSet[0] = '#66D4FB';\r\n            colorsToSet[1] = '';\r\n            colorsToSet[2] = '';\r\n        } else if (stateId === MUTE_BUTTON_STATE_MUTE) {\r\n            colorsToSet[0] = '#7DDCAA';\r\n            colorsToSet[1] = '';\r\n            colorsToSet[2] = '';\r\n        } else if (stateId === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\r\n            colorsToSet[0] = '#766EE9';\r\n            colorsToSet[1] = '';\r\n            colorsToSet[2] = '';\r\n        } else {\r\n            colorsToSet[0] = '#1C2229';\r\n            colorsToSet[1] = '';\r\n            colorsToSet[2] = '';\r\n        }\r\n    }\r\n\r\n    strToHex(n) {\r\n        let s = n.toString(16);\r\n        if (s.length === 1) {\r\n            s = '0' + s;\r\n        }\r\n        return s;\r\n    }\r\n\r\n    blendARGB(color1, color2, ratio) {\r\n        if (color1.length <= 7) {\r\n            color1 += 'FF';\r\n        }\r\n        if (color2.length <= 7) {\r\n            color2 += 'FF';\r\n        }\r\n        const c1 = {\r\n            r: parseInt(color1.substr(1, 2), 16),\r\n            g: parseInt(color1.substr(3, 2), 16),\r\n            b: parseInt(color1.substr(5, 2), 16),\r\n            a: parseInt(color1.substr(7, 2), 16),\r\n        };\r\n        const c2 = {\r\n            r: parseInt(color2.substr(1, 2), 16),\r\n            g: parseInt(color2.substr(3, 2), 16),\r\n            b: parseInt(color2.substr(5, 2), 16),\r\n            a: parseInt(color2.substr(7, 2), 16),\r\n        };\r\n\r\n        const inverseRatio = 1 - ratio;\r\n        const a = Math.trunc(c1.a * inverseRatio + c2.a * ratio) % 256;\r\n        const r = Math.trunc(c1.r * inverseRatio + c2.r * ratio) % 256;\r\n        const g = Math.trunc(c1.g * inverseRatio + c2.g * ratio) % 256;\r\n        const b = Math.trunc(c1.b * inverseRatio + c2.b * ratio) % 256;\r\n\r\n        return `#${this.strToHex(r)}${this.strToHex(g)}${this.strToHex(b)}`;\r\n    }\r\n\r\n    draw = (force = false) => {\r\n        this.raf = null;\r\n        if (!this.mounted) {\r\n            return;\r\n        }\r\n        if (!this.focused && this.switchProgress >= 1.0) {\r\n            return;\r\n        }\r\n        // console.log('[button] draw', [this.focused, this.mounted]);\r\n        const { currentState, prevState, left, top, right, bottom } = this;\r\n\r\n        const newTime = new Date();\r\n        let dt = (newTime - this.lastUpdateTime);\r\n        if (dt > 20) {\r\n            dt = 17;\r\n        }\r\n\r\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.tinyWaveDrawable.maxRadius = Math.trunc((62 + 20 * FORM_SMALL_MAX) / this.buttonDefaultRadius * this.buttonRadius);\r\n\r\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.bigWaveDrawable.maxRadius = Math.trunc((65 + 20 * FORM_BIG_MAX) / this.buttonDefaultRadius * this.buttonRadius);\r\n\r\n        if (this.animateToAmplitude !== this.amplitude) {\r\n            this.amplitude = this.amplitude + this.animateAmplitudeDiff * dt;\r\n            if (this.animateAmplitudeDiff > 0) {\r\n                if (this.amplitude > this.animateToAmplitude) {\r\n                    this.amplitude = this.animateToAmplitude;\r\n                }\r\n            } else {\r\n                if (this.amplitude < this.animateToAmplitude) {\r\n                    this.amplitude = this.animateToAmplitude;\r\n                }\r\n            }\r\n        }\r\n\r\n        let canSwitchProgress = true;\r\n        if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n            this.radialProgressView.toCircle(true, true);\r\n            if (!this.radialProgressView.isCircle()) {\r\n                canSwitchProgress = false;\r\n            }\r\n        } else if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n            this.radialProgressView.toCircle(true, false);\r\n        }\r\n\r\n        if (canSwitchProgress) {\r\n            if (this.switchProgress !== 1) {\r\n                if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                    this.switchProgress += dt / 100;\r\n                } else {\r\n                    this.switchProgress += dt / 180;\r\n                }\r\n\r\n                if (this.switchProgress >= 1.0) {\r\n                    this.switchProgress = 1.0;\r\n                    this.prevState = null;\r\n                    if (currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                        this.radialProgressView.toCircle(false, true);\r\n                    }\r\n                }\r\n                this.invalidateColors = true;\r\n            }\r\n\r\n            if (this.invalidateColors && currentState) {\r\n                this.invalidateColors = false;\r\n                let lightingColor;\r\n                if (prevState) {\r\n                    this.fillColors(prevState.stateId, this.colorsTmp);\r\n                    const oldLight = this.colorsTmp[0];\r\n                    this.fillColors(currentState.stateId, this.colorsTmp);\r\n                    const newLight = this.colorsTmp[0];\r\n                    lightingColor = this.blendARGB(oldLight, newLight, this.switchProgress);\r\n                } else {\r\n                    this.fillColors(currentState.stateId, this.colorsTmp);\r\n                    lightingColor = this.colorsTmp[0];\r\n                }\r\n                if (this.currentLightColor !== lightingColor) {\r\n                    this.radialGradient = ctx => {\r\n                        const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 100);\r\n\r\n                        gradient.addColorStop(0, lightingColor + '3C');\r\n                        gradient.addColorStop(1, lightingColor + '00');\r\n\r\n                        ctx.fillStyle = gradient;\r\n                    };\r\n                    this.currentLightColor = lightingColor;\r\n                }\r\n            }\r\n\r\n            let showWaves = false;\r\n            let showLighting = false;\r\n            if (currentState) {\r\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\r\n                showLighting = currentState.stateId !== MUTE_BUTTON_STATE_CONNECTING;\r\n            }\r\n\r\n            if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                this.showWavesProgress -= dt / 180;\r\n                if (this.showWavesProgress < 0) {\r\n                    this.showWavesProgress = 0;\r\n                }\r\n            } else {\r\n                if (showWaves && this.showWavesProgress !== 1) {\r\n                    this.showWavesProgress += dt / 350;\r\n                    if (this.showWavesProgress > 1) {\r\n                        this.showWavesProgress = 1;\r\n                    }\r\n                } else if (!showWaves && this.showWavesProgress !== 0) {\r\n                    this.showWavesProgress -= dt / 350;\r\n                    if (this.showWavesProgress < 0) {\r\n                        this.showWavesProgress = 0;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (showLighting && this.showLightingProgress !== 1) {\r\n                this.showLightingProgress += dt / 350;\r\n                if (this.showLightingProgress > 1) {\r\n                    this.showLightingProgress = 1;\r\n                }\r\n            } else if (!showLighting && this.showLightingProgress !== 0) {\r\n                this.showLightingProgress -= dt / 350;\r\n                if (this.showLightingProgress < 0) {\r\n                    this.showLightingProgress = 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        let showWavesProgressInterpolated = this.overshootInterpolator.getInterpolation(this.showWavesProgress);\r\n        showWavesProgressInterpolated = 0.4 + 0.6 * showWavesProgressInterpolated;\r\n\r\n        this.bigWaveDrawable.update(this.amplitude, 1.0);\r\n        this.tinyWaveDrawable.update(this.amplitude, 1.0);\r\n\r\n        const ctx = this.canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        ctx.resetTransform();\r\n\r\n        const cx = this.cx;\r\n        const cy = this.cy;\r\n\r\n        if (prevState && currentState && (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING || prevState.stateId === MUTE_BUTTON_STATE_CONNECTING)) {\r\n            let progress;\r\n            if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                progress = this.switchProgress;\r\n                this.paint = prevState.shader;\r\n            } else {\r\n                progress = 1.0 - this.switchProgress;\r\n                this.paint = currentState.shader;\r\n            }\r\n\r\n            this.paintTmp = ctx => {\r\n                ctx.fillStyle = '#2B333E';\r\n            }\r\n\r\n            let paint = ctx => {\r\n                this.paint(ctx, left, top, right, bottom);\r\n            };\r\n\r\n            ctx.globalAlpha = 1.0;\r\n            let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\r\n            const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\r\n            this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\r\n\r\n            ctx.globalAlpha = 0.3;\r\n            // big wave\r\n            ctx.save();\r\n            scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\r\n            ctx.translate(cx, cy);\r\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\r\n            this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\r\n            ctx.restore();\r\n\r\n            // small wave\r\n            ctx.save();\r\n            scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\r\n            ctx.translate(cx, cy);\r\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\r\n            this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\r\n            ctx.restore();\r\n\r\n            ctx.globalAlpha = 1.0;\r\n            if (canSwitchProgress) {\r\n                this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\r\n                paint = ctx => {\r\n                    ctx.fillStyle = '#28BAFF';\r\n                };\r\n                if (progress !== 0) {\r\n                    ctx.globalAlpha = progress;\r\n                    this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\r\n                }\r\n            }\r\n            ctx.globalAlpha = 1.0;\r\n            this.drawCircle(ctx, cx, cy, 1,Math.trunc(this.buttonRadius - 0.5 * this.strokeWidth) * progress * this.scale, this.paintTmp);\r\n            if  (!canSwitchProgress) {\r\n                this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\r\n            }\r\n            ctx.restore();\r\n        } else {\r\n            for (let i = 0; i < 2; i++) {\r\n                let alpha = 0;\r\n                let buttonRadius = this.buttonRadius;\r\n                let paint = null;\r\n                if (i === 0 && prevState) {\r\n                    paint = prevState.shader;\r\n                    alpha = 1 - this.switchProgress;\r\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                        buttonRadius -= alpha * 2;\r\n                    }\r\n                } else if (i === 1) {\r\n                    paint = currentState.shader;\r\n                    alpha = this.switchProgress;\r\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                        buttonRadius -= alpha * 2;\r\n                    }\r\n                } else {\r\n                    continue;\r\n                }\r\n\r\n                if (!paint) {\r\n                    paint = ctx => {\r\n                        ctx.fillStyle = '#2B333E';\r\n                    };\r\n                }\r\n\r\n                ctx.globalAlpha = 1.0;\r\n                let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\r\n                if (i === 1) {\r\n                    const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\r\n                    this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\r\n                }\r\n\r\n                ctx.globalAlpha = 0.3 * alpha;\r\n                // big wave\r\n                ctx.save();\r\n                scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\r\n                ctx.translate(cx, cy);\r\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\r\n                this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\r\n                ctx.restore();\r\n\r\n                // small wave\r\n                ctx.save();\r\n                scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\r\n                ctx.translate(cx, cy);\r\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\r\n                this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\r\n                ctx.restore();\r\n            }\r\n\r\n            // button\r\n            for (let i = 0; i < 2; i++) {\r\n                let alpha = 0;\r\n                let buttonRadius = this.buttonRadius;\r\n                let paint = null;\r\n                if (i === 0 && prevState) {\r\n                    paint = prevState.shader;\r\n                    alpha = 1 - this.switchProgress;\r\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                        buttonRadius -= alpha * 2;\r\n                    }\r\n                } else if (i === 1) {\r\n                    paint = currentState.shader;\r\n                    alpha = this.switchProgress;\r\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                        buttonRadius -= alpha * 2;\r\n                    }\r\n                } else {\r\n                    continue;\r\n                }\r\n\r\n                if (!paint) {\r\n                    paint = ctx => {\r\n                        ctx.fillStyle = '#2B333E';\r\n                    };\r\n                }\r\n\r\n                if (i === 0) {\r\n                    ctx.globalAlpha = 1.0;\r\n                } else {\r\n                    ctx.globalAlpha = alpha;\r\n                }\r\n                this.drawCircle(ctx, cx, cy, this.scale, buttonRadius, paint);\r\n\r\n                if (i === 1 && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                    this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!force) {\r\n            this.raf = requestAnimationFrame(() => this.draw());\r\n        }\r\n    };\r\n\r\n    drawCircle(ctx, cx, cy, scale, radius, paint) {\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.translate(cx, cy);\r\n        ctx.scale(scale, scale);\r\n        ctx.arc(0, 0, radius, 0, 2 * Math.PI, false);\r\n        ctx.closePath();\r\n        paint && paint(ctx);\r\n        ctx.fill();\r\n        ctx.restore();\r\n    }\r\n\r\n    setCurrentState = (stateId, animated) => {\r\n        const { currentState, states } = this;\r\n\r\n        if (currentState && currentState.id === stateId) {\r\n            return;\r\n        }\r\n\r\n        this.previousState = animated ? currentState : null;\r\n        this.currentState = states[stateId];\r\n        this.progressToState = this.previousState ? 0.0 : 1.0;\r\n    };\r\n\r\n    updateMuteButton = (stateId, animated) => {\r\n        const { muteButtonState } = this;\r\n        if (muteButtonState === stateId && animated) {\r\n            return;\r\n        }\r\n\r\n        // TODO: add text animation\r\n\r\n        if (animated) {\r\n            this.muteButtonState = stateId;\r\n        } else {\r\n            this.muteButtonState = stateId;\r\n        }\r\n        this.updateMuteButtonState(animated);\r\n    }\r\n\r\n    updateMuteButtonState (animated) {\r\n        const { states, currentState, muteButtonState } = this;\r\n\r\n        if (states[muteButtonState] !== currentState) {\r\n            this.prevState = currentState;\r\n            this.currentState = states[muteButtonState];\r\n            if (!this.prevState || !animated) {\r\n                this.switchProgress = 1.0;\r\n                this.prevState = null;\r\n            } else {\r\n                this.switchProgress = 0.0;\r\n            }\r\n        }\r\n\r\n        if (!animated) {\r\n            let showWaves = false;\r\n            let showLighting = false;\r\n            if (currentState) {\r\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\r\n                showLighting = currentState.stateId === MUTE_BUTTON_STATE_CONNECTING;\r\n            }\r\n            this.showWavesProgress = showWaves ? 1.0 : 0.0;\r\n            this.showLightingProgress = showLighting ? 1.0 : 0.0;\r\n        }\r\n    }\r\n\r\n    setAmplitude(value) {\r\n        this.animateToAmplitude = value;\r\n        this.animateAmplitudeDiff = (value - this.amplitude) / (100 + 500 * AMPLITUDE_SPEED);\r\n        // console.log('[button] setAmplitude', [this.amplitude, this.animateToAmplitude, this.animateAmplitudeDiff]);\r\n    }\r\n\r\n    handleMouseDown = event => {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        const { children, onClick } = this.props;\r\n        const { left, right, top, bottom, scale } = this;\r\n\r\n        return (\r\n            <div id='button' className='button' style={{ height: bottom / scale, borderRadius: 12, position: 'relative', transform: 'translateY(-14px)' }}>\r\n                <canvas id='button-canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\r\n                <div style={{\r\n                    position: 'absolute',\r\n                    background: 'transparent',\r\n                    width: 104,\r\n                    height: 104,\r\n                    borderRadius: '50%',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    left: '50%',\r\n                    top: '50%',\r\n                    marginLeft: -52,\r\n                    marginTop: -38,\r\n                    cursor: 'pointer'\r\n                }}\r\n                     onMouseDown={stopPropagation}\r\n                     onClick={onClick}>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nButton.propTypes = {};\r\n\r\nexport default Button;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AnimatedItem from '../ColumnMiddle/AnimatedItem';\r\nimport './GroupCallMicButtonHint.css';\r\n\r\nclass GroupCallMicButtonHint extends React.Component {\r\n\r\n    getItemTemplate = item => {\r\n        const { t } = this.props;\r\n\r\n        let title = '';\r\n        let subtitle = '';\r\n        switch (item) {\r\n            case 'muted': {\r\n                title = t('VoipGroupUnmute');\r\n                subtitle = t('VoipHoldAndTalk');\r\n                break;\r\n            }\r\n            case 'unmuted': {\r\n                title = t('VoipTapToMute');\r\n                break;\r\n            }\r\n            case 'forceMuted': {\r\n                title = t('VoipMutedByAdmin');\r\n                subtitle = t('VoipMutedByAdminInfo');\r\n                break;\r\n            }\r\n            case 'connecting': {\r\n                title = t('Connecting');\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='group-call-mic-button-hint-item'>\r\n                <div className='group-call-mic-button-hint-title'>{title}</div>\r\n                {subtitle && <div className='group-call-mic-button-hint-subtitle'>{subtitle}</div>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { className, status } = this.props;\r\n\r\n        return (\r\n            <div className={classNames('group-call-mic-button-hint', className)}>\r\n                <AnimatedItem item={status} height={37} getItemTemplate={this.getItemTemplate} scrollDown={true} animateOnMount={false}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallMicButtonHint.propTypes = {\r\n    status: PropTypes.string\r\n};\r\n\r\nexport default withTranslation()(GroupCallMicButtonHint);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from './Button';\r\nimport GroupCallMicButtonHint from './GroupCallMicButtonHint';\r\nimport MicIcon from '../../Assets/Icons/Mic';\r\nimport MicOffIcon from '../../Assets/Icons/MicOff';\r\nimport { getCallStatus } from '../../Calls/Utils';\r\nimport { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './GroupCallMicButton.css';\r\n\r\nclass GroupCallMicButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.buttonRef = React.createRef();\r\n\r\n        const { currentGroupCall: call } = CallStore;\r\n        const { connected, status } = getCallStatus(call);\r\n        this.state = {\r\n            call,\r\n            status,\r\n            connected,\r\n            animated: CallStore.animated\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { status, connected, animated, shook } = this.state;\r\n\r\n        if (animated !== nextState.animated) {\r\n            return true;\r\n        }\r\n\r\n        if (connected !== nextState.connected) {\r\n            return true;\r\n        }\r\n\r\n        if (shook !== nextState.shook) {\r\n            return true;\r\n        }\r\n\r\n        if (status !== nextState.status) {\r\n            return true;\r\n        }\r\n\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.switchButtonState(false);\r\n\r\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\r\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\r\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    onClientUpdateGroupCallAmplitudeChange = update => {\r\n        const { amplitudes } = update;\r\n        if (!amplitudes.length) return;\r\n\r\n        for (let i = 0; i < amplitudes.length; i++) {\r\n            const { type, value } = amplitudes[i];\r\n            if (type === 'input') {\r\n                this.buttonRef.current && this.buttonRef.current.setAmplitude(value);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    switchButtonState(animated = true) {\r\n        const { connected, status } = this.state;\r\n\r\n        let stateId = MUTE_BUTTON_STATE_MUTE;\r\n        if (!connected) {\r\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\r\n        } else {\r\n            if (status === 'forceMuted') {\r\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\r\n            } else if (status === 'unmuted') {\r\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\r\n            } else if (status === 'muted') {\r\n                stateId = MUTE_BUTTON_STATE_MUTE;\r\n            }\r\n        }\r\n\r\n\r\n        this.buttonRef.current && this.buttonRef.current.updateMuteButton(stateId, true);\r\n    }\r\n\r\n    onUpdateGroupCallParticipant = update => {\r\n        const { group_call_id, participant } = update;\r\n        if (!participant) return;\r\n\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call_id !== call.groupCallId) return;\r\n\r\n        const { user_id, is_muted } = participant\r\n        if (user_id !== UserStore.getMyId()) return;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.setState({\r\n            status,\r\n            connected\r\n        }, () => {\r\n            this.switchButtonState();\r\n        });\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { group_call } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call.id !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCallConnectionState = update => {\r\n        const { groupCallId } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (groupCallId !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCall = update => {\r\n        const { currentGroupCall: call } = CallStore;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.setState({\r\n            call,\r\n            status,\r\n            connected\r\n        }, () => {\r\n            this.switchButtonState();\r\n        });\r\n    };\r\n\r\n    handleClick = () => {\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        const { chatId, groupCallId, stream } = call;\r\n\r\n        const groupCall = CallStore.get(groupCallId);\r\n        if (!groupCall) return;\r\n\r\n        if (!groupCall.can_unmute_self) {\r\n            const { shook } = this.state;\r\n            if (shook) {\r\n                this.setState({\r\n                    shook: false\r\n                }, () => {\r\n                    requestAnimationFrame(() => {\r\n                        this.setState({ shook: true });\r\n                    })\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    shook: true\r\n                });\r\n            }\r\n        } else {\r\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { status, connected, animated, shook } = this.state;\r\n        // console.log('[call][GroupCallMicButton] render');\r\n\r\n        return (\r\n            <div className='group-call-mic-button-wrapper' >\r\n                {animated ? (\r\n                    <Button ref={this.buttonRef} onClick={this.handleClick}>\r\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\r\n                    </Button>\r\n                ) : (\r\n                    <div className={classNames('group-call-mic-button',\r\n                        {\r\n                            'group-call-muted-by-admin ': connected && status === 'forceMuted',\r\n                            'group-call-unmuted': connected && status === 'unmuted',\r\n                            'group-call-connecting': !connected,\r\n                        })}\r\n                         onClick={this.handleClick}\r\n                    >\r\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\r\n                    </div>\r\n                )}\r\n                <GroupCallMicButtonHint className={shook ? 'shook-horizontal' : ''} status={connected ? status : 'connecting'}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nGroupCallMicButton.propTypes = {\r\n    groupCallId: PropTypes.number,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(GroupCallMicButton);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getCallStatus } from '../../Calls/Utils';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './GroupCallPanelButtons.css'\r\n\r\nclass GroupCallPanelButtons extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { currentGroupCall: call } = CallStore;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.state = {\r\n            call,\r\n            status,\r\n            connected\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { status, connected } = this.state;\r\n\r\n        if (connected !== nextState.connected) {\r\n            return true;\r\n        }\r\n\r\n        if (status !== nextState.status) {\r\n            return true;\r\n        }\r\n\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    onUpdateGroupCallParticipant = update => {\r\n        const { group_call_id, participant } = update;\r\n        if (!participant) return;\r\n\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call_id !== call.groupCallId) return;\r\n\r\n        const { user_id } = participant;\r\n        if (user_id !== UserStore.getMyId()) return;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.setState({\r\n            status\r\n        });\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { group_call } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call.id !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCallConnectionState = update => {\r\n        const { groupCallId } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (groupCallId !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCall = update => {\r\n        const { currentGroupCall: call } = CallStore;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.setState({\r\n            call,\r\n            status,\r\n            connected\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n        const { status, connected } = this.state;\r\n        // console.log('[call][GroupCallPanelButtons] render');\r\n\r\n        return (\r\n            <div className={classNames('group-call-panel-buttons', {\r\n                'group-call-connecting': !connected,\r\n                'group-call-muted': connected && status === 'muted',\r\n                'group-call-muted-by-admin': connected && status === 'forceMuted',\r\n                'group-call-unmuted': connected && status === 'unmuted',\r\n            })}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallPanelButtons.propTypes = {};\r\n\r\nexport default GroupCallPanelButtons;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M18.8833789,7.00672773 L19,7 C19.5128358,7 19.9355072,7.38604019 19.9932723,7.88337887 L20,8 L20,10 L22,10 C22.5128358,10 22.9355072,10.3860402 22.9932723,10.8833789 L23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L20,12 L20,14 C20,14.5128358 19.6139598,14.9355072 19.1166211,14.9932723 L19,15 C18.4871642,15 18.0644928,14.6139598 18.0067277,14.1166211 L18,14 L18,12 L16,12 C15.4871642,12 15.0644928,11.6139598 15.0067277,11.1166211 L15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L18,10 L18,8 C18,7.48716416 18.3860402,7.06449284 18.8833789,7.00672773 L19,7 L18.8833789,7.00672773 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />,\r\n    'AddMember'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1-9c0-.55.45-1 1-1s1 .45 1 1v6c0 .55-.45 1-1 1s-1-.45-1-1V5zm6 6c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z\" />,\r\n    'MicOutlined'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d=\"M10.8 4.9c0-.66.54-1.2 1.2-1.2s1.2.54 1.2 1.2l-.01 3.91L15 10.6V5c0-1.66-1.34-3-3-3-1.54 0-2.79 1.16-2.96 2.65l1.76 1.76V4.9zM19 11h-1.7c0 .58-.1 1.13-.27 1.64l1.27 1.27c.44-.88.7-1.87.7-2.91zM4.41 2.86L3 4.27l6 6V11c0 1.66 1.34 3 3 3 .23 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.55-.9l4.2 4.2 1.41-1.41L4.41 2.86z\" />,\r\n    'MicOffOutlined'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MicIcon from '../../Assets/Icons/MicOutlined';\r\nimport MicOffIcon from '../../Assets/Icons/MicOffOutlined';\r\nimport UserTile from '../Tile/UserTile';\r\nimport { closeGroupCallPanel } from '../../Actions/Call';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport { openUser } from '../../Actions/Client';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './GroupCallParticipant.css';\r\n\r\nclass GroupCallParticipant extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0,\r\n        participant: null\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { userId, groupCallId } = props;\r\n        const { prevUserId, prevGroupCallId } = state;\r\n\r\n        if (prevUserId !== userId || prevGroupCallId !== groupCallId) {\r\n            const participants = CallStore.participants.get(groupCallId) || new Map();\r\n            const participant = participants.get(userId);\r\n\r\n            return {\r\n                prevUserId: userId,\r\n                prevGroupCallId: groupCallId,\r\n                participant\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { participant, left, top, contextMenu } = this.state;\r\n\r\n        if (participant !== nextState.participant) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n    }\r\n\r\n    onUpdateGroupCallParticipant = update => {\r\n        const { groupCallId, userId } = this.props;\r\n        const { group_call_id, participant } = update;\r\n        if (groupCallId !== group_call_id) return;\r\n        if (!participant) return;\r\n\r\n        const { user_id } = participant;\r\n        if (userId !== user_id) return;\r\n\r\n        this.setState({\r\n            participant\r\n        });\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { userId } = this.props;\r\n        if (userId === UserStore.getMyId()) return;\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleOpenProfile = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { userId } = this.props;\r\n\r\n        openUser(userId, true);\r\n        closeGroupCallPanel();\r\n    };\r\n\r\n    handleSendMessage = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { userId } = this.props;\r\n\r\n        openUser(userId, false);\r\n        closeGroupCallPanel();\r\n    };\r\n\r\n    handleMute = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { userId } = this.props;\r\n        CallStore.changeUserMuted(userId, true);\r\n    };\r\n\r\n    handleUnmute = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { userId } = this.props;\r\n        CallStore.changeUserMuted(userId, false);\r\n    };\r\n\r\n    render() {\r\n        const { userId, t } = this.props;\r\n        const { contextMenu, left, top, participant } = this.state;\r\n        // console.log('[call][GroupCallParticipant] render', participant);\r\n        if (!participant) return null;\r\n\r\n        const { is_speaking, is_muted_for_all_users, is_muted_for_current_user, can_unmute_self, can_be_muted_for_all_users, can_be_unmuted_for_all_users } = participant;\r\n        const isMuted = is_muted_for_all_users || is_muted_for_current_user;\r\n\r\n        return (\r\n            <div className='group-call-participant' onClick={this.handleOpenContextMenu} onContextMenu={this.handleOpenContextMenu}>\r\n                <UserTile userId={userId}/>\r\n                <div className='group-call-participant-content'>\r\n                    <div className='group-call-participant-content-title'>\r\n                        {/*{userId}*/}\r\n                        {getUserFullName(userId)}\r\n                    </div>\r\n                    <div className={classNames('group-call-participant-content-subtitle', 'participant-listening', { 'participant-speaking': is_speaking })}>\r\n                        {/*{order}*/}\r\n                        {is_speaking ? t('Speaking') : t('Listening')}\r\n                    </div>\r\n                </div>\r\n                <div className={classNames('group-call-participant-mic', { 'participant-muted-by-admin': isMuted && !can_unmute_self, 'participant-speaking': is_speaking })}>\r\n                    {!isMuted || is_speaking ? <MicIcon /> : <MicOffIcon />}\r\n                </div>\r\n\r\n                <Popover\r\n                    classes={{\r\n                        paper: 'group-call-participant-menu-root'\r\n                    }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        { can_be_unmuted_for_all_users && (\r\n                            <MenuItem\r\n                                classes={{ root: 'group-call-participant-menu-item' }}\r\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                                TouchRippleProps={{\r\n                                    classes : {\r\n                                        child : 'group-call-participant-menu-item-ripple-child',\r\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                    }\r\n                                }}\r\n                                onClick={this.handleUnmute}>\r\n                                <ListItemText primary={t('VoipGroupUnmute')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        { can_be_muted_for_all_users && (\r\n                            <MenuItem\r\n                                classes={{ root: 'group-call-participant-menu-item' }}\r\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                                TouchRippleProps={{\r\n                                    classes : {\r\n                                        child : 'group-call-participant-menu-item-ripple-child',\r\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                    }\r\n                                }}\r\n                                onClick={this.handleMute}>\r\n                                <ListItemText primary={t('VoipGroupMute')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        <MenuItem\r\n                            classes={{ root: 'group-call-participant-menu-item' }}\r\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                            TouchRippleProps={{\r\n                                classes : {\r\n                                    child : 'group-call-participant-menu-item-ripple-child',\r\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                }\r\n                            }}\r\n                            onClick={this.handleOpenProfile}>\r\n                            <ListItemText primary={t('VoipGroupOpenProfile')} />\r\n                        </MenuItem>\r\n                        <MenuItem\r\n                            classes={{ root: 'group-call-participant-menu-item' }}\r\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                            TouchRippleProps={{\r\n                                classes : {\r\n                                    child : 'group-call-participant-menu-item-ripple-child',\r\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                }\r\n                            }}\r\n                            onClick={this.handleSendMessage}>\r\n                            <ListItemText primary={t('SendMessage')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nGroupCallParticipant.propTypes = {\r\n    userId: PropTypes.number,\r\n    groupCallId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(GroupCallParticipant);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AddMemberIcon from '../../Assets/Icons/AddMember';\r\nimport GroupCallParticipant from './GroupCallParticipant';\r\nimport { albumHistoryEquals, orderCompare } from '../../Utils/Common';\r\nimport { canManageVoiceChats } from '../../Utils/Chat';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './GroupCallParticipants.css';\r\n\r\nclass GroupCallParticipants extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            participants: []\r\n        };\r\n\r\n        this.participantsMap = new Map();\r\n        // this.updateParticipants = throttle(this.updateParticipants, 1000);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { groupCallId } = props;\r\n        const { prevGroupCallId } = state;\r\n\r\n        if (prevGroupCallId !== groupCallId) {\r\n            const participantsMap = CallStore.participants.get(groupCallId) || new Map();\r\n            const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\r\n\r\n            return {\r\n                prevGroupCallId: groupCallId,\r\n                participants: participants.map(x => x.user_id)\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { participants } = this.state;\r\n        if (!albumHistoryEquals(participants, nextState.participants)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.preloadContent();\r\n\r\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n    }\r\n\r\n    onUpdateGroupCallParticipant = update => {\r\n        const { groupCallId } = this.props;\r\n        const { group_call_id, participant } = update;\r\n        if (!participant) return;\r\n\r\n        if (group_call_id !== groupCallId) return;\r\n\r\n        const { order, user_id } = participant;\r\n        if (order !== '0') {\r\n            this.participantsMap.set(user_id, user_id);\r\n            this.loadContent();\r\n\r\n            // wait for profile photo\r\n            setTimeout(() => {\r\n                this.updateParticipants();\r\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\r\n        } else {\r\n            this.updateParticipants();\r\n        }\r\n    };\r\n\r\n    updateParticipants() {\r\n        const { groupCallId } = this.props;\r\n\r\n        const participantsMap = CallStore.participants.get(groupCallId) || new Map();\r\n        const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\r\n\r\n        this.setState({\r\n            participants: participants.map(x => x.user_id)\r\n        });\r\n    }\r\n\r\n    preloadContent = () => {\r\n        const { participants } = this.state;\r\n        if (!participants) return;\r\n        if (!participants.length) return;\r\n\r\n        participants.forEach(x => {\r\n            this.participantsMap.set(x, x);\r\n        });\r\n        this.loadContent();\r\n    };\r\n\r\n    loadContent = () => {\r\n        const { participantsMap } = this;\r\n        if (!participantsMap) return;\r\n        if (!participantsMap.size) return;\r\n\r\n        this.participantsMap = new Map();\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, Array.from(participantsMap.keys()));\r\n    }\r\n\r\n    render() {\r\n        const { t, groupCallId } = this.props;\r\n        const { participants } = this.state;\r\n        // console.log('[call][GroupCallParticipants] render');\r\n\r\n        const { currentGroupCall } = CallStore;\r\n        if (!currentGroupCall) return null;\r\n\r\n        const { chatId } = currentGroupCall;\r\n\r\n        const manageGroupCalls = canManageVoiceChats(chatId);\r\n\r\n        return (\r\n            <div className='group-call-participants'>\r\n                { manageGroupCalls && (\r\n                    <div className='group-call-participants-invite'>\r\n                        <AddMemberIcon/>\r\n                        <div className='group-call-participants-invite-text'>\r\n                            {t('VoipGroupInviteMember')}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {participants.map(x => <GroupCallParticipant key={x} userId={x} groupCallId={groupCallId}/>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallParticipants.propTypes = {\r\n    groupCallId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(GroupCallParticipants);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M3,17V19H9V17H3M3,5V7H13V5H3M13,21V19H21V17H13V15H11V21H13M7,9V11H3V13H7V15H9V9H7M21,13V11H11V13H21M15,9H17V7H21V5H17V3H15V9Z' />,\r\n    'Tune'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TuneIcon from '../../Assets/Icons/Tune';\r\nimport { stopPropagation } from '../../Utils/Message';\r\nimport './GroupCallSettingsButton.css';\r\n\r\nclass GroupCallSettingsButton extends React.Component {\r\n    render() {\r\n        const { onClick } = this.props;\r\n\r\n        return (\r\n            <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={onClick}>\r\n                <TuneIcon />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallSettingsButton.propTypes = {\r\n    groupCallId: PropTypes.number,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default GroupCallSettingsButton;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport GroupCallMicButton from './GroupCallMicButton';\r\nimport GroupCallPanelButtons from './GroupCallPanelButtons';\r\nimport GroupCallParticipants from './GroupCallParticipants';\r\nimport GroupCallSettings from './GroupCallSettings';\r\nimport GroupCallSettingsButton from './GroupCallSettingsButton';\r\nimport GroupCallSubtitle from './GroupCallJoinPanelSubtitle';\r\nimport { closeGroupCallPanel } from '../../Actions/Call';\r\nimport { getChatTitle } from '../../Utils/Chat';\r\nimport { stopPropagation } from '../../Utils/Message';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport './GroupCallPanel.css';\r\n\r\nclass GroupCallPanel extends React.Component {\r\n    state = {\r\n        openSettings: false\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.handleClose();\r\n    }\r\n\r\n    handleLeave = async event => {\r\n        event.stopPropagation();\r\n\r\n        const { currentGroupCall: call } = CallStore;\r\n        if (!call) return;\r\n\r\n        const { chatId, groupCallId } = call;\r\n\r\n        await CallStore.leaveGroupCall(chatId, groupCallId);\r\n    };\r\n\r\n    handleOpenSettings = async event => {\r\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\r\n\r\n        this.setState({\r\n            openSettings: true\r\n        });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        this.setState({\r\n            openSettings: false\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        closeGroupCallPanel();\r\n    };\r\n\r\n    render() {\r\n        const { groupCallId, t } = this.props;\r\n        const { openSettings } = this.state;\r\n        const { currentGroupCall } = CallStore;\r\n        if (!currentGroupCall) return null;\r\n\r\n        const { chatId } = currentGroupCall;\r\n\r\n        return (\r\n            <div className='group-call-panel'>\r\n                <div className='group-call-panel-header'>\r\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </div>\r\n                    <div className='group-call-panel-caption'>\r\n                        <div className='group-call-title'>{getChatTitle(chatId)}</div>\r\n                        <GroupCallSubtitle groupCallId={groupCallId} participantsOnly={true}/>\r\n                    </div>\r\n                    <div style={{ width: 48 }}/>\r\n                </div>\r\n                <div className='group-call-panel-participants scrollbars-hidden'>\r\n                    <GroupCallParticipants groupCallId={groupCallId}/>\r\n                </div>\r\n                <GroupCallPanelButtons>\r\n                    <GroupCallMicButton/>\r\n                    <div className='group-call-panel-button'>\r\n                        <GroupCallSettingsButton onClick={this.handleOpenSettings}/>\r\n                        <div className='group-call-panel-button-text'>\r\n                            {t('Settings')}\r\n                        </div>\r\n                    </div>\r\n                    <div className='group-call-panel-button'>\r\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleLeave}>\r\n                            <CallEndIcon />\r\n                        </div>\r\n                        <div className='group-call-panel-button-text'>\r\n                            {t('Leave')}\r\n                        </div>\r\n                    </div>\r\n                </GroupCallPanelButtons>\r\n                {openSettings && <GroupCallSettings groupCallId={groupCallId} onClose={this.handleCloseSettings}/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallPanel.propTypes = {\r\n    groupCallId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(GroupCallPanel);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport GroupCallPanel from './GroupCallPanel';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport { clamp } from '../../Utils/Common';\r\nimport { closeGroupCallPanel } from '../../Actions/Call';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport './GroupCall.css';\r\n\r\nclass GroupCall extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n\r\n        this.state = {\r\n            fullScreen: false\r\n        };\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n\r\n                this.handleClose();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setPosition();\r\n\r\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        window.addEventListener('resize', this.onWindowResize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n    }\r\n\r\n    onClientUpdateGroupCallFullScreen = update => {\r\n        const { fullscreen } = update;\r\n\r\n        this.setState({ fullscreen });\r\n    };\r\n\r\n    handleClose = () => {\r\n        closeGroupCallPanel();\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        if (event.nativeEvent.which !== 1) return;\r\n\r\n        const element = document.getElementById('group-call');\r\n        if (element) element.focus();\r\n\r\n        this.mouseDownRoot = true;\r\n        event.preventDefault();\r\n\r\n        this.left = parseInt(element.style.left, 10);\r\n        this.top = parseInt(element.style.top, 10);\r\n        this.pageX = event.nativeEvent.pageX;\r\n        this.pageY = event.nativeEvent.pageY;\r\n\r\n        document.onmousemove = this.handleMouseMove;\r\n        document.onmouseup = this.handleMouseUp;\r\n\r\n        this.windowDragging = true;\r\n    };\r\n\r\n    onWindowResize = () => {\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        if (fullscreenElement) return;\r\n\r\n        const player = document.getElementById('group-call');\r\n\r\n        const oldLeft = parseInt(player.style.left, 10);\r\n        const oldTop = parseInt(player.style.top, 10);\r\n\r\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\r\n\r\n        if (oldLeft === left && oldTop === top) return;\r\n\r\n        // console.log('[pip] windowResize', left, top);\r\n        player.style.left = left + 'px';\r\n        player.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseMove = event => {\r\n        event.preventDefault();\r\n\r\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\r\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\r\n\r\n        const element = document.getElementById('group-call');\r\n        element.style.left = left + 'px';\r\n        element.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseUp = event => {\r\n        event.preventDefault();\r\n\r\n        document.onmousemove = null;\r\n        document.onmouseup = null;\r\n\r\n        this.windowDragging = false;\r\n    };\r\n\r\n    setPosition() {\r\n        const element = document.getElementById('group-call');\r\n        let { pipParams } = CallStore;\r\n        if (!pipParams) {\r\n            pipParams = {\r\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\r\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\r\n            }\r\n        }\r\n\r\n        const { left: prevLeft, top: prevTop } = pipParams;\r\n\r\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\r\n\r\n        element.style.left = left + 'px';\r\n        element.style.top = top + 'px';\r\n    }\r\n\r\n    normalizePosition(left, top, checkGlue = true) {\r\n        const player = document.getElementById('group-call');\r\n        const playerWidth = player ? player.clientWidth : 300;\r\n        const playerHeight = player ? player.clientHeight : 300;\r\n\r\n        const { clientWidth: documentWidth } = document.documentElement;\r\n        const { clientHeight: documentHeight } = document.documentElement;\r\n\r\n        if (checkGlue && this.glueLeft) {\r\n            left = 0;\r\n        } else if (checkGlue && this.glueRight) {\r\n            left = documentWidth - playerWidth;\r\n        } else {\r\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\r\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\r\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\r\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\r\n            left = clamp(left, 0, documentWidth - playerWidth);\r\n        }\r\n\r\n        if (checkGlue && this.glueTop) {\r\n            top = 0;\r\n        } else if (checkGlue && this.glueBottom) {\r\n            top = documentHeight - playerHeight;\r\n        } else {\r\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\r\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\r\n            top = clamp(top, 0, documentHeight - playerHeight);\r\n        }\r\n\r\n        this.glueLeft = left === 0;\r\n        this.glueRight = left === documentWidth - playerWidth;\r\n        this.glueTop = top === 0;\r\n        this.glueBottom = top === documentHeight - playerHeight;\r\n\r\n        CallStore.pipParams = { left, top };\r\n\r\n        return { left, top };\r\n    }\r\n\r\n    render() {\r\n        const { groupCallId } = this.props;\r\n        const { fullscreen } = this.state;\r\n\r\n        return (\r\n            <div\r\n                id='group-call'\r\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\r\n                onMouseDown={this.handleMouseDown}\r\n            >\r\n                <GroupCallPanel groupCallId={groupCallId}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nGroupCall.propTypes = {\r\n    groupCallId: PropTypes.number\r\n};\r\n\r\nexport default GroupCall;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withSaveRef } from '../../Utils/HOC';\r\nimport { withIV } from './IVContext';\r\nimport { getPageBlock } from '../../Utils/InstantView';\r\nimport './Article.css';\r\n\r\nconst articleRefs = new Map();\r\n\r\nclass Article extends React.PureComponent {\r\n    render() {\r\n        const { forwardedRef, iv } = this.props;\r\n        if (!iv) return null;\r\n\r\n        const { page_blocks, is_rtl } = iv;\r\n        if (!page_blocks) return;\r\n\r\n        articleRefs.clear();\r\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\r\n\r\n        return (\r\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\r\n                {blocks}\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nArticle.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withIV\r\n);\r\n\r\nexport { articleRefs };\r\n\r\nexport default enhance(Article);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\r\n    'Left'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaCaption.css';\r\n\r\nclass MediaCaption extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            top: false,\r\n            bottom: false\r\n        };\r\n\r\n        this.scrollRef = React.createRef();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { text } = this.props;\r\n        const { top, bottom } = this.state;\r\n\r\n        if (nextProps.text !== text) return true;\r\n        if (nextState.top !== top) return true;\r\n        if (nextState.bottom !== bottom) return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleScroll();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { text } = this.props;\r\n\r\n        if (prevProps.text !== text) {\r\n            this.handleScroll();\r\n        }\r\n    }\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const scroll = this.scrollRef.current;\r\n        if (!scroll) return;\r\n\r\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\r\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\r\n\r\n        this.setState({\r\n            top,\r\n            bottom\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { text } = this.props;\r\n        const { top, bottom } = this.state;\r\n\r\n        return (\r\n            <div className='media-caption' onClick={this.handleClick}>\r\n                <div\r\n                    ref={this.scrollRef}\r\n                    className={classNames(\r\n                        'scrollbars-hidden',\r\n                        'media-caption-wrapper', {\r\n                            'media-caption-wrapper-top': top,\r\n                            'media-caption-wrapper-bottom': bottom,\r\n                            'media-caption-wrapper-both': !top && !bottom\r\n                        })}\r\n                    onScroll={this.handleScroll}>\r\n                    <div className='media-caption-text'>{text}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaCaption.propTypes = {\r\n    text: PropTypes.array\r\n};\r\n\r\nMediaCaption.defaultProps = {};\r\n\r\nexport default MediaCaption;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FileProgress from './FileProgress';\r\nimport MediaCaption from './MediaCaption';\r\nimport Caption from '../InstantView/Blocks/Caption';\r\nimport SafeLink from '../Additional/SafeLink';\r\nimport Player from '../Player/Player';\r\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\r\nimport { getThumb } from '../../Utils/Media';\r\nimport { isEmptyText } from '../../Utils/InstantView';\r\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass InstantViewMediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { media, size, caption, url } = props;\r\n\r\n        if (media !== state.prevMedia) {\r\n            const thumbnail = getViewerThumbnail(media);\r\n            const minithumbnail = getViewerMinithumbnail(media);\r\n\r\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\r\n            file = FileStore.get(file.id) || file;\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                const { video } = media;\r\n                if (video) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\r\n                }\r\n            }\r\n\r\n            return {\r\n                prevMedia: media,\r\n\r\n                speed: 1,\r\n                isPlaying: false,\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType,\r\n                thumbnail,\r\n                minithumbnail\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    onClientUpdatePictureInPicture = update => {\r\n        const { videoInfo } = update;\r\n        if (!videoInfo) return;\r\n\r\n        const { file } = this.state;\r\n        if (file.id !== videoInfo.fileId) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateInstantViewViewerContent',\r\n            content: null\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { src } = this.state;\r\n\r\n        if (prevState.src !== src) {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        }\r\n    }\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { fileId } = update;\r\n        const { media, size } = this.props;\r\n        const { file } = this.state;\r\n\r\n        if (file && file.id === fileId) {\r\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src: getSrc(file),\r\n                supportsStreaming,\r\n                mimeType\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaThumbnailBlob = update => {\r\n        const { fileId } = update;\r\n        const { thumbnail } = this.state;\r\n\r\n        if (thumbnail && thumbnail.file.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { media, caption, url } = this.props;\r\n        if (!media) return null;\r\n\r\n        const {\r\n            width,\r\n            height,\r\n            file,\r\n            src,\r\n            mimeType,\r\n            thumbnail,\r\n            minithumbnail,\r\n            isPlaying,\r\n            supportsStreaming\r\n        } = this.state;\r\n        if (!file) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbnailSrc = getSrc(thumbnail);\r\n\r\n        let videoWidth = width;\r\n        let videoHeight = height;\r\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\r\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\r\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\r\n        videoWidth = w;\r\n        videoHeight = h;\r\n\r\n        let content = null;\r\n        const source = src ? <source src={src} type={mimeType}/> : null;\r\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\r\n\r\n        switch (media['@type']) {\r\n            case 'video': {\r\n                content = (\r\n                    <div className='media-viewer-content-wrapper'>\r\n                        <Player\r\n                            ref={this.videoRef}\r\n                            className='media-viewer-content-video-player'\r\n                            fileId={file.id}\r\n                            width={videoWidth}\r\n                            height={videoHeight}\r\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\r\n                            onPlay={() => {\r\n                                this.setState({ isPlaying: true });\r\n                            }}\r\n                        >\r\n                            {source}\r\n                        </Player>\r\n                        {!isPlaying && !supportsStreaming && thumb}\r\n                    </div>\r\n                );\r\n                break;\r\n            }\r\n            case 'animation': {\r\n                // content = (\r\n                //     <Animation\r\n                //         type='preview'\r\n                //         stretch={true}\r\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\r\n                //         animation={media}\r\n                //         onClick={this.handleContentClick}\r\n                //         showProgress={false}\r\n                //         style={{ borderRadius: 0 }}\r\n                //     />\r\n                // );\r\n\r\n                content = (\r\n                    <div className='media-viewer-content-wrapper'>\r\n                        <video\r\n                            ref={this.videoRef}\r\n                            className='media-viewer-content-video-player'\r\n                            onClick={this.handleContentClick}\r\n                            loop\r\n                            autoPlay\r\n                            width={videoWidth}\r\n                            height={videoHeight}\r\n                            onPlay={() => {\r\n                                this.setState({ isPlaying: true });\r\n                            }}\r\n                        >\r\n                            {source}\r\n                        </video>\r\n                        {!isPlaying && thumb}\r\n                    </div>\r\n                );\r\n                break;\r\n            }\r\n            default: {\r\n                content = (\r\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='media-viewer-content'>\r\n                {content}\r\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\r\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\r\n                    <MediaCaption\r\n                        text={\r\n                            <>\r\n                                <Caption text={caption.text} credit={caption.credit} />\r\n                                <SafeLink url={url} />\r\n                            </>\r\n                        }\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewMediaViewerContent.propTypes = {\r\n    media: PropTypes.object.isRequired,\r\n    size: PropTypes.number.isRequired,\r\n    caption: PropTypes.object,\r\n    url: PropTypes.string\r\n};\r\n\r\nexport default InstantViewMediaViewerContent;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaViewerButton.css';\r\n\r\nclass MediaViewerButton extends React.Component {\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { disabled, onClick } = this.props;\r\n\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { disabled, grow, children, className, style } = this.props;\r\n\r\n        const cx = classNames(\r\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\r\n            { grow: grow },\r\n            className\r\n        );\r\n\r\n        return (\r\n            <div className={cx} style={style} onClick={this.handleClick}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerButton.propTypes = {\r\n    disabled: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default MediaViewerButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MediaViewerFooterText.css';\r\n\r\nclass MediaViewerFooterText extends React.Component {\r\n    render() {\r\n        const { title, subtitle, style } = this.props;\r\n\r\n        return (\r\n            <div className='media-viewer-footer-text' style={style}>\r\n                <div className='media-viewer-footer-text-wrapper'>\r\n                    <span>{title}</span>\r\n                    {Boolean(subtitle) && (\r\n                        <span>\r\n                            &nbsp;\r\n                            {subtitle}\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerFooterText.propTypes = {\r\n    title: PropTypes.string,\r\n    subtitle: PropTypes.string\r\n};\r\n\r\nexport default MediaViewerFooterText;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaViewerFooterButton.css';\r\n\r\nclass MediaViewerFooterButton extends React.Component {\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { onClick, disabled } = this.props;\r\n\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { checked, children, disabled, title } = this.props;\r\n\r\n        return (\r\n            <div\r\n                className={classNames('media-viewer-footer-button', {\r\n                    'media-viewer-footer-button-checked': checked,\r\n                    'media-viewer-footer-button-disabled': disabled\r\n                })}\r\n                title={title}\r\n                onClick={this.handleClick}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerFooterButton.propTypes = {\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    checked: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default MediaViewerFooterButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SaveIcon from '../../Assets/Icons/Download';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './MediaViewerFooterButton.css';\r\n\r\nclass MediaViewerDownloadButton extends React.Component {\r\n    state = {  };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { fileId } = props;\r\n        const { prevPropsFileId } = state;\r\n\r\n        if (fileId !== prevPropsFileId) {\r\n            return {\r\n                prevPropsFileId: fileId,\r\n                fileId,\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.fileId !== this.props.chatId) {\r\n            this.checkFileLoaded();\r\n        }\r\n    }\r\n\r\n    checkFileLoaded() {\r\n        // console.log('[down] checkLoaded');\r\n        const { fileId } = this.props;\r\n        const blob = FileStore.getBlob(fileId);\r\n        if (blob) {\r\n            // console.log('[down] checkLoaded blob');\r\n            return;\r\n        }\r\n\r\n        const file = FileStore.get(fileId);\r\n        if (!file) {\r\n            // console.log('[down] checkLoaded file');\r\n            return;\r\n        }\r\n\r\n        const { local } = file;\r\n        if (!local) return;\r\n        if (!local.is_downloading_completed) return;\r\n\r\n        // console.log('[down] checkLoaded getLocal');\r\n        const store = FileStore.getStore();\r\n        FileStore.getLocalFile(store, file, null, () => {\r\n            // console.log('[down] checkLoaded getLocal complete');\r\n            this.setState({\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.checkFileLoaded();\r\n\r\n        FileStore.on('updateFile', this.onUpdateFile);\r\n\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('updateFile', this.onUpdateFile);\r\n\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n    }\r\n\r\n    onUpdateFile = update => {\r\n        const { fileId } = this.props;\r\n        const { file } = update;\r\n\r\n        if (file.id !== fileId) return;\r\n\r\n        if (file.local.is_downloading_completed) {\r\n            this.checkFileLoaded();\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { fileId } = this.state;\r\n\r\n        if (fileId === update.fileId) {\r\n            this.setState({\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            });\r\n        }\r\n    };\r\n\r\n    static saveDisabled = fileId => {\r\n        return !Boolean(FileStore.getBlob(fileId));\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { onClick } = this.props;\r\n        const { disabled } = this.state;\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { title, children, disabled: propsDisabled } = this.props;\r\n        const { disabled } = this.state;\r\n\r\n        return (\r\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\r\n                {children || <SaveIcon />}\r\n            </MediaViewerFooterButton>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerDownloadButton.propTypes = {\r\n    fileId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool\r\n};\r\n\r\nexport default MediaViewerDownloadButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withIV } from '../InstantView/IVContext';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\r\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\r\nimport { getInputMediaContent } from '../../Utils/Media';\r\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InstantViewMediaViewer.css';\r\n\r\nclass InstantViewMediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            index: -1,\r\n            hasPreviousMedia: false,\r\n            hasNextMedia: false,\r\n            blocks: []\r\n        };\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        if (!blocks) return null;\r\n        if (index === -1) return null;\r\n\r\n        const block = blocks[index];\r\n        const media = getBlockMedia(block);\r\n        if (!media) return;\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n                this.handleClose();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowLeft': {\r\n                this.handleNext();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowRight': {\r\n                this.handlePrevious();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n\r\n        const isVideo = media['@type'] === 'video';\r\n        if (isVideo) {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\r\n        }\r\n    };\r\n\r\n    loadContent() {\r\n        const { iv, media } = this.props;\r\n\r\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\r\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\r\n\r\n        this.setState({\r\n            blocks,\r\n            index,\r\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\r\n            hasNextMedia: this.hasNextMedia(index, blocks)\r\n        });\r\n\r\n        preloadIVMediaViewerContent(index, blocks);\r\n    }\r\n\r\n    hasPreviousMedia(index, blocks) {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < blocks.length;\r\n    }\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        const nextIndex = index + 1;\r\n\r\n        if (!this.hasPreviousMedia(index, blocks)) return;\r\n\r\n        return this.loadMedia(nextIndex);\r\n    };\r\n\r\n    hasNextMedia(index, blocks) {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    }\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        const nextIndex = index - 1;\r\n\r\n        if (!this.hasNextMedia(index, blocks)) return;\r\n\r\n        return this.loadMedia(nextIndex);\r\n    };\r\n\r\n    loadMedia = index => {\r\n        const { blocks } = this.state;\r\n\r\n        if (index < 0) return false;\r\n        if (index >= blocks.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                index,\r\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\r\n                hasNextMedia: this.hasNextMedia(index, blocks)\r\n            }\r\n        );\r\n\r\n        preloadIVMediaViewerContent(index, blocks);\r\n        return true;\r\n    };\r\n\r\n    handleClose = () => {\r\n        setInstantViewViewerContent(null);\r\n\r\n        const { index, blocks } = this.state;\r\n        if (index !== -1) {\r\n            cancelPreloadIVMediaViewerContent(index, blocks);\r\n        }\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { media } = this.props;\r\n\r\n        const inputMessageContent = getInputMediaContent(media, null);\r\n        if (!inputMessageContent) return;\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { media } = this.props;\r\n\r\n        saveMedia(media, null);\r\n    };\r\n\r\n    handleWrapperMouseDown = event => {\r\n        this.mouseDownTarget = event.currentTarget;\r\n    }\r\n\r\n    handleWrapperClick = event => {\r\n        const { mouseDownTarget } = this;\r\n        this.mouseDownTarget = null;\r\n\r\n        if (event.currentTarget !== mouseDownTarget) return;\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    render() {\r\n        const { size, t } = this.props;\r\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\r\n        if (!blocks) return null;\r\n        if (index === -1) return null;\r\n\r\n        const block = blocks[index];\r\n        const media = getBlockMedia(block);\r\n        const caption = getBlockCaption(block);\r\n        const url = getBlockUrl(block);\r\n\r\n        const [width, height, file] = getViewerFile(media, size);\r\n\r\n        let title = '';\r\n        if (media['@type'] === 'photo') {\r\n            title = t('AttachPhoto');\r\n        }\r\n        if (media['@type'] === 'video') {\r\n            title = t('AttachVideo');\r\n        } else if (media['@type'] === 'animation') {\r\n            title = t('AttachGif');\r\n        }\r\n        const maxCount = blocks.length;\r\n\r\n        return (\r\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\r\n                <div className='media-viewer-footer'>\r\n                    <MediaViewerFooterText\r\n                        title={title}\r\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\r\n                        style={{ marginLeft: 128 }}\r\n                    />\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\r\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                    <div className='media-viewer-content-column'>\r\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\r\n                    </div>\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewMediaViewer.propTypes = {\r\n    media: PropTypes.object.isRequired,\r\n    size: PropTypes.number.isRequired,\r\n    caption: PropTypes.object.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withIV\r\n);\r\n\r\nexport default enhance(InstantViewMediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Article from './Article';\r\nimport { articleRefs } from './Article';\r\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\r\nimport IVContext from './IVContext';\r\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport { itemsInView, throttle } from '../../Utils/Common';\r\nimport { getInnerBlocks } from '../../Utils/InstantView';\r\nimport { openInstantView } from '../../Actions/InstantView';\r\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\r\nimport { scrollTop } from '../../Utils/DOM';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { IV_PHOTO_SIZE } from '../../Constants';\r\nimport InstantViewStore from '../../Stores/InstantViewStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InstantViewer.css';\r\n\r\nclass InstantViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.articleRef = React.createRef();\r\n        this.instantViewerRef = React.createRef();\r\n\r\n        this.state = {};\r\n\r\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.instantView !== state.prevInstantView) {\r\n            return {\r\n                prevInstantView: props.instantView,\r\n                hasPrev: InstantViewStore.hasPrev(),\r\n                hasScroll: false,\r\n                media: null,\r\n                caption: null,\r\n                url: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { instantView } = this.props;\r\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\r\n\r\n        if (instantView !== nextProps.instantView) {\r\n            return true;\r\n        }\r\n\r\n        if (hasScroll !== nextState.hasScroll) {\r\n            return true;\r\n        }\r\n\r\n        if (hasPrev !== nextState.hasPrev) {\r\n            return true;\r\n        }\r\n\r\n        if (media !== nextState.media) {\r\n            return true;\r\n        }\r\n\r\n        if (caption !== nextState.caption) {\r\n            return true;\r\n        }\r\n\r\n        if (url !== nextState.url) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        this.handleScroll();\r\n        this.scrollToBlock(this.props.block, 'smooth');\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\r\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\r\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\r\n    }\r\n\r\n    onClientUpdateInstantViewViewerContent = update => {\r\n        const { content } = update;\r\n        if (!content) {\r\n            this.setState({ media: null, caption: null, url: null });\r\n            return;\r\n        }\r\n\r\n        const { media, caption, url, instantView } = content;\r\n\r\n        if (this.props.instantView !== instantView) return;\r\n\r\n        this.setState({ media, caption, url });\r\n    };\r\n\r\n    onClientUpdateInstantViewUrl = async update => {\r\n        const { url } = update;\r\n        const active = InstantViewStore.getCurrent();\r\n        const { instantView, url: oldUrl } = this.props;\r\n\r\n        if (active !== instantView) return;\r\n\r\n        if (instantView && url.startsWith(oldUrl)) {\r\n            const hash = new URL(url).hash;\r\n            if (url.indexOf('#') === url.length - 1) {\r\n                this.scrollTop('smooth');\r\n\r\n                return;\r\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        openInstantView(url);\r\n    };\r\n\r\n    scrollToBlock(block, behavior) {\r\n        if (!block) return false;\r\n\r\n        if (!articleRefs) return false;\r\n\r\n        const ref = articleRefs.get(block);\r\n        if (!ref) return false;\r\n\r\n        const element = ReactDOM.findDOMNode(ref);\r\n        return this.scrollToElement(element, behavior);\r\n    }\r\n\r\n    scrollToElement(element, behavior) {\r\n        if (!element) return false;\r\n\r\n        const details = [];\r\n        let finished = false;\r\n        let currentElement = element;\r\n        do {\r\n            currentElement = currentElement.parentNode;\r\n            if (currentElement) {\r\n                if (currentElement.nodeName === 'DETAILS') {\r\n                    details.push(currentElement);\r\n                } else if (currentElement.nodeName === 'ARTICLE') {\r\n                    finished = true;\r\n                }\r\n            } else {\r\n                finished = true;\r\n            }\r\n        } while (!finished);\r\n\r\n        details.forEach(x => (x.open = true));\r\n\r\n        element.scrollIntoView({\r\n            block: 'center',\r\n            behavior\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n    scrollToHash(hash, behavior) {\r\n        if (!hash) return false;\r\n\r\n        const element = document.getElementById(hash.substr(1));\r\n\r\n        return this.scrollToElement(element, behavior);\r\n    }\r\n\r\n    scrollTop(behavior) {\r\n        const element = this.instantViewerRef.current;\r\n\r\n        switch (behavior) {\r\n            case 'smooth': {\r\n                scrollTop(element);\r\n                break;\r\n            }\r\n            default: {\r\n                element.scrollTo({\r\n                    top: 0,\r\n                    behavior\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { instantView, block, url } = this.props;\r\n\r\n        const hash = new URL(url).hash;\r\n        if (prevProps.instantView !== instantView) {\r\n            if (prevProps.url !== url) {\r\n                if (url.indexOf('#') === url.length - 1) {\r\n                    this.scrollTop('auto');\r\n                } else if (hash) {\r\n                    this.scrollToHash(hash, 'auto');\r\n                } else {\r\n                    this.scrollTop('auto');\r\n                }\r\n            } else {\r\n                if (hash) {\r\n                    this.scrollToHash(hash, 'auto');\r\n                } else {\r\n                    this.scrollTop('smooth');\r\n                }\r\n            }\r\n\r\n            this.handleScroll();\r\n        }\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape': {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n\r\n                const { media } = this.state;\r\n\r\n                if (media) {\r\n                    setInstantViewViewerContent(null);\r\n                    return;\r\n                }\r\n\r\n                this.handleClose();\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClose() {\r\n        setInstantViewContent(null);\r\n    }\r\n\r\n    handleBack = () => {\r\n        const { hasPrev, hasScroll } = this.state;\r\n        if (hasScroll) {\r\n            this.scrollTop('smooth');\r\n            return;\r\n        }\r\n\r\n        if (hasPrev) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdatePrevInstantView'\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const element = this.instantViewerRef.current;\r\n        this.setState({\r\n            hasScroll: element.scrollTop > 50\r\n        });\r\n\r\n        this.updateItemsInView();\r\n    };\r\n\r\n    updateItemsInView() {\r\n        if (!this.mounted) return;\r\n\r\n        const { instantView } = this.props;\r\n        if (!instantView) return;\r\n\r\n        const { page_blocks } = instantView;\r\n\r\n        const blocks = new Map();\r\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\r\n\r\n        for (let i = 0; i < items.length; i++) {\r\n            const block = page_blocks[items[i]];\r\n            blocks.set(block, block);\r\n\r\n            const innerBlocks = getInnerBlocks(block);\r\n            innerBlocks.forEach(x => blocks.set(x, x));\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateBlocksInView',\r\n            blocks\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { instantView } = this.props;\r\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\r\n        if (!instantView) return null;\r\n\r\n        return (\r\n            <IVContext.Provider value={instantView}>\r\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\r\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\r\n                        <MediaViewerButton\r\n                            className='instant-viewer-left-button'\r\n                            style={{ alignItems: 'flex-start' }}\r\n                            onClick={this.handleBack}>\r\n                            <NavigateBeforeIcon\r\n                                style={{\r\n                                    transition: 'transform 0.25s ease-out',\r\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\r\n                                }}\r\n                            />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                    <div className='instant-viewer-content-column'>\r\n                        <div>\r\n                            <Article ref={this.articleRef} />\r\n                        </div>\r\n                    </div>\r\n                    <div className='instant-viewer-right-column'>\r\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\r\n                            <CloseIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\r\n            </IVContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewer.propTypes = {\r\n    instantView: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(InstantViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getDateHint } from '../../Utils/Message';\r\nimport UserTile from './UserTile';\r\nimport ChatTile from './ChatTile';\r\nimport MessageAuthor from '../Message/MessageAuthor';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './MediaInfo.css';\r\n\r\nclass MediaInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { date, sender } = message;\r\n\r\n        const dateHint = getDateHint(date);\r\n\r\n        const tileControl = sender.user_id ? <UserTile userId={sender.user_id} /> : <ChatTile chatId={chatId} />;\r\n\r\n        return (\r\n            <div className='media-info'>\r\n                <div className='media-info-wrapper'>\r\n                    {tileControl}\r\n                    <div className='media-info-content'>\r\n                        <div className='media-info-row'>\r\n                            <MessageAuthor sender={sender} />\r\n                        </div>\r\n                        <div className='media-info-row meta'>\r\n                            <span>{dateHint}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaInfo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default MediaInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FileProgress from './FileProgress';\r\nimport MediaCaption from './MediaCaption';\r\nimport Player from '../Player/Player';\r\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\r\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\r\nimport { getThumb } from '../../Utils/Media';\r\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MediaViewerContent.css';\r\n\r\nclass MediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this.videoRef = React.createRef();\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId, size, t } = props;\r\n\r\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\r\n            const thumbnail = getMediaThumbnail(chatId, messageId);\r\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\r\n\r\n            const message = MessageStore.get(chatId, messageId);\r\n            const text = getText(message, null, t);\r\n\r\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\r\n            file = FileStore.get(file.id) || file;\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                if (isVideoMessage(chatId, messageId)) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\r\n                }\r\n            }\r\n\r\n            const { content } = message;\r\n            const { web_page: webPage } = content;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n\r\n                speed: 1,\r\n                isPlaying: false,\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType,\r\n                text,\r\n                thumbnail,\r\n                minithumbnail,\r\n                webPage\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    onClientUpdatePictureInPicture = update => {\r\n        const { videoInfo } = update;\r\n        if (!videoInfo) return;\r\n\r\n        const { file } = this.state;\r\n        if (file.id !== videoInfo.fileId) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaViewerContent',\r\n            content: null\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { src } = this.state;\r\n\r\n        if (prevState.src !== src) {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        }\r\n    }\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { chatId, messageId, size } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\r\n\r\n            file = FileStore.get(file.id) || file;\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                if (isVideoMessage(chatId, messageId)) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaThumbnailBlob = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            const thumbnail = getMediaThumbnail(chatId, messageId);\r\n            this.setState({\r\n                thumbnail\r\n            });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, messageId, size, t } = this.props;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId === chat_id && messageId === message_id) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            const text = getText(message, null, t);\r\n\r\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                if (isVideoMessage(chatId, messageId)) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType,\r\n                text\r\n            });\r\n        }\r\n    };\r\n\r\n    handleContentClick = event => {\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n\r\n        const { source } = this.state;\r\n        if (!source) return;\r\n\r\n        source.loadNextBuffer();\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            width,\r\n            height,\r\n            file,\r\n            src,\r\n            supportsStreaming,\r\n            mimeType,\r\n            text,\r\n            minithumbnail,\r\n            thumbnail,\r\n            webPage,\r\n            isPlaying\r\n        } = this.state;\r\n\r\n        if (!file) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\r\n\r\n        const isEmbed = isEmbedMessage(chatId, messageId);\r\n        const isVideo = isVideoMessage(chatId, messageId);\r\n        const isAnimation = isAnimationMessage(chatId, messageId);\r\n\r\n        let videoWidth = width;\r\n        let videoHeight = height;\r\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\r\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\r\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\r\n        videoWidth = w;\r\n        videoHeight = h;\r\n\r\n        let content = null;\r\n        const source = src ? <source src={src} type={mimeType}/> : null;\r\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\r\n\r\n        if (isVideo) {\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <Player\r\n                        ref={this.videoRef}\r\n                        className='media-viewer-content-video-player'\r\n                        fileId={file.id}\r\n                        width={videoWidth}\r\n                        height={videoHeight}\r\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\r\n                        onPlay={() => {\r\n                            this.setState({ isPlaying: true });\r\n                        }}\r\n                    >\r\n                        {source}\r\n                    </Player>\r\n                    {!isPlaying && !supportsStreaming && thumb}\r\n                </div>\r\n            );\r\n        } else if (isAnimation) {\r\n            // const message = MessageStore.get(chatId, messageId);\r\n            //\r\n            // content = (\r\n            //     <Animation\r\n            //         type='preview'\r\n            //         stretch={true}\r\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\r\n            //         animation={message.content.animation || message.content.web_page.animation}\r\n            //         onClick={this.handleContentClick}\r\n            //         showProgress={false}\r\n            //         style={{ borderRadius: 0 }}\r\n            //         />\r\n            // );\r\n\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <video\r\n                        ref={this.videoRef}\r\n                        className='media-viewer-content-video-player'\r\n                        onClick={this.handleContentClick}\r\n                        loop\r\n                        autoPlay\r\n                        width={videoWidth}\r\n                        height={videoHeight}\r\n                        onPlay={() => {\r\n                            this.setState({ isPlaying: true });\r\n                        }}\r\n                    >\r\n                        {source}\r\n                    </video>\r\n                    {!isPlaying && thumb}\r\n                </div>\r\n            );\r\n        } else if (webPage && webPage.embed_url) {\r\n            let { embed_url: url } = webPage;\r\n\r\n            switch (webPage.site_name) {\r\n                case 'Coub': {\r\n                    break;\r\n                }\r\n                case 'SoundCloud': {\r\n                    break;\r\n                }\r\n                case 'Spotify': {\r\n                    break;\r\n                }\r\n                case 'Twitch': {\r\n                    url += `&parent=${window.location.hostname}`;\r\n                    break;\r\n                }\r\n                case 'YouTube': {\r\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\r\n                    break;\r\n                }\r\n                case 'Vimeo': {\r\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\r\n                    break;\r\n                }\r\n                case 'КиноПоиск': {\r\n                    break;\r\n                }\r\n                case 'Яндекс.Музыка': {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\r\n                </div>\r\n            );\r\n        } else {\r\n            content = (\r\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className='media-viewer-content'>\r\n                    {content}\r\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\r\n                </div>\r\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerContent.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    size: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(MediaViewerContent);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport MediaInfo from '../Tile/MediaInfo';\r\nimport MediaViewerContent from './MediaViewerContent';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\r\nimport {\r\n    cancelPreloadMediaViewerContent,\r\n    getMediaFile,\r\n    loadMediaViewerContent,\r\n    preloadMediaViewerContent,\r\n    saveMedia\r\n} from '../../Utils/File';\r\nimport {\r\n    canMessageBeDeleted,\r\n    filterDuplicateMessages,\r\n    isAnimationMessage,\r\n    isEmbedMessage,\r\n    isMediaContent,\r\n    isVideoMessage\r\n} from '../../Utils/Message';\r\nimport { between } from '../../Utils/Common';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MediaViewer.css';\r\nimport LStore from '../../Stores/LocalizationStore';\r\n\r\nclass MediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.history = [];\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        this.state = {\r\n            background: 'media-viewer-default',\r\n            prevChatId: chatId,\r\n            prevMessageId: messageId,\r\n            currentMessageId: messageId,\r\n            hasNextMedia: false,\r\n            hasPreviousMedia: false,\r\n            deleteConfirmationOpened: false,\r\n            deleteForAll: true\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            background,\r\n            currentMessageId,\r\n            deleteConfirmationOpened,\r\n            firstSliceLoaded,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            totalCount\r\n        } = this.state;\r\n\r\n        if (nextState.background !== background) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.currentMessageId !== currentMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasNextMedia !== hasNextMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.totalCount !== totalCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadHistory();\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n\r\n                this.handleClose();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowLeft': {\r\n                if (!fullscreenElement) {\r\n                    this.handlePrevious();\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowRight': {\r\n                if (!fullscreenElement) {\r\n                    this.handleNext();\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        const isVideo = isVideoMessage(chatId, currentMessageId);\r\n        if (isVideo) {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id, new_content, old_content } = update;\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        const message = MessageStore.get(chat_id, message_id);\r\n        if (!message) return;\r\n\r\n        loadMediaViewerContent([message]);\r\n\r\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\r\n        if (addMessage) {\r\n            if (\r\n                this.history.length >= 2 &&\r\n                (this.firstSliceLoaded ||\r\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\r\n            ) {\r\n                let inserted = false;\r\n                let history = [];\r\n                for (let i = 0; i < this.history.length; i++) {\r\n                    if (this.history[i].id > message_id) {\r\n                        history.push(this.history[i]);\r\n                    } else {\r\n                        if (!inserted) {\r\n                            inserted = true;\r\n                            history.push(message);\r\n                        }\r\n                        history.push(this.history[i]);\r\n                    }\r\n                }\r\n                this.history = history;\r\n            }\r\n\r\n            const index = this.history.findIndex(x => x.id === currentMessageId);\r\n            this.setState({\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index),\r\n                totalCount: totalCount + 1\r\n            });\r\n        }\r\n\r\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\r\n        if (removeMessage) {\r\n            let oldHistory = this.history;\r\n            this.history = this.history.filter(x => x.id !== message_id);\r\n\r\n            if (currentMessageId === message_id) {\r\n                const filterMap = new Map();\r\n                filterMap.set(message_id, message_id);\r\n\r\n                this.moveToNextMedia(oldHistory, filterMap);\r\n                this.setState({\r\n                    totalCount: Math.max(totalCount - 1, 0)\r\n                });\r\n            } else {\r\n                const index = this.history.findIndex(x => x.id === currentMessageId);\r\n                this.setState({\r\n                    hasNextMedia: this.hasNextMedia(index),\r\n                    hasPreviousMedia: this.hasPreviousMedia(index),\r\n                    totalCount: Math.max(totalCount - 1, 0)\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chat_id, message_ids, is_permanent } = update;\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        if (!is_permanent) return;\r\n        if (chatId !== chat_id) return;\r\n\r\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\r\n            accumulator.set(currentId, currentId);\r\n            return accumulator;\r\n        }, new Map());\r\n\r\n        const oldHistory = this.history;\r\n        let deletedCount = oldHistory.length;\r\n\r\n        this.history = this.history.filter(x => !filterMap.has(x.id));\r\n        deletedCount -= this.history.length;\r\n\r\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\r\n\r\n        if (!this.history.length) {\r\n            setMediaViewerContent(null);\r\n            return;\r\n        }\r\n\r\n        if (filterMap.has(currentMessageId)) {\r\n            this.moveToNextMedia(oldHistory, filterMap);\r\n        }\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        const { message } = update;\r\n        if (!message) return;\r\n        if (!isMediaContent(message.content)) return;\r\n\r\n        if (message.chat_id !== chatId) return;\r\n        if (!this.firstSliceLoaded) return;\r\n\r\n        this.history = [message].concat(this.history);\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: totalCount + 1\r\n        });\r\n    };\r\n\r\n    getFilter = (chatId, messageId) => {\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageChatChangePhoto': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterChatPhoto'\r\n                };\r\n            }\r\n            case 'messagePhoto': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\r\n                };\r\n            }\r\n            case 'messageVideo': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\r\n                };\r\n            }\r\n            default: {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n\r\n    loadHistory = async () => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: messageId,\r\n                offset: -MEDIA_SLICE_LIMIT,\r\n                limit: 2 * MEDIA_SLICE_LIMIT,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.history = result.messages;\r\n        this.firstSliceLoaded = result.messages.length === 0;\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index)\r\n        });\r\n\r\n        if (index === -1) {\r\n            this.history = [MessageStore.get(chatId, currentMessageId)];\r\n            preloadMediaViewerContent(0, this.history);\r\n        } else {\r\n            preloadMediaViewerContent(index, this.history);\r\n\r\n            const filter = this.getFilter(chatId, messageId);\r\n            if (!filter) return;\r\n\r\n            const maxCount = 1500;\r\n            let count = 0;\r\n            while (!this.firstSliceLoaded && count < maxCount) {\r\n                const result = await TdLibController.send({\r\n                    '@type': 'searchChatMessages',\r\n                    chat_id: chatId,\r\n                    query: '',\r\n                    sender_user_id: 0,\r\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\r\n                    offset: -99,\r\n                    limit: 99 + 1,\r\n                    filter: filter\r\n                });\r\n                count += result.messages.length;\r\n\r\n                filterDuplicateMessages(result, this.history);\r\n                MessageStore.setItems(result.messages);\r\n\r\n                this.history = result.messages.concat(this.history);\r\n                this.firstSliceLoaded = result.messages.length === 0;\r\n\r\n                const { currentMessageId } = this.state;\r\n                const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n                this.setState({\r\n                    hasNextMedia: this.hasNextMedia(index),\r\n                    hasPreviousMedia: this.hasPreviousMedia(index),\r\n                    firstSliceLoaded: this.firstSliceLoaded,\r\n                    totalCount: result.total_count\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        setMediaViewerContent(null);\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        if (index !== -1) {\r\n            cancelPreloadMediaViewerContent(index, this.history);\r\n        }\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        let media = null;\r\n        switch (content['@type']) {\r\n            case 'messageAnimation': {\r\n                const { animation } = content;\r\n\r\n                media = animation;\r\n                break;\r\n            }\r\n            case 'messageChatChangePhoto': {\r\n                const { photo } = content;\r\n\r\n                media = photo;\r\n                break;\r\n            }\r\n            case 'messageDocument': {\r\n                const { document } = content;\r\n\r\n                media = document;\r\n                break;\r\n            }\r\n            case 'messagePhoto': {\r\n                const { photo } = content;\r\n\r\n                media = photo;\r\n                break;\r\n            }\r\n            case 'messageText': {\r\n                const { web_page } = content;\r\n                if (!web_page) return;\r\n\r\n                const { animation, document, photo, video } = web_page;\r\n\r\n                if (animation) {\r\n                    media = animation;\r\n                    break;\r\n                }\r\n\r\n                if (document) {\r\n                    media = document;\r\n                    break;\r\n                }\r\n\r\n                if (photo) {\r\n                    media = photo;\r\n                    break;\r\n                }\r\n\r\n                if (video) {\r\n                    media = video;\r\n                    break;\r\n                }\r\n                break;\r\n            }\r\n            case 'messageVideo': {\r\n                const { video } = content;\r\n\r\n                media = video;\r\n                break;\r\n            }\r\n        }\r\n\r\n        saveMedia(media, message);\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        forwardMessages(chatId, [currentMessageId]);\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleDialogOpen();\r\n    };\r\n\r\n    hasPreviousMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < this.history.length;\r\n    };\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        const nextIndex = index + 1;\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadPrevious = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: currentMessageId,\r\n                offset: 0,\r\n                limit: MEDIA_SLICE_LIMIT,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.history = this.history.concat(result.messages);\r\n\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: result.total_count\r\n        });\r\n    };\r\n\r\n    hasNextMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    };\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        const nextIndex = index - 1;\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadNext = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: currentMessageId,\r\n                offset: -MEDIA_SLICE_LIMIT,\r\n                limit: MEDIA_SLICE_LIMIT + 1,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.firstSliceLoaded = result.messages.length === 0;\r\n        this.history = result.messages.concat(this.history);\r\n\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            firstSliceLoaded: this.firstSliceLoaded,\r\n            totalCount: result.total_count\r\n        });\r\n    };\r\n\r\n    loadMedia = (index, callback) => {\r\n        if (index < 0) return false;\r\n        if (index >= this.history.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                currentMessageId: this.history[index].id,\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index)\r\n            },\r\n            callback\r\n        );\r\n\r\n        preloadMediaViewerContent(index, this.history);\r\n        return true;\r\n    };\r\n\r\n    moveToNextMedia = (oldHistory, filterMap) => {\r\n        const { currentMessageId } = this.state;\r\n\r\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\r\n        let nextId = 0;\r\n        for (let i = index - 1; i >= 0; i--) {\r\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\r\n                nextId = oldHistory[i].id;\r\n                break;\r\n            }\r\n        }\r\n        if (!nextId) {\r\n            for (let i = index + 1; i < oldHistory.length; i++) {\r\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\r\n                    nextId = oldHistory[i].id;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!nextId) return;\r\n\r\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            } else if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    handleDialogOpen = () => {\r\n        this.setState({ deleteConfirmationOpened: true });\r\n    };\r\n\r\n    handleDialogClose = () => {\r\n        this.setState({ deleteConfirmationOpened: false });\r\n    };\r\n\r\n    handleDone = () => {\r\n        this.setState({ deleteConfirmationOpened: false });\r\n\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, deleteForAll } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        if (!message) return;\r\n\r\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\r\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\r\n        if (!canBeDeleted) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteMessages',\r\n            chat_id: chatId,\r\n            message_ids: [currentMessageId],\r\n            revoke: can_be_deleted_for_all_users && deleteForAll\r\n        });\r\n    };\r\n\r\n    handleChangeDeleteForAll = event => {\r\n        this.setState({ deleteForAll: event.target.checked });\r\n    };\r\n\r\n    handleInvertColors = () => {\r\n        const { background } = this.state;\r\n\r\n        let nextBackground = 'media-viewer-default';\r\n        switch (background) {\r\n            case 'media-viewer-default': {\r\n                nextBackground = 'media-viewer-dark';\r\n                break;\r\n            }\r\n            case 'media-viewer-dark': {\r\n                nextBackground = 'media-viewer-light';\r\n                break;\r\n            }\r\n            case 'media-viewer-light': {\r\n                nextBackground = 'media-viewer-default';\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            background: nextBackground\r\n        });\r\n    };\r\n\r\n    canBeForwarded = (chatId, messageId) => {\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return false;\r\n\r\n        const { can_be_forwarded, content } = message;\r\n        if (!content) return false;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageChatChangePhoto': {\r\n                return true;\r\n            }\r\n            default: {\r\n                return can_be_forwarded;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleWrapperMouseDown = event => {\r\n        this.mouseDownTarget = event.currentTarget;\r\n    }\r\n\r\n    handleWrapperClick = event => {\r\n        const { mouseDownTarget } = this;\r\n        this.mouseDownTarget = null;\r\n\r\n        if (event.currentTarget !== mouseDownTarget) return;\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const {\r\n            background,\r\n            currentMessageId,\r\n            deleteConfirmationOpened,\r\n            deleteForAll,\r\n            firstSliceLoaded,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            totalCount\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount && firstSliceLoaded) {\r\n            index = this.history.findIndex(x => x.id === currentMessageId);\r\n        }\r\n        const maxCount = Math.max(this.history.length, totalCount);\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        const { can_be_deleted_for_all_users } = message;\r\n\r\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\r\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\r\n\r\n        let deleteConfirmationContent = '';\r\n        if (isVideoMessage(chatId, currentMessageId)) {\r\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\r\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\r\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\r\n        } else {\r\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\r\n        }\r\n        const deleteConfirmation = deleteConfirmationOpened ? (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={deleteConfirmationOpened}\r\n                onClose={this.handleDialogClose}\r\n                aria-labelledby='form-dialog-title'>\r\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\r\n                    {can_be_deleted_for_all_users && (\r\n                        <FormControlLabel\r\n                            label={t('DeleteForAll')}\r\n                            control={\r\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\r\n                            }\r\n                            checked={deleteForAll}\r\n                        />\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleDialogClose} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        ) : null;\r\n\r\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\r\n\r\n        const fileId = file ? file.id : 0;\r\n        let title = t('AttachPhoto');\r\n        if (isEmbedMessage(chatId, currentMessageId)) {\r\n            title = '';\r\n        } else if (isVideoMessage(chatId, currentMessageId)) {\r\n            title = t('AttachVideo');\r\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\r\n            title = t('AttachGif');\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('media-viewer', background)}>\r\n                <div className='media-viewer-footer'>\r\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\r\n                    <MediaViewerFooterText\r\n                        title={title}\r\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\r\n                    />\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\r\n                    <MediaViewerFooterButton\r\n                        title={t('Forward')}\r\n                        disabled={!canBeForwarded}\r\n                        onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\r\n                        <DeleteIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-content-column'>\r\n                        <MediaViewerContent\r\n                            chatId={chatId}\r\n                            messageId={currentMessageId}\r\n                            size={PHOTO_BIG_SIZE}\r\n                            onClick={this.handlePrevious}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n                <div className='media-viewer-footer'/>\r\n                {deleteConfirmation}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewer.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(MediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport PauseIcon from '../../Assets/Icons/Pause';\r\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\r\nimport FullScreen from '../../Assets/Icons/FullScreen';\r\nimport Hint from './Hint';\r\nimport Player from './Player';\r\nimport Progress from './Progress';\r\nimport { clamp, getDurationString } from '../../Utils/Common';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport {\r\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\r\n    PLAYER_PLAYBACKRATE_MIN,\r\n    PLAYER_PLAYBACKRATE_STEP,\r\n    PLAYER_SEEK_STEP_BIG,\r\n    PLAYER_SEEK_STEP_SMALL,\r\n    PLAYER_VOLUME_MAX,\r\n    PLAYER_VOLUME_MIN,\r\n    PLAYER_VOLUME_STEP\r\n} from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './PipPlayer.css';\r\n\r\nclass PipPlayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.state = { };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\r\n        if (state.prevVideo !== video) {\r\n            return {\r\n                prevVideo: video,\r\n                duration,\r\n                currentTime,\r\n                volume,\r\n                play,\r\n                buffered,\r\n                waiting,\r\n                dragging: false,\r\n                hidden: false,\r\n                fullscreen: false\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { video } = this.props;\r\n        this.connectPlayer(video);\r\n        window.addEventListener('resize', this.onWindowResize);\r\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\r\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { video } = this.props;\r\n        this.disconnectPlayer(video);\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\r\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\r\n\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    onClientUpdateMediaShortcut = update => {\r\n        const { event } = update;\r\n        if (!event) return;\r\n\r\n        this.onKeyDown(event);\r\n    };\r\n\r\n    onKeyDown = event => {\r\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\r\n\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        let handled = false;\r\n        switch (code) {\r\n            case 'Escape': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleClose();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowLeft': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyJ': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowRight': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyL': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowUp': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Space':\r\n            case 'KeyK': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleClick();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyM': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleMute();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyF': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleFullScreen();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyI': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    // this.handlePictureInPicture();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Digit0':\r\n            case 'Digit1':\r\n            case 'Digit2':\r\n            case 'Digit3':\r\n            case 'Digit4':\r\n            case 'Digit5':\r\n            case 'Digit6':\r\n            case 'Digit7':\r\n            case 'Digit8':\r\n            case 'Digit9': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\r\n                    this.handleSeekProgress(progress);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Home': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(0);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'End': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.duration - 1.0);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Comma': {\r\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\r\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Period': {\r\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\r\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (handled) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    showMediaHint(text) {\r\n        const { fileId } = this.props;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaHint',\r\n            fileId,\r\n            text\r\n        });\r\n    }\r\n\r\n    handleVolume = volume => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\r\n\r\n        video.volume = volume;\r\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\r\n    };\r\n\r\n    handlePlaybackRate = rate => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\r\n\r\n        video.playbackRate = rate;\r\n        this.showMediaHint(`${rate}x`);\r\n    };\r\n\r\n    handleSeekProgress = progress => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(progress * video.duration);\r\n    };\r\n\r\n    handleSeek = currentTime => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        currentTime = clamp(currentTime, 0, video.duration || 0);\r\n\r\n        video.currentTime = currentTime;\r\n        this.setState({ currentTime });\r\n    };\r\n\r\n    onFullScreenChange = () => {\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\r\n        const fullscreen = fullscreenElement === fullscreenPlayer;\r\n\r\n        this.setState({\r\n            fullscreen\r\n        });\r\n    };\r\n\r\n    onWindowResize = () => {\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        if (fullscreenElement) return;\r\n\r\n        const player = document.getElementById('pip-player');\r\n\r\n        const oldLeft = parseInt(player.style.left, 10);\r\n        const oldTop = parseInt(player.style.top, 10);\r\n\r\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\r\n\r\n        if (oldLeft === left && oldTop === top) return;\r\n\r\n        // console.log('[pip] windowResize', left, top);\r\n        player.style.left = left + 'px';\r\n        player.style.top = top + 'px';\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { video } = this.props;\r\n\r\n        if (prevProps.video !== video) {\r\n            this.disconnectPlayer(prevProps.video)\r\n            this.connectPlayer(video);\r\n        }\r\n    }\r\n\r\n    connectPlayer(video) {\r\n        if (!video) return;\r\n\r\n        const pipPlayer = document.getElementById('pip-player');\r\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\r\n        pipPlayer.style.left = left + 'px';\r\n        pipPlayer.style.top = top + 'px';\r\n\r\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\r\n        pipPlayerWrapper.focus();\r\n\r\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\r\n\r\n        const container = document.getElementById('pip-player-container');\r\n        if (!container) return;\r\n\r\n        video.onloadedmetadata = this.handleLoadedMetadata;\r\n        video.onloadeddata = this.handleLoadedData;\r\n        video.oncanplay = this.handleCanPlay;\r\n        video.onplay = this.handlePlay;\r\n        video.onpause = this.handlePause;\r\n        video.onended = this.handleEnded;\r\n        video.ontimeupdate = this.handleTimeUpdate;\r\n        video.onvolumechange = this.handleVolumeChange;\r\n        video.onprogress = this.handleProgress;\r\n        video.onwaiting = this.handleWaiting;\r\n\r\n        container.innerHTML = '';\r\n        container.appendChild(video);\r\n    }\r\n\r\n    disconnectPlayer(video) {\r\n        if (!video) return;\r\n\r\n        video.onloadedmetadata = null;\r\n        video.onloadeddata = null;\r\n        video.oncanplay = null;\r\n        video.onplay = null;\r\n        video.onpause = null;\r\n        video.onended = null;\r\n        video.ontimeupdate = null;\r\n        video.onvolumechange = null;\r\n        video.onprogress = null;\r\n        video.onwaiting = null;\r\n    }\r\n\r\n    handleLoadedData = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n    };\r\n\r\n    handleLoadedMetadata = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { currentTime } = this.state;\r\n        const { duration, volume, buffered } = video;\r\n        // const currentTime = this.getCurrentTime();\r\n\r\n        this.setState({\r\n            duration,\r\n            // currentTime,\r\n            volume,\r\n            waiting: true,\r\n            buffered\r\n        }, () => {\r\n            if (!currentTime) return;\r\n\r\n            video.currentTime = currentTime;\r\n        });\r\n    };\r\n\r\n    handleCanPlay = event => {\r\n        const { target: video } = event;\r\n\r\n        this.setState({\r\n            waiting: false\r\n        }, () => {\r\n            if (!video) return;\r\n\r\n            const { play } = this.state;\r\n            if (play) {\r\n                video.play();\r\n            } else {\r\n                video.pause();\r\n            }\r\n        });\r\n    };\r\n\r\n    handlePlay = event => {\r\n        const { onPlay } = this.props;\r\n\r\n        this.setState({\r\n            play: true,\r\n            hidden: true\r\n        });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\r\n        onPlay && onPlay(event);\r\n    };\r\n\r\n    handlePause = event => {\r\n        const { onPause } = this.props;\r\n\r\n        this.setState({\r\n            play: false,\r\n            hidden: false\r\n        });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\r\n        onPause && onPause(event);\r\n    };\r\n\r\n    handleEnded = event => {\r\n        const { onEnded } = this.props;\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\r\n        onEnded && onEnded(event);\r\n\r\n        const { video } = this.props;\r\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\r\n    };\r\n\r\n    handleTimeUpdate = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { fileId } = this.props;\r\n        const { currentTime, duration, volume, buffered } = video;\r\n\r\n        this.setState({\r\n            duration,\r\n            currentTime,\r\n            volume,\r\n            buffered\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\r\n            fileId,\r\n            currentTime,\r\n            duration,\r\n            volume,\r\n            buffered\r\n        });\r\n\r\n        this.setCurrentTime({ currentTime, duration });\r\n    };\r\n\r\n    handleVolumeChange = event => {\r\n        const { onVolumeChange } = this.props;\r\n\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { volume } = video;\r\n\r\n        this.setState({\r\n            volume\r\n        });\r\n\r\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\r\n        onVolumeChange && onVolumeChange(event);\r\n    };\r\n\r\n    handleProgress = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { fileId } = this.props;\r\n\r\n        const { buffered } = video;\r\n\r\n        this.setState({\r\n            buffered\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaViewerProgress',\r\n            fileId,\r\n            buffered\r\n        });\r\n    };\r\n\r\n    handleWaiting = () => {\r\n        this.setState({ waiting: true });\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    startStopPlayer = () => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        const { waiting } = this.state;\r\n        if (waiting) {\r\n            this.setState({\r\n                play: !this.state.play,\r\n                hidden: false\r\n            });\r\n        } else {\r\n            if (video.paused) {\r\n                video.play()\r\n            } else {\r\n                video.pause();\r\n            }\r\n        }\r\n    };\r\n\r\n    handlePlayerMouseDown = event => {\r\n        const pip = document.getElementById('pip-player-wrapper');\r\n        if (pip) pip.focus();\r\n\r\n        this.mouseDownRoot = true;\r\n        event.preventDefault();\r\n\r\n        if (event.nativeEvent.which !== 1) return;\r\n\r\n        this.offsetX = event.nativeEvent.offsetX;\r\n        this.offsetY = event.nativeEvent.offsetY;\r\n\r\n        document.onmousemove = this.handleMouseMove;\r\n        document.onmouseup = this.handleMouseUp;\r\n\r\n        this.setState({\r\n            windowDragging: true\r\n        });\r\n    };\r\n\r\n    handleMouseUp = event => {\r\n        event.preventDefault();\r\n\r\n        document.onmousemove = null;\r\n        document.onmouseup = null;\r\n\r\n        this.setState({\r\n            windowDragging: false\r\n        });\r\n    };\r\n\r\n    normalizePosition(left, top, checkGlue = true) {\r\n        const player = document.getElementById('pip-player');\r\n        const playerWidth = player ? player.clientWidth : 300;\r\n        const playerHeight = player ? player.clientHeight : 300;\r\n\r\n        const { clientWidth: documentWidth } = document.documentElement;\r\n        const { clientHeight: documentHeight } = document.documentElement;\r\n\r\n        if (checkGlue && this.glueLeft) {\r\n            left = 0;\r\n        } else if (checkGlue && this.glueRight) {\r\n            left = documentWidth - playerWidth;\r\n        } else {\r\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\r\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\r\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\r\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\r\n            left = clamp(left, 0, documentWidth - playerWidth);\r\n        }\r\n\r\n        if (checkGlue && this.glueTop) {\r\n            top = 0;\r\n        } else if (checkGlue && this.glueBottom) {\r\n            top = documentHeight - playerHeight;\r\n        } else {\r\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\r\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\r\n            top = clamp(top, 0, documentHeight - playerHeight);\r\n        }\r\n\r\n        this.glueLeft = left === 0;\r\n        this.glueRight = left === documentWidth - playerWidth;\r\n        this.glueTop = top === 0;\r\n        this.glueBottom = top === documentHeight - playerHeight;\r\n\r\n        PlayerStore.pipParams = { left, top };\r\n\r\n        return { left, top };\r\n    }\r\n\r\n    handleMouseMove = event => {\r\n        event.preventDefault();\r\n\r\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\r\n\r\n        const player = document.getElementById('pip-player');\r\n        player.style.left = left + 'px';\r\n        player.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        event.stopPropagation();\r\n\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        this.setState({\r\n            dragging: true,\r\n            draggingTime: video.currentTime\r\n        });\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        this.setState({\r\n            draggingTime: value * video.duration\r\n        });\r\n    };\r\n\r\n    handleChangeCommitted = () => {\r\n        const { dragging, draggingTime } = this.state;\r\n        if (!dragging) return;\r\n\r\n        this.setState({\r\n            dragging: false,\r\n            currentTime: draggingTime,\r\n            draggingTime: 0\r\n        }, () => {\r\n            const { video } = this.props;\r\n            if (!video) return;\r\n\r\n            if (Number.isFinite(draggingTime)) {\r\n                video.currentTime = draggingTime;\r\n            }\r\n        });\r\n    };\r\n\r\n    handlePanelEnter = () => {\r\n        this.panelEnter = true;\r\n    };\r\n\r\n    handlePanelLeave = () => {\r\n        this.panelEnter = false;\r\n    };\r\n\r\n    handleMouseOver = event => {\r\n        this.mouseDownRoot = false;\r\n        const { hidden } = this.state;\r\n\r\n        if (hidden) {\r\n            this.setState({\r\n                hidden: false\r\n            });\r\n        }\r\n\r\n        clearTimeout(this.mouseOverTimeout);\r\n        this.mouseOverTimeout = setTimeout(() => {\r\n            if (this.panelEnter) return;\r\n            if (!this.state.play) return;\r\n            if (!this.state.duration) return;\r\n\r\n            this.setState({\r\n                hidden: true\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePictureInPicture',\r\n            videoInfo: null\r\n        });\r\n    };\r\n\r\n    handleVolumeSliderChange = (event, volume) => {\r\n        if (volume === this.state.volume) return;\r\n\r\n        this.setState({\r\n            volume\r\n        }, () => {\r\n            const { video } = this.props;\r\n            if (!video) return;\r\n\r\n            video.volume = volume;\r\n        });\r\n    };\r\n\r\n    handleVolumeSliderChangeCommitted = event => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        document.activeElement.blur();\r\n    };\r\n\r\n    handleMute = () => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        if (video.volume === 0) {\r\n            video.volume = this.prevVolume || 0.5;\r\n        } else {\r\n            this.prevVolume = video.volume;\r\n            video.volume = 0;\r\n        }\r\n    }\r\n\r\n    handleFullScreen = event => {\r\n        event && event.stopPropagation();\r\n\r\n        const root = document.getElementById('pip-player-wrapper');\r\n        if (!root) return;\r\n\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        if (fullscreenElement) {\r\n            this.exitFullscreen();\r\n            return;\r\n        }\r\n\r\n        this.requestFullscreen(root);\r\n    };\r\n\r\n    requestFullscreen(element) {\r\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\r\n\r\n        method && method.call(element);\r\n    }\r\n\r\n    exitFullscreen() {\r\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\r\n\r\n        method && method.call(document);\r\n    }\r\n\r\n    getCurrentTime = () => {\r\n        const { fileId } = this.props;\r\n\r\n        const file = FileStore.get(fileId);\r\n        if (!file) return;\r\n\r\n        const { remote } = file;\r\n        if (!remote) return;\r\n\r\n        const { unique_id } = remote;\r\n        if (!unique_id) return;\r\n\r\n        return PlayerStore.getCurrentTime(unique_id);\r\n    };\r\n\r\n    setCurrentTime = currentTime => {\r\n        const { fileId } = this.props;\r\n\r\n        const file = FileStore.get(fileId);\r\n        if (!file) return;\r\n\r\n        const { remote } = file;\r\n        if (!remote) return;\r\n\r\n        const { unique_id } = remote;\r\n        if (!unique_id) return;\r\n\r\n        if (!currentTime) {\r\n            PlayerStore.clearCurrentTime(unique_id);\r\n        } else {\r\n            PlayerStore.setCurrentTime(unique_id, currentTime);\r\n        }\r\n    };\r\n\r\n    handlePanelDoubleClick = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleClickRoot = event => {\r\n        event.stopPropagation();\r\n\r\n        const { mouseDownRoot } = this;\r\n        if (!mouseDownRoot) return;\r\n\r\n        this.startStopPlayer();\r\n    }\r\n\r\n    handleDoubleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { mouseDownRoot } = this;\r\n        if (!mouseDownRoot) return;\r\n\r\n        this.handleFullScreen(event);\r\n    };\r\n\r\n    handleFocus = () => {\r\n        KeyboardManager.add(this.keyboardHandler);\r\n\r\n    };\r\n\r\n    handleBlur = () => {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    };\r\n\r\n    render() {\r\n        const { fileId } = this.props;\r\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\r\n\r\n        const time = dragging ? draggingTime : currentTime;\r\n        const value = duration > 0 ? time / duration : 0;\r\n        const bufferedTime = Player.getBufferedTime(time, buffered);\r\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\r\n\r\n        const timeString = getDurationString(Math.floor(time) || 0);\r\n        const durationString = getDurationString(Math.floor(duration) || 0);\r\n\r\n        const pictureInPictureEnabled = true;\r\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\r\n\r\n        return (\r\n            <div\r\n                id='pip-player'\r\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\r\n                onMouseDown={this.handlePlayerMouseDown}\r\n                onMouseMove={this.handleMouseOver}\r\n                onClick={this.handleClickRoot}\r\n                onDoubleClick={this.handleDoubleClick}>\r\n                <div\r\n                    id='pip-player-wrapper'\r\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\r\n                    onFocus={this.handleFocus}\r\n                    onBlur={this.handleBlur}\r\n                    tabIndex={0}>\r\n                    <div id='pip-player-container'/>\r\n                    <Hint fileId={fileId}/>\r\n\r\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\r\n                        <CloseIcon/>\r\n                    </button>\r\n                    <div\r\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\r\n                        onClick={e => e.stopPropagation()}\r\n                        onMouseDown={e => e.stopPropagation()}\r\n                        onDoubleClick={this.handlePanelDoubleClick}\r\n                        onMouseEnter={this.handlePanelEnter}\r\n                        onMouseLeave={this.handlePanelLeave}>\r\n                        <div className='player-slider'>\r\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\r\n                            <Slider\r\n                                value={value}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.001}\r\n                                classes={{\r\n                                    root: 'player-slider-root',\r\n                                    rail: 'player-slider-rail',\r\n                                    track: 'player-slider-track',\r\n                                    thumb: 'player-slider-thumb',\r\n                                    active: 'player-slider-active'\r\n                                }}\r\n                                onChange={this.handleChange}\r\n                                onChangeCommitted={this.handleChangeCommitted}\r\n                                onMouseDown={this.handleMouseDown}\r\n                            />\r\n                        </div>\r\n                        <div className='player-controls'>\r\n                            <button className='player-button' onClick={this.handleClick}>\r\n                                {play ? <PauseIcon/> : <PlayIcon/>}\r\n                            </button>\r\n                            <div className='player-time'>\r\n                                {`${timeString} / ${durationString}`}\r\n                            </div>\r\n                            <div className='player-volume'>\r\n                                <Slider\r\n                                    value={volume}\r\n                                    min={0}\r\n                                    max={1}\r\n                                    step={0.001}\r\n                                    classes={{\r\n                                        root: 'player-volume-root',\r\n                                        rail: 'player-volume-rail',\r\n                                        track: 'player-volume-track',\r\n                                        thumb: 'player-volume-thumb',\r\n                                        active: 'player-volume-active'\r\n                                    }}\r\n                                    onChange={this.handleVolumeSliderChange}\r\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\r\n                                />\r\n                            </div>\r\n                            <button className='player-button' onClick={this.handleMute}>\r\n                                {Player.getVolumeIcon(volume)}\r\n                            </button>\r\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\r\n                                <FullScreen/>\r\n                            </button>\r\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\r\n                            {/*    <PictureInPictureIcon/>*/}\r\n                            {/*</button>*/}\r\n                        </div>\r\n                    </div>\r\n                    <Progress waiting={waiting}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPipPlayer.propTypes = {\r\n\r\n};\r\n\r\nexport default PipPlayer;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FileProgress from './FileProgress';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './ProfileMediaViewer.css';\r\n\r\nclass ProfileMediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, photo } = this.props;\r\n\r\n        let { big: file } = photo;\r\n        file = FileStore.get(file.id) || file;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            prevPhoto: photo,\r\n            width: PROFILE_PHOTO_BIG_SIZE,\r\n            height: PROFILE_PHOTO_BIG_SIZE,\r\n            file: file\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, photo } = props;\r\n\r\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevPhoto: photo,\r\n                width: PROFILE_PHOTO_BIG_SIZE,\r\n                height: PROFILE_PHOTO_BIG_SIZE,\r\n                file: photo.big\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\r\n    }\r\n\r\n    onClientUpdateChatBlob = update => {\r\n        const { chatId, photo } = this.props;\r\n\r\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\r\n            const file = FileStore.get(update.fileId) || this.state.file;\r\n            this.setState({\r\n                file\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateUserBlob = update => {\r\n        const { chatId, photo } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n\r\n        if (userId === update.userId && photo.big.id === update.fileId) {\r\n            const file = FileStore.get(update.fileId) || this.state.file;\r\n            this.setState({\r\n                file\r\n            });\r\n        }\r\n    };\r\n\r\n    handleContentClick = event => {\r\n        if (event) event.stopPropagation();\r\n\r\n        const { onClose } = this.props;\r\n\r\n        onClose && onClose(event);\r\n    };\r\n\r\n    handlePhotoClick = event => {\r\n        if (event) event.stopPropagation();\r\n\r\n        const { onPrevious } = this.props;\r\n\r\n        onPrevious && onPrevious(event);\r\n    };\r\n\r\n    render() {\r\n        const { file } = this.state;\r\n        if (!file) return null;\r\n\r\n        const blob = FileStore.getBlob(file.id) || file.blob;\r\n        const src = FileStore.getBlobUrl(blob);\r\n\r\n        return (\r\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\r\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\r\n                <FileProgress file={file} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaViewerContent.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    photo: PropTypes.object.isRequired,\r\n\r\n    onClose: PropTypes.func,\r\n    onPrevious: PropTypes.func\r\n};\r\n\r\nexport default ProfileMediaViewerContent;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ChatTile from './ChatTile';\r\nimport MessageAuthor from '../Message/MessageAuthor';\r\nimport './MediaInfo.css';\r\n\r\nclass ProfileMediaInfo extends React.Component {\r\n    render() {\r\n        const { chatId, date, style } = this.props;\r\n\r\n        return (\r\n            <div className='media-info' style={style}>\r\n                <div className='media-info-wrapper'>\r\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\r\n                    <div className='media-info-content'>\r\n                        <div className='media-info-row'>\r\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\r\n                        </div>\r\n                        {date && (\r\n                            <div className='media-info-row meta'>\r\n                                <span>{date}</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaInfo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    date: PropTypes.string\r\n};\r\n\r\nexport default ProfileMediaInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\r\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\r\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\r\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\r\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\r\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ProfileMediaViewer.css';\r\n\r\nclass ProfileMediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.history = [];\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n\r\n        const { chatId, fileId } = this.props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            prevFileId: fileId,\r\n            currentIndex: 0,\r\n            hasNextMedia: false,\r\n            hasPreviousMedia: false,\r\n            deleteConfirmationOpened: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            currentFileId,\r\n            hasPreviousMedia,\r\n            hasNextMedia,\r\n            firstSliceLoaded,\r\n            totalCount,\r\n            deleteConfirmationOpened\r\n        } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.currentFileId !== currentFileId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasNextMedia !== hasNextMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.totalCount !== totalCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId } = this.props;\r\n        const photo = getPhotoFromChat(chatId);\r\n        loadProfileMediaViewerContent(chatId, [photo]);\r\n\r\n        this.loadHistory(photo);\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape': {\r\n                this.handleClose();\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n            }\r\n            case 'ArrowLeft': {\r\n                this.handleNext();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowRight': {\r\n                this.handlePrevious();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    loadHistory = async () => {\r\n        const { chatId } = this.props;\r\n\r\n        if (!isPrivateChat(chatId)) return;\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getUserProfilePhotos',\r\n            user_id: getChatUserId(chatId),\r\n            offset: 0,\r\n            limit: 100\r\n        });\r\n\r\n        this.history = result.photos;\r\n        this.firstSliceLoaded = result.photos.length === 0;\r\n\r\n        const index = 0;\r\n\r\n        this.setState({\r\n            currentIndex: index,\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: result.total_count\r\n        });\r\n\r\n        preloadProfileMediaViewerContent(chatId, index, this.history);\r\n    };\r\n\r\n    handleClose = () => {\r\n        setProfileMediaViewerContent(null);\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { chatId } = this.props;\r\n        const { currentIndex, totalCount } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const photo =\r\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n        if (!photo.big) return;\r\n\r\n        const file = FileStore.get(photo.big.id) || photo.big;\r\n        if (!file) return;\r\n\r\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { chatId } = this.props;\r\n        const { currentIndex, totalCount } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        let inputFile = null;\r\n        let inputMessagePhoto = null;\r\n        const inHistory = this.history && index >= 0 && index < this.history.length;\r\n        if (inHistory) {\r\n            const photo = getProfilePhoto(this.history[index]);\r\n            if (!photo) return;\r\n\r\n            let { big: file } = photo;\r\n            if (!file) return;\r\n\r\n            inputFile = {\r\n                '@type': 'inputFileId',\r\n                id: file.id\r\n            };\r\n        } else {\r\n            const chatPhoto = getPhotoFromChat(chatId);\r\n            if (!chatPhoto) return;\r\n\r\n            const { big: file } = chatPhoto;\r\n            if (!file) return;\r\n\r\n            const blob = FileStore.getBlob(file.id);\r\n            if (!blob) return;\r\n\r\n            inputFile = {\r\n                '@type': 'inputFileBlob',\r\n                data: blob,\r\n                name: ''\r\n            };\r\n        }\r\n\r\n        if (!inputFile) return;\r\n\r\n        const inputMessageContent = {\r\n            '@type': 'inputMessagePhoto',\r\n            photo: inputFile,\r\n            thumbnail: null,\r\n            added_sticker_file_ids: [],\r\n            width: PROFILE_PHOTO_BIG_SIZE,\r\n            height: PROFILE_PHOTO_BIG_SIZE,\r\n            caption: {\r\n                '@type': 'formattedText',\r\n                text: '',\r\n                entities: null\r\n            },\r\n            ttl: 0\r\n        };\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    handleDelete = async () => {\r\n        const { chatId } = this.props;\r\n        const {\r\n            currentIndex,\r\n            totalCount,\r\n            hasNextMedia,\r\n            hasPreviousMedia\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n\r\n        const { id } = photo;\r\n        if (!id) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'deleteProfilePhoto',\r\n            profile_photo_id: id\r\n        });\r\n\r\n        this.history.splice(index, 1);\r\n        if (!this.history.length) {\r\n            this.handleClose();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            totalCount: totalCount - 1\r\n        });\r\n\r\n        if (hasNextMedia) {\r\n            const nextIndex = currentIndex - 1;\r\n\r\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\r\n                if (nextIndex === 0) {\r\n                    this.loadNext();\r\n                }\r\n            });\r\n        }\r\n\r\n        if (hasPreviousMedia) {\r\n            const nextIndex = currentIndex;\r\n\r\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\r\n                if (nextIndex === this.history.length - 1) {\r\n                    this.loadPrevious();\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    hasPreviousMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < this.history.length;\r\n    };\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentIndex } = this.state;\r\n        const nextIndex = currentIndex + 1;\r\n\r\n        return this.loadMedia(nextIndex, { }, () => {\r\n            if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadPrevious = async () => {\r\n        return;\r\n    };\r\n\r\n    hasNextMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    };\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentIndex } = this.state;\r\n        const nextIndex = currentIndex - 1;\r\n\r\n        return this.loadMedia(nextIndex, { }, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadNext = async () => {\r\n        return;\r\n    };\r\n\r\n    loadMedia = (index, obj, callback) => {\r\n        if (index < 0) return false;\r\n        if (index >= this.history.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                currentIndex: index,\r\n                ...obj,\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index)\r\n            },\r\n            callback\r\n        );\r\n\r\n        const { chatId } = this.props;\r\n\r\n        preloadProfileMediaViewerContent(chatId, index, this.history);\r\n        return true;\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const {\r\n            currentIndex,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            totalCount,\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const inHistory = index >= 0 && index < this.history.length;\r\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\r\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\r\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\r\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\r\n        const userProfilePhoto = inHistory ? this.history[index] : null;\r\n        const { big: file } = photo;\r\n        const isMe = isMeChat(chatId);\r\n\r\n        return (\r\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\r\n                <div className='media-viewer-footer'>\r\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\r\n                    <MediaViewerFooterText\r\n                        title={t('AttachPhoto')}\r\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\r\n                    />\r\n                    <div style={{ width: 64 }}/>\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\r\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerDownloadButton>\r\n                    {isMe && (\r\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\r\n                            <DeleteIcon />\r\n                        </MediaViewerFooterButton>\r\n                    )}\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-content-column'>\r\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaViewer.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(ProfileMediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../Utils/HOC';\r\nimport withLanguage from '../Language';\r\nimport withSnackbarNotifications from '../Notifications';\r\nimport Actions from './Actions';\r\nimport Call from './Calls/Call';\r\nimport ChatInfo from './ColumnRight/ChatInfo';\r\nimport Dialogs from './ColumnLeft/Dialogs';\r\nimport DialogDetails from './ColumnMiddle/DialogDetails';\r\nimport ForwardDialog from './Popup/ForwardDialog';\r\nimport GroupCall from './Calls/GroupCall';\r\nimport InstantViewer from './InstantView/InstantViewer';\r\nimport MediaViewer from './Viewer/MediaViewer';\r\nimport PipPlayer from './Player/PipPlayer';\r\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\r\nimport { highlightMessage } from '../Actions/Client';\r\nimport AppStore from '../Stores/ApplicationStore';\r\nimport CallStore from '../Stores/CallStore';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport InstantViewStore from '../Stores/InstantViewStore';\r\nimport UserStore from '../Stores/UserStore';\r\nimport PlayerStore from '../Stores/PlayerStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\nimport '../TelegramApp.css';\r\n\r\nclass MainPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialogDetailsRef = React.createRef();\r\n\r\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\r\n\r\n        this.state = {\r\n            isChatDetailsVisible,\r\n            mediaViewerContent,\r\n            profileMediaViewerContent,\r\n            isSmallWidth,\r\n            forwardInfo: null,\r\n            instantViewContent: null,\r\n            videoInfo: null,\r\n            groupCallId: 0,\r\n            callId: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\r\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\r\n\r\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\r\n        CallStore.on('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\r\n        CallStore.on('clientUpdateCallPanel', this.onClientUpdateCallPanel);\r\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\r\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\r\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\r\n\r\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\r\n        CallStore.off('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\r\n        CallStore.off('clientUpdateCallPanel', this.onClientUpdateCallPanel);\r\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\r\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    onClientUpdateCallPanel = update => {\r\n        const { opened, callId } = update;\r\n\r\n        this.setState({\r\n            callId: opened ? callId : 0\r\n        });\r\n    };\r\n\r\n    onClientUpdateGroupCallPanel = update => {\r\n        const { opened } = update;\r\n        const { currentGroupCall } = CallStore;\r\n\r\n        this.setState({\r\n            groupCallId: currentGroupCall && opened ? currentGroupCall.groupCallId : 0\r\n        });\r\n    };\r\n\r\n    onClientUpdatePictureInPicture = update => {\r\n        const { videoInfo } = update;\r\n\r\n        this.setState({\r\n            videoInfo\r\n        });\r\n    };\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        this.setState({ isSmallWidth });\r\n    };\r\n\r\n    onClientUpdateInstantViewContent = update => {\r\n        const { content } = update;\r\n\r\n        this.setState({\r\n            instantViewContent: content\r\n        });\r\n    };\r\n\r\n    onClientUpdateOpenChat = update => {\r\n        const { chatId, messageId, popup, options } = update;\r\n\r\n        this.handleSelectChat(chatId, messageId, popup, options || AppStore.chatSelectOptions);\r\n    };\r\n\r\n    onClientUpdateOpenUser = update => {\r\n        const { userId, popup } = update;\r\n\r\n        this.handleSelectUser(userId, popup);\r\n    };\r\n\r\n    onClientUpdateChatDetailsVisibility = update => {\r\n        const { isChatDetailsVisible } = AppStore;\r\n\r\n        this.setState({ isChatDetailsVisible });\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        const { mediaViewerContent } = AppStore;\r\n\r\n        this.setState({ mediaViewerContent });\r\n    };\r\n\r\n    onClientUpdateProfileMediaViewerContent = update => {\r\n        const { profileMediaViewerContent } = AppStore;\r\n\r\n        this.setState({ profileMediaViewerContent });\r\n    };\r\n\r\n    onClientUpdateForward = update => {\r\n        const { info } = update;\r\n\r\n        this.setState({ forwardInfo: info });\r\n    };\r\n\r\n    handleSelectChat = (chatId, messageId = null, popup = false, options = null) => {\r\n        const currentChatId = AppStore.getChatId();\r\n        const currentDialogChatId = AppStore.dialogChatId;\r\n        const currentMessageId = AppStore.getMessageId();\r\n\r\n        if (popup) {\r\n            if (currentDialogChatId !== chatId) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateDialogChatId',\r\n                    chatId\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (currentChatId === chatId && messageId && currentMessageId === messageId && !options) {\r\n            this.dialogDetailsRef.current.scrollToMessage();\r\n            if (messageId) {\r\n                highlightMessage(chatId, messageId);\r\n            }\r\n        } else if (currentChatId === chatId && !messageId && !options) {\r\n            this.dialogDetailsRef.current.scrollToStart();\r\n        } else {\r\n            TdLibController.setChatId(chatId, messageId, options);\r\n        }\r\n    };\r\n\r\n    handleSelectUser = async (userId, popup) => {\r\n        if (!userId) return;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: userId,\r\n            force: true\r\n        });\r\n\r\n        this.handleSelectChat(chat.id, null, popup);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            instantViewContent,\r\n            isChatDetailsVisible,\r\n            mediaViewerContent,\r\n            profileMediaViewerContent,\r\n            forwardInfo,\r\n            videoInfo,\r\n            callId,\r\n            groupCallId,\r\n            isSmallWidth\r\n        } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className={classNames('page', {\r\n                        'page-small': isSmallWidth,\r\n                        'page-third-column': isChatDetailsVisible\r\n                    })}>\r\n                    <Dialogs />\r\n                    <DialogDetails ref={this.dialogDetailsRef} />\r\n                    {isChatDetailsVisible && <ChatInfo />}\r\n                </div>\r\n                <Actions/>\r\n                {Boolean(instantViewContent) && <InstantViewer {...instantViewContent} />}\r\n                {Boolean(mediaViewerContent) && <MediaViewer {...mediaViewerContent} />}\r\n                {Boolean(profileMediaViewerContent) && <ProfileMediaViewer {...profileMediaViewerContent} />}\r\n                {Boolean(forwardInfo) && <ForwardDialog {...forwardInfo} />}\r\n                {Boolean(videoInfo) && <PipPlayer {...videoInfo}/>}\r\n                {Boolean(groupCallId) && <GroupCall groupCallId={groupCallId}/>}\r\n                {Boolean(callId) && <Call callId={callId}/>}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMainPage.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withLanguage,\r\n    withSnackbarNotifications\r\n);\r\n\r\nexport default enhance(MainPage);\r\n"],"sourceRoot":""}